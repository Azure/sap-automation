# /*---------------------------------------------------------------------------8
# |                                                                            |
# |         Post Installation activities                                       |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

---

- name:                                "Post Installation: Create run logs directory"
  become_user:                         root
  become:                              true
  ansible.builtin.file:
    path:                              "{{ _workspace_directory }}/logs"
    state:                             directory
    mode:                              0755

- name:                                "Get the SID"
  ansible.builtin.set_fact:
    this_sid:                          "{% if tier == 'web' %}{{ web_sid | upper }}{% else %}{{ sap_sid | upper }}{% endif %}"

- name:                                "Post Installation: Show path"
  ansible.builtin.debug:
    msg:                               "{{ tmp_directory }}/{{ this_sid }}/sapinst_instdir/{{ prefix }}/{{ path }}"
  when:
    - tier != 'hana'
    - tier != 'oracle'

- name:                                "Post Installation: check if installation has been tried"
  become_user:                         root
  become:                              true
  ansible.builtin.stat:
    path:                              "{{ tmp_directory }}/{{ this_sid }}/sapinst_instdir/{{ prefix }}/{{ path }}"
  register:                            sap_installation_tried
  when:
    - tier != 'hana'
    - tier != 'oracle'

- name:                                "Post Installation: Find the log files (SAPINST)"
  become_user:                         root
  become:                              true
  ansible.builtin.find:
    paths:                             "{{ tmp_directory }}/{{ this_sid }}/sapinst_instdir/{{ prefix }}/{{ path }}"
    file_type:                         file
    patterns:                          'sa*.log,ini*.*,Hd*.log'
    recurse:                           false
  register:                            sapinst_log_files
  when:
    - tier != 'hana'
    - tier != 'oracle'
    - sap_installation_tried.stat.exists

- name:                                "Post Installation: Debug (sapinst_log_files)"
  ansible.builtin.debug:
    var:                               sapinst_log_files
    verbosity:                         2
  when:                                sapinst_log_files is defined

- name:                                "Post Installation: Create List (log files)"
  ansible.builtin.set_fact:
    sapinst_list_of_files:             "{{ sapinst_log_files.files | map(attribute='path') | list }}"
  when:
    - sapinst_log_files.files is defined
    - sapinst_log_files.files | length > 0

- name:                                "Post Installation: Debug (sapinst_list_of_files)"
  ansible.builtin.debug:
    msg:                               "{{ sapinst_list_of_files }}"
    verbosity:                         0
  when:                                sapinst_list_of_files is defined

- name:                                "Post Installation: Compress the installation log files"
  become_user:                         root
  become:                              true
  community.general.archive:
    path:                              "{{ sapinst_list_of_files }}"
    dest:                              "{{ tmp_directory }}/{{ this_sid }}/{{ this_sid }}{{ suffix }}.zip"
    format:                            zip
    mode:                              0755
  when:
    - sapinst_list_of_files is defined

- name:                                "Post Installation: Copy installation logs"
  become_user:                         root
  become:                              true
  ansible.builtin.fetch:
    src:                               "{{ tmp_directory }}/{{ this_sid }}/{{ this_sid }}{{ suffix }}.zip"
    dest:                              "{{ _workspace_directory }}/logs/{{ this_sid }}{{ suffix }}.zip"
    flat:                              true
  when:
    - sapinst_list_of_files is defined

- name:                                "Post Installation: HANA"
  block:

    - name:                            "Post Installation: Find the log files (HDBLCM)"
      become_user:                     root
      become:                          true
      ansible.builtin.find:
        paths:                         "{{ tmp_directory }}/{{ db_sid }}"
        file_type:                     file
        patterns:                      'hd*.log'
        recurse:                       true
      register:                        hana_log_files

    - name:                            "Post Installation: Create List (hana)"
      ansible.builtin.set_fact:
        hana_list_of_files:            "{{ hana_log_files.files | map(attribute='path') | list }}"
      when:
        - hana_log_files.files is defined
        - hana_log_files.files | length > 0

    - name:                            "Post Installation: Compress the installation log files (hana)"
      become_user:                     root
      become:                          true
      community.general.archive:
        path:                          "{{ hana_list_of_files }}"
        dest:                          "{{ tmp_directory }}/{{ db_sid }}{{ suffix }}{{ ansible_hostname }}.zip"
        format:                        zip
        mode:                          0755
      when:
        - hana_list_of_files is defined

    - name:                            "Post Installation: Copy installation logs (hana)"
      become_user:                     root
      become:                          true
      ansible.builtin.fetch:
        src:                           "{{ tmp_directory }}/{{ db_sid }}{{ suffix }}{{ ansible_hostname }}.zip"
        dest:                          "{{ _workspace_directory }}/logs/{{ sap_sid }}{{ suffix }}{{ ansible_hostname }}.zip"
        flat:                          true
      when:
        - hana_list_of_files is defined

  when:
    - tier == 'hana'


- name:                                "Post Installation: ORACLE"
  become:                              true
  become_user:                         "root"
  block:

    - name:                            "Post Installation: Find the log files (Oracle)"
      become_user:                     root
      become:                          true
      ansible.builtin.find:
        paths:                         /etc/sap_deployment_automation
        file_type:                     file
        patterns:                      '*.log'
        recurse:                       true
      register:                        oracle_log_files

    - name:                            "Post Installation: Create List (Oracle)"
      ansible.builtin.set_fact:
        oracle_list_of_files:          "{{ oracle_log_files.files | map(attribute='path') | list }}"
      when:
        - oracle_log_files.files is defined
        - oracle_log_files.files | length > 0

    - name:                            "Post Installation: Compress the installation log files (Oracle)"
      become_user:                     root
      become:                          true
      community.general.archive:
        path:                          "{{ oracle_list_of_files }}"
        dest:                          "/etc/sap_deployment_automation{{ ansible_hostname }}.zip"
        format:                        zip
        mode:                          0755

      when:
        - oracle_log_files is defined

    - name:                            "Post Installation: Copy installation logs (Oracle)"
      become_user:                     root
      become:                          true
      ansible.builtin.fetch:
        src:                           "/etc/sap_deployment_automation{{ ansible_hostname }}.zip"
        dest:                          "{{ _workspace_directory }}/logs/{{ sap_sid }}Oracle{{ ansible_hostname }}.zip"
        flat:                          true
      when:
        - oracle_log_files is defined
  when:
    - tier == 'oracle'

...
# /*---------------------------------------------------------------------------8
# |                                   END                                      |
# +------------------------------------4--------------------------------------*/
