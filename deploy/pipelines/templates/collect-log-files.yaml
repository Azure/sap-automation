parameters:
  logPath: ""
steps:
  - script: |
      #!/bin/bash

      # Ensure that the script fails if a command fails. 
      set -e

      if [ -d ${LOG_PATH} ] && [ $(ls ${LOG_PATH}/*.zip | wc -l ) -gt 0 ]; then
        echo "Found log files in ${LOG_PATH}"
        
        cd ${LOG_PATH} 
        git config --global user.email "${USER_EMAIL}"
        git config --global user.name "${USER_NAME}"

        echo "Checking out ${SOURCE_BRANCH} branch..."
        git checkout -q ${SOURCE_BRANCH}
        echo "Pulling last changes..."
        git pull

        echo "Adding new logs..."
        git add --ignore-errors .
        if [ $(git status | grep '#' | wc -l) -gt 0 ]; then
            echo "Commiting changes..."
            git commit -m "Adding new logs"
            echo "Pushing changes..."
            git push
        else
            echo "No changes to commit"
        fi
      else
        echo "No logs found in ${LOG_PATH}"
      fi
    displayName: Store log files in repository
    continueOnError: true
    env:
      USER_EMAIL: $(Build.RequestedForEmail)
      USER_NAME: $(Build.RequestedFor)
      SOURCE_BRANCH: $(Build.SourceBranchName)
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
      LOG_PATH: ${{ parameters.logPath }}

  # - publish: ${{ parameters.logPath }}
  #   artifact: logs_$(date +%s)
  #   continueOnError: true
