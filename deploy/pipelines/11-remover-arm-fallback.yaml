---
# /*---------------------------------------------------------------------------8
# |                                                                            |
# |      This pipeline removes the SAP systems, the workload zone (landscape)  |
# |      and the region via ARM resource group deletion.                       |
# |                                                                            |
# |      The pipeline can be used as fallback in case the terraform            |
# |      destroy doesn't remove everything                                     |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

name: Remove deployment [$(Date:yyyyMMdd)]
parameters:
  - name:                              cleanupsap
    displayName:                       Remove the SAP system
    type:                              boolean
    default:                           true

  - name:                              sap_system
    displayName:                       "SAP System configuration name, use this format: ENV-LOCA-VNET-SID"
    type:                              string
    default:                           DEV-WEEU-SAP01-X00

  - name:                              cleanupzone
    displayName:                       Remove the SAP workload zone
    type:                              boolean
    default:                           true

  - name:                              workloadzone
    displayName:                       "SAP workload zone configuration name, use this format: ENV-LOCA-VNET-INFRASTRUCTURE"
    type:                              string
    default:                           DEV-WEEU-SAP01-INFRASTRUCTURE

  - name:                              cleanupregion
    displayName:                       Remove the control plane
    type:                              boolean
    default:                           true

  - name:                              deployer
    displayName:                       "Deployer configuration name, use this format: ENV-LOCA-VNET-INFRASTRUCTURE"
    type:                              string
    default:                           MGMT-WEEU-DEP00-INFRASTRUCTURE

  - name:                              library
    displayName:                       "Library configuration name, use this format: ENV-LOCA-SAP_LIBRARY"
    type:                              string
    default:                           MGMT-WEEU-SAP_LIBRARY

trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  - group: "SAP-deployment-variables-general"
  - group: "SAP-deployment-variables-specific"
  - name:  deployerfolder
    value: ${{ parameters.deployer }}
  - name:  deployerconfig
    value: ${{ parameters.deployer }}.tfvars
  - name:  libraryfolder
    value: ${{ parameters.library }}
  - name:  libraryconfig
    value: ${{ parameters.library }}.tfvars
  - name:  zonefolder
    value: ${{ parameters.workloadzone }}
  - name:  zoneconfig
    value: ${{ parameters.workloadzone }}.tfvars
  - name:  sapsystemfolder
    value: ${{ parameters.sap_system }}
  - name:  sapsystemconfig
    value: ${{ parameters.sap_system }}.tfvars
  - name:  log
    value: logfile_$(Build.BuildId)

stages:
  - stage:                             Remove_SAP_systems
    displayName:                       "Remove SAP System"
    condition:                         eq(${{ parameters.cleanupsap }}, true)
    jobs:
      - job:                           Remove_SAP_system_RG
        displayName:                   "Remove SAP System $(sapsystemfolder)"
        steps:
          - task:                      AzureResourceManagerTemplateDeployment@3
            displayName:               "Remove Resource Group $(sapsystemfolder)"
            inputs:
              deploymentScope:         "Resource Group"
              azureResourceManagerConnection: "$(AZURE_CONNECTION_NAME)"
              subscriptionId:          "$(ARM_SUBSCRIPTION_ID)"
              action:                  "DeleteRG"
              resourceGroupName:       "$(sapsystemfolder)"

      - job: Remove_sap_deployment_artefacts_in_WORKSPACES
        steps:
          - script: |
              #!/bin/bash
              green="\e[1;32m" ; reset="\e[0m"
              echo -e "$green--- Adding deployment automation configuration to devops repository ---$reset"
                git config --global user.email "$(Build.RequestedForEmail)"
                git config --global user.name "$(Build.RequestedFor)"
                git -c http.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" pull  origin $(Branch)
                git rm -r $(Deployment_Configuration_Path)/SYSTEM/$(sapsystemfolder)/.terraform
                git rm    $(Deployment_Configuration_Path)/SYSTEM/$(sapsystemfolder)/sap-parameters.yaml
                git rm    $(Deployment_Configuration_Path)/SYSTEM/$(sapsystemfolder)/*.md
                git rm    $(Deployment_Configuration_Path)/SYSTEM/$(sapsystemfolder)/*.zip
                git rm    $(Deployment_Configuration_Path)/SYSTEM/$(sapsystemfolder)/*_hosts.yaml
                git commit -m "Added updates from devops deployment $(Build.DefinitionName) [skip ci]"
                git -c http.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" push  origin HEAD:$(Branch)
            displayName: Remove_sap_deployment_artefacts_in_WORKSPACES
            env:
              SYSTEM_ACCESSTOKEN:      $(System.AccessToken)
            failOnStderr:              false

  - stage:                             Remove_SAP_workloadzone
    displayName:                       "Remove SAP workload zone"
    condition:                         eq(${{ parameters.cleanupzone }}, true)
    jobs:
      - job:                           Remove_SAP_workloadzone
        displayName:                   "Remove SAP workload zone $(zonefolder)"
        steps:
          - task:                      AzureResourceManagerTemplateDeployment@3
            displayName:               "Remove Resource Group $(zonefolder)"
            inputs:
              deploymentScope:         "Resource Group"
              azureResourceManagerConnection: "$(AZURE_CONNECTION_NAME)"
              subscriptionId:           "$(ARM_SUBSCRIPTION_ID)"
              action:                  "DeleteRG"
              resourceGroupName:       "$(zonefolder)"

      - job:                           Remove_zone_deployment_artefacts_in_WORKSPACES
        steps:
          - script: |
              #!/bin/bash
              green="\e[1;32m" ; reset="\e[0m"
              echo -e "$green--- Adding deployment automation configuration to devops repository ---$reset"
                export ENV=$(echo $(zonefolder)  | awk -F'-' '{print $1}' | xargs) ; echo Environment $ENV
                export LOCA=$(echo $(zonefolder) | awk -F'-' '{print $2}' | xargs) ; echo Location    $LOCA
                git config --global user.email "$(Build.RequestedForEmail)"
                git config --global user.name "$(Build.RequestedFor)"
                git -c http.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" pull  origin $(Branch)
                git rm    $(Deployment_Configuration_Path)/.sap_deployment_automation/${ENV}${LOCA}
                git rm    $(Deployment_Configuration_Path)/.sap_deployment_automation/${ENV}${LOCA}.md                
                git rm -r $(Deployment_Configuration_Path)/LANDSCAPE/$(zonefolder)/.terraform
                git commit -m "Added updates from devops deployment $(Build.DefinitionName) [skip ci]"
                git -c http.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" push  origin HEAD:$(Branch)
            displayName: Remove_zone_deployment_artefacts_in_WORKSPACES
            env:
              SYSTEM_ACCESSTOKEN:      $(System.AccessToken)
            failOnStderr:              true

  - stage:                             Remove_Control_plane
    displayName:                       Remove Control Plane
    condition:                         eq(${{ parameters.cleanupregion }}, true)
    jobs:
      - job:                           Remove_SAP_library
        displayName:                   "Remove SAP Library ${{ parameters.library }}"
        steps:
          - task:                      AzureResourceManagerTemplateDeployment@3
            displayName:               "Remove Resource Group ${{ parameters.library }}"
            inputs:
              deploymentScope:         "Resource Group"
              azureResourceManagerConnection: "$(AZURE_CONNECTION_NAME)"
              subscriptionId:          "$(ARM_SUBSCRIPTION_ID)"
              action:                  "DeleteRG"
              resourceGroupName:       "${{ parameters.library }}"

      - job:                           Remove_Deployer
        displayName:                   "Remove Deployer ${{ parameters.deployer }}"
        steps:
          - task:                      AzureResourceManagerTemplateDeployment@3
            displayName:               "Remove Deployer ${{ parameters.deployer }}"
            inputs:
              deploymentScope:         "Resource Group"
              azureResourceManagerConnection: "$(AZURE_CONNECTION_NAME)"
              subscriptionId:          "$(ARM_SUBSCRIPTION_ID)"
              action:                  "DeleteRG"
              resourceGroupName:       "${{ parameters.deployer }}"

      - job:                           Remove_region_deployment_artefacts_in_WORKSPACES
        steps:
          - script: |
              #!/bin/bash
              green="\e[1;32m" ; reset="\e[0m"
              echo -e "$green--- Adding deployment automation configuration to devops repository ---$reset"
                export ENV=$(echo $(deployerfolder)  | awk -F'-' '{print $1}' | xargs) ; echo Environment $ENV
                export LOCA=$(echo $(deployerfolder) | awk -F'-' '{print $2}' | xargs) ; echo Location    $LOCA
                git config --global user.email "$(Build.RequestedForEmail)"
                git config --global user.name "$(Build.RequestedFor)"
                git -c http.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" pull  origin $(Branch)
                git rm    $(Deployment_Configuration_Path)/.sap_deployment_automation/${ENV}${LOCA}
                git rm    $(Deployment_Configuration_Path)/.sap_deployment_automation/${ENV}${LOCA}.md
                git rm -r $(Deployment_Configuration_Path)/DEPLOYER/$(deployerfolder)/.terraform
                git rm -r $(Deployment_Configuration_Path)/LIBRARY/$(libraryfolder)/.terraform
                git rm    $(Deployment_Configuration_Path)/LIBRARY/$(libraryfolder)/backend-config.tfvars
                git commit -m "Added updates from devops deployment $(Build.DefinitionName) [skip ci]"
                git -c http.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" push origin HEAD:$(Branch)
            displayName:               Remove_region_deployment_artefacts_in_WORKSPACES
            env:
              SYSTEM_ACCESSTOKEN:      $(System.AccessToken)
            failOnStderr:              true
...
