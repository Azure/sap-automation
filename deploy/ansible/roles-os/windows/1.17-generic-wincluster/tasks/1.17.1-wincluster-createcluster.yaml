---

# This user must have the permission to create the CNO (Cluster Name Object)
# in Active Directory. This need not be a domain admin account.

# ClusterIPAddress            = '192.168.100.20/24'
# ClusterName                 = 'Cluster1'

# If the CNO is prestaged, then the computer object must be disabled for the
# resource Cluster to be able to create the cluster.
# If the CNO is not prestaged, then the credential used in the Cluster resource
# must have the permission in Active Directory to create the CNO (Cluster Name
# Object).

# by default the cluster is created with nostorage option
# https://github.com/dsccommunity/FailoverClusterDsc/blob/main/source/DSCResources/DSC_Cluster/DSC_Cluster.psm1#L204

- name:                                "WinCluster-Create: Calculating the domain value from {{ domain_name }}"
  ansible.builtin.set_fact:
    domain:                            "{{ domain_name | split('.') | first }}"
    cacheable:                         true
  when:
    - domain_name is defined
    - domain_name | type_debug != 'NoneType'
    - domain_name | trim | length > 1
    - domain is not defined

- name:                                "WinCluster-Create: Print the variables from {{ domain_name }}"
  ansible.builtin.debug:
    msg:
      - "ClusterName is {{ cluster_name }}"
      - "ClusterIPAddress is {{ cluster_ip_address }}"
      - "DomainName is {{ domain_name }}"
      - "Domain Service Account is {{ domain_service_account }}"
  when:
    - domain is defined
    - domain | type_debug != 'NoneType'
    - domain | trim | length > 1

- name:                                "WinCluster-Create: Get witness account details"
  delegate_to:                         localhost
  ansible.builtin.import_tasks:
    file:                              "roles-misc/0.2-kv-secrets/tasks/wincluster-witness.yaml"
  when:
    - scs_high_availability or db_high_availability
    - "'scs' in node_tier or 'ers' in node_tier or 'sqlserver' in node_tier"

- name:                                "WinCluster-Create: Create windows cluster on the first node"
  become:                              true
  become_method:                       "runas"
  become_user:                         '{{ sap_sid }}adm@{{ domain }}'
  ansible.windows.win_dsc:
    resource_name:                     Cluster
    StaticIPAddress:                   "{{ cluster_ip_address }}"
    Name:                              "{{ cluster_name }}"
    PsDscRunAsCredential_username:     "{{ domain_service_account }}@{{ domain_name }}"
    PsDscRunAsCredential_password:     "{{ domain_service_password }}"
  when:
    - ansible_hostname == primary_node

- name:                                "WinCluster-Create: Add {{ ansible_hostname }} to the cluster"
  ansible.windows.win_dsc:
    resource_name:                      ClusterNode
    Name:                               "{{ cluster_name }}"
    NodeName:                           "{{ ansible_hostname }}"
  when:
    - ansible_hostname == primary_node

- name:                                "WinCluster-Create: Tasks for secondary nodes"
  block:
    - name:                            "WinCluster-Create: Wait for cluster to be created"
      ansible.windows.win_dsc:
        resource_name:                  WaitForCluster
        Name:                           "{{ cluster_name }}"
        RetryIntervalSec:               10
        RetryCount:                     60

    - name:                                "WinCluster-Create: Add {{ ansible_hostname }} to the cluster"
      ansible.windows.win_dsc:
        resource_name:                      ClusterNode
        Name:                               "{{ cluster_name }}"
        NodeName:                           "{{ ansible_hostname }}"
  when:
    - ansible_hostname == secondary_node

- name:                                "WinCluster-Create: Create quorum resource"
  ansible.windows.win_dsc:
    resource_name:                     ClusterQuorum
    Type:                              "NodeAndCloudMajority"
    IsSingleInstance:                  "Yes"
    Resouce:                           "{{ witness_storage_account_name }}"
    StorageAccountAccessKey:           "{{ witness_storage_account_key }}"
    PsDscRunAsCredential_username:     "{{ domain_service_account }}@{{ domain_name }}"
    PsDscRunAsCredential_password:     "{{ domain_service_password }}"
  when:
    - ansible_hostname == primary_node

- name:                                "WinCluster-Create: Add shared disk resource to cluster (only execute on scs node)"
  when:
    - scs_high_availability
    - node_tier in ['scs']
    - cluster_exists.stdout == "True"
    - ansible_hostname == primary_node
  block:
    # We expect to see only one disk added, so get the first disk number.
    - name:                            "WinCluster-Create: Get shared disk resource"
      ansible.windows.win_powershell:
        script: |
                                       "Get-Disk | Where-Object PartitionStyle -eq 'RAW' | Select-Object -ExpandProperty Number -First 1"
      register:                        shared_disk_number

    - name:                            "WinCluster-Create: Create disk label"
      ansible.builtin.set_fact:
        disk_label:                    "{{ sap_sid | upper }}SharedDisk"
        cacheable:                     true
      when:
        - shared_disk_number is defined
        - shared_disk_number | type_debug != 'NoneType'
        - shared_disk_number | trim | length > 1

    # PartitionStyle defaults to GPT, so not passing it along
    - name:                            "WinCluster-Create: Format the shared Disk"
      ansible.windows.win_dsc:
        resource_name:                 Disk
        DiskId:                        "{{ shared_disk_number }}"
        DriveLetter:                   "{{ shared_disk_drive_letter }}"
        FSFormat:                      "ReFS"
        FSLabel:                       "{{ disk_label }}"
        AllocationUnitSize:            "4096"

    # Get the disk number using cluster cmdlets
    # Note: If the disk is already in the cluster. we need to be careful
    # Todo: make this a bit more robust.
    - name:                           "WinCluster-Create: Get shared disk resource"
      ansible.windows.win_powershell:
        script: |
                                       "Get-ClusterAvailableDisk -All | Select-Object -ExpandProperty Number -First 1"
      register:                        shared_disk_number

    - name:                            "WinCluster-Create: Initialize shared disk resource"
      ansible.windows.win_dsc:
        resource_name:                 ClusterDisk
        number:                        "{{ shared_disk_number }}"
        Label:                         "{{ disk_label }}"
        Ensure:                        "Present"
        PsDscRunAsCredential_username: "{{ domain_service_account }}@{{ domain_name }}"
        PsDscRunAsCredential_password: "{{ domain_service_password }}"
      when:
        - shared_disk_number is defined
        - shared_disk_number | type_debug != 'NoneType'
        - shared_disk_number | trim | length >= 1

...
