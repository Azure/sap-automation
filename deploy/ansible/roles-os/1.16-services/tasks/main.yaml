---
# /*---------------------------------------------------------------------------8
# |                                                                            |
# |               Task: 1.16       - Services for OS                           |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- name:                                "1.16 -  Enable/Disable and Stop/Start Required Services"
  ansible.builtin.include_vars:        os-services.yaml

# Analyse the service list for this distribution selecting only those
# services assigned to the active tier or 'all'.
- name:                                 "1.16 - Determine services appropriate for tier"
  ansible.builtin.set_fact:
    services_to_process:               "{{ services[distribution_id] |
                                         selectattr('tier', 'in', ['all', tier]) |
                                         selectattr('node_tier', 'in', ['all', node_tier]) |
                                         list }}"

# Print list of matching services if verbosity is 1 or greater
- name:                                "[DEBUG] 1.16 - Show services"
  ansible.builtin.debug:
    var:                               services_to_process
    verbosity:                         2

- name:                                "1.16 - Populate service facts : {{ distro_name }}"
  ansible.builtin.service_facts:

- name:                                "[DEBUG] 1.16 - Show services"
  ansible.builtin.debug:
    var:                               ansible_facts.services
    verbosity:                         2

# Extract the list of service names whose state match the specified value and
# pass them as the argument to the name parameter; this is the recommended
# approach as it only calls the underlying distro specific service manager
# once per state value.
- name:                                "1.16 - Start Services : {{ distro_name }}"
  ansible.builtin.service:
    name:                              "{{ item.service }}"
    state:                             started
  loop:                                "{{ services_to_process |
                                         selectattr('state', 'equalto', 'started') |
                                         list }}"
#  when:                                item.service in ansible_facts.services

- name:                                "1.16 - Restart Services : {{ distro_name }}"
  ansible.builtin.service:
    name:                              "{{ item.service }}"
    state:                             restarted
  loop:                                "{{ services_to_process |
                                         selectattr('state', 'equalto', 'restarted') |
                                         list }}"
#  when:                                item.service in ansible_facts.services

- name:                                "1.16 - Reload Services : {{ distro_name }}"
  ansible.builtin.service:
    name:                              "{{ item.service }}"
    state:                             restarted
  loop:                                "{{ services_to_process |
                                         selectattr('state', 'equalto', 'reloded') |
                                         list }}"
#  when:                                item.service in ansible_facts.services

- name:                                "1.16 - Enable Services : {{ distro_name }}"
  ansible.builtin.service:
    name:                              "{{ item.service }}"
    enabled:                            true
  loop:                                "{{ services_to_process |
                                         selectattr('state', 'equalto', 'enabled') |
                                         list }}"
#  when:                                item.service in ansible_facts.services

- name:                                "1.16 - Stop Services : {{ distro_name }}"
  ansible.builtin.service:
    name:                              "{{ item.service }}"
    state:                             stopped
  loop:                                "{{ services_to_process |
                                           selectattr('state', 'equalto', 'stopped') |
                                           list }}"
#  when:                                item.service in ansible_facts.services

- name:                                "1.16 - Disable Services : {{ distro_name }}"
  ansible.builtin.service:
    name:                              "{{ item.service }}"
    enabled:                           false
  loop:                                "{{ services_to_process |
                                           selectattr('state', 'equalto', 'disabled') |
                                           list }}"
#  when:                                item.service in ansible_facts.services

# /*----------------------------------------------------------------------------8
# |                             Custom services                                 |
# +------------------------------------4---------------------------------------*/

- name:                                "1.16 - Populate service facts : {{ distro_name }}"
  ansible.builtin.service_facts:

# Analyse the service list for this distribution selecting only those
# services assigned to the active tier or 'all'.
- name:                                "1.16 - Determine custom defined services appropriate for tier"
  ansible.builtin.set_fact:
    custom_services_to_process:        "{{ custom_services[distribution_full_id] |
                                         selectattr('tier', 'in', ['all', tier]) |
                                         selectattr('node_tier', 'in', ['all', node_tier]) |
                                         list }}"
  when:                                custom_services is defined

- name:                                "1.16 - Process custom services"
  block:
    # Print list of matching services if verbosity is 1 or greater
    - name:                            "[DEBUG] 1.16 - Show custom defined services"
      ansible.builtin.debug:
        var:                           custom_services_to_process
        verbosity:                     2

    - name:                            "1.16 - Start custom defined services : {{ distro_name }}"
      ansible.builtin.service:
        name:                          "{{ item.service }}"
        state:                         started
      loop:                            "{{ custom_services_to_process |
                                            selectattr('state', 'equalto', 'started') |
                                            list }}"

    - name:                            "1.16 - Restart custom defined services : {{ distro_name }}"
      ansible.builtin.service:
        name:                          "{{ item.service }}"
        state:                         restarted
      loop:                            "{{ custom_services_to_process |
                                            selectattr('state', 'equalto', 'restarted') |
                                            list }}"

    - name:                            "1.16 - Reload custom defined services : {{ distro_name }}"
      ansible.builtin.service:
        name:                          "{{ item.service }}"
        state:                         restarted
      loop:                            "{{ custom_services_to_process |
                                            selectattr('state', 'equalto', 'reloded') |
                                            list }}"

    - name:                            "1.16 - Enable custom defined services : {{ distro_name }}"
      ansible.builtin.service:
        name:                          "{{ item.service }}"
        enabled:                       true
      loop:                            "{{ custom_services_to_process |
                                          selectattr('state', 'equalto', 'enabled') |
                                          list }}"

    - name:                            "1.16 - Stop custom defined services : {{ distro_name }}"
      ansible.builtin.service:
        name:                          "{{ item.service }}"
        state:                         stopped
      loop:                            "{{ custom_services_to_process |
                                            selectattr('state', 'equalto', 'stopped') |
                                            list }}"

    - name:                            "1.16 - Disable custom defined services : {{ distro_name }}"
      ansible.builtin.service:
        name:                          "{{ item.service }}"
        enabled:                       false
      loop:                            "{{ custom_services_to_process |
                                          selectattr('state', 'equalto', 'disabled') |
                                          list }}"

  when:                                custom_services_to_process is defined


# /*----------------------------------------------------------------------------8
# |                                    END                                      |
# +------------------------------------4---------------------------------------*/
