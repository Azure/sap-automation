# /*---------------------------------------------------------------------------8
# |                                                                            |
# |             Add 2nd IP addresses to a VM operating system in RHEL          |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- name:                                "1.10 Networking - Get the IP information from instance meta data service"
  ansible.builtin.command: curl -H Metadata:true --noproxy "*" "http://169.254.169.254/metadata/instance/network/interface/0?api-version=2021-02-01"
  register:                            azure_metadata
  no_log:                              true
  changed_when:                        false
  args:
    warn:                              false

- name:                                "1.10 Networking - Pass the output of instance meta data to azure meta data function"
  ansible.builtin.set_fact:
    json_azure_data:                   "{{ azure_metadata.stdout | from_json }}"
  no_log: true

- name:                                "1.10 Networking - Filter out the values for IPAddresses in json format"
  ansible.builtin.set_fact:
    private_ips_info: "{{ json_azure_data | json_query('ipv4.ipAddress') }}"
  no_log: true

- name:                                "1.10 Networking - Convert ips to list"
  ansible.builtin.set_fact:
    ipadd: "{{ private_ips_info | map(attribute='privateIpAddress') | list }}"
  no_log: true

- name:                                "1.10 Networking - Get the secondary IP"
  ansible.builtin.set_fact:
    secondary_ip:                      "{{ ipadd[1] }}"
  no_log: true
  when:
    - ipadd is defined
    - ipadd | length > 1

- name:                                "1.10 Networking - Print ip info"
  ansible.builtin.debug:
    msg:                               "{{ json_azure_data }}"
    verbosity:                         2

- name:                                "1.10 Networking - Print ipaddress"
  ansible.builtin.debug:
    msg:                               "{{ private_ips_info }}"
    verbosity:                         2

- name:                                "1.10 Networking - Print Secondary ip"
  ansible.builtin.debug:
    msg:                               "Secondary IP: {{ secondary_ip }}"
    verbosity:                         2
  when:
    - secondary_ip is defined

- name:                                "1.10 Networking - Create the file with secondary ip"
  ansible.builtin.blockinfile:
    create:                            true
    path:                              /etc/sysconfig/network-scripts/ifcfg-eth0:0
    marker_begin:                      "-- BEGIN"
    marker_end:                        "-- END"
    block: |
      DEVICE=eth0:0
      BOOTPROTO=static
      ONBOOT=yes
      IPADDR="{{ secondary_ip }}"
      NETMASK=255.255.255.0
    mode:                              755
  register:                            definition_made
  when:
    - secondary_ip is defined

# Restart Network service
- name:                                "1.10 Networking - Restart Network service"
  ansible.builtin.command:             ifup eth0
  when:
    - definition_made.changed
...
# /*----------------------------------------------------------------------------8
# |                                    END                                      |
# +------------------------------------4--------------------------------------*/
