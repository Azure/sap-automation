---

# /*---------------------------------------------------------------------------8
# |                                                                            |
# |                         OS Base Disk Configuration                         |
# |                                                                            |
# +------------------------------------4--------------------------------------*/
# -------------------------------------+---------------------------------------8
#
# Task: 1.5     Expand volumes
#
# -------------------------------------+---------------------------------------8

# # Check the free size of the volume group
# Extend the logical volumes [tmplv & rootlv] to the required size and resize the FS
#

# -------------------------------------+---------------------------------------8
#

- name:                                "1.5 Expand Volumes - Gather facts"
  ansible.builtin.setup:
  become:                              true
  become_user:                         root

- name:                                "1.5 Expand Volumes - Check that {{ vg_root }} exists"
  ansible.builtin.set_fact:
    rootvg_exists:                     "{{ ansible_lvm.vgs[ vg_root ] is defined }}"

- name:                                "1.5 Expand Volumes - Expand"
  when:                                rootvg_exists | default(false)
  block:

    - name:                            "1.5 Expand Volumes - Get Volume Group information"
      ansible.builtin.shell:           set -o pipefail && vgdisplay --units g {{ vg_root }} | grep 'Free  PE / Size' | awk '{print $(NF-1)}'
      register:                        vg_info
      changed_when:                    false

    - name:                            "1.5 Expand Volumes - Extract free size of the VG"
      ansible.builtin.set_fact:
        vg_free_size:                  "{{ vg_info.stdout | float }}"
      when:
        - vg_info is defined
        - vg_info.stdout is defined

    - name:                            "1.5 Expand Volumes - Check if free size is more than 20 GB"
      ansible.builtin.set_fact:
        sufficient_vg_space:           "{{ vg_free_size | default(0) | float > 20.0 }}"
      when:
        - vg_free_size is defined
        - node_tier not in ['oracle', 'oracle-asm', 'ase', 'hana', 'db2']

    - name:                            "1.5 Expand Volumes - Check if free size is more than 30 GB"
      ansible.builtin.set_fact:
        sufficient_vg_space_db:        "{{ vg_free_size | default(0) | float > 30.0 }}"
      when:
        - vg_free_size is defined
        - node_tier in ['oracle', 'oracle-asm', 'ase', 'hana', 'db2']


    # ------------------<DEBUGGING>-------------------
    - name:                            "1.5 Expand Volumes - Print volume group details"
      ansible.builtin.debug:
        msg:
          - "vg_info:                  {{ vg_info }}"
          - "vg_free_size:             {{ vg_free_size }}"
          - "sufficient_vg_space:      {{ sufficient_vg_space | default(false)}}"
          - "sufficient_vg_space_db:   {{ sufficient_vg_space_db | default(false)}}"
          - "host:                     {{ inventory_hostname }}"
        verbosity:                     2
    # ------------------</DEBUGGING>------------------

    - name:                            "1.5 Expand Volumes - Extend the logical volumes and resize the FS"
      community.general.lvol:
        vg:                            "{{ item.vg }}"
        lv:                            "{{ item.lv }}"
        size:                          "{{ item.size }}"
        active:                        true
        state:                         present
        shrink:                        false
        resizefs:                      true
      loop:
        - { vg: '{{ vg_root }}',    lv: 'rootlv',    size: '{{ lv_root_size }}' }
        - { vg: '{{ vg_root }}',    lv: 'tmplv',     size: '{{ lv_tmp_size }}'  }
      when:
        - sufficient_vg_space | default(false)
        - node_tier not in ['oracle', 'oracle-asm', 'ase', 'hana', 'db2']

    - name:                            "1.5 Expand Volumes - Extend the logical volumes and resize the FS"
      community.general.lvol:
        vg:                            "{{ item.vg }}"
        lv:                            "{{ item.lv }}"
        size:                          "{{ item.size }}"
        active:                        true
        state:                         present
        shrink:                        false
        resizefs:                      true
      loop:
        - { vg: '{{ vg_root }}',    lv: 'rootlv',    size: '{{ lv_root_size_db }}' }
        - { vg: '{{ vg_root }}',    lv: 'tmplv',     size: '{{ lv_tmp_size }}'  }
      when:
        - sufficient_vg_space_db | default(false)
        - node_tier in ['oracle', 'oracle-asm', 'ase', 'hana', 'db2']

    # ------------------<DEBUGGING>-------------------
    - name:                            "1.5 Expand Volumes - Print recent Volume Group size and Logical Volume information"
      ansible.builtin.shell: |
                                       set -o pipefail
                                       vgdisplay --units g {{ vg_root }} | grep 'Free  PE / Size' | awk '{print $(NF-1)}'
                                       lvdisplay {{ vg_root }}
      register:                        recent_info

    - name:                            "1.5 Expand Volumes - Print volume group details"
      ansible.builtin.debug:
        msg:
          - "vg_info:                  {{ recent_info | to_nice_json }}"
        verbosity:                     2
    # ------------------</DEBUGGING>------------------
