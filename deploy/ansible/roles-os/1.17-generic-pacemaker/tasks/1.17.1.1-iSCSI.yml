# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

---
# /*---------------------------------------------------------------------------8
# |                                                                            |
# +------------------------------------4--------------------------------------*/
# https://learn.microsoft.com/en-us/azure/sap/workloads/high-availability-guide-suse-pacemaker#set-up-the-iscsi-target-server-sbd-device


- name:                                "1.17.1 iSCSI packages"
  community.general.zypper:
    name:                              "{{ item }}"
    state:                             present
  loop:
    - open-iscsi
    - sbd

- name:                                "1.17.1 iSCSI packages"
  ansible.builtin.systemd:
    name:                              "{{ item }}"
    enabled:                           true
  loop:
    - iscsid
    - iscsi
    - sbd

- name:                                "1.17.1 iSCSI packages - Get node type on which we will operate"
  ansible.builtin.set_fact:
    iscsi_node_type: >-
                                       {%- set _clusterType = 'scs' -%}
                                       {%- if ('hana' in supported_tiers) -%}
                                       {%-   set _clusterType = 'db' -%}
                                       {%- endif -%}
                                       {%- if ('db2' in supported_tiers) -%}
                                       {%-   set _clusterType = 'db' -%}
                                       {%- endif -%}
                                       {{- _clusterType -}}

- name:                                "1.17.1 iSCSI packages - Get initiator name"
  ansible.builtin.set_fact:
    iscsi_initiator_name:              "{{ iscsi_servers |
                                           selectattr('type', 'equalto', iscsi_node_type) |
                                           map(attribute='iqn') | list | unique | first }}"

- name:                                "1.17.1 iSCSI packages - print iSCSI node type and initiator name"
  when:                                 iscsi_node_type is defined and iscsi_initiator_name is defined
  ansible.builtin.debug:
    msg:                               "iSCSI node type: {{ iscsi_node_type }}, initiator name: {{ iscsi_initiator_name }}"
    verbosity:                         2

- name:                                "1.17.1 iSCSI packages - Set the acl names"
  ansible.builtin.set_fact:
    acl_name_scs_1:                    "iqn.2006-04.{{ sap_sid | lower }}-x{{ iscsi_node_type }}-0.local:{{ sap_sid | lower }}-x{{ iscsi_node_type }}-0"
    acl_name_scs_2:                    "iqn.2006-04.{{ sap_sid | lower }}-x{{ iscsi_node_type }}-1.local:{{ sap_sid | lower }}-x{{ iscsi_node_type }}-1"
    acl_name_db_1:                     "iqn.2006-04.{{ sap_sid | lower }}-x{{ iscsi_node_type }}-0.local:{{ sap_sid | lower }}-x{{ iscsi_node_type }}-0"
    acl_name_db_2:                     "iqn.2006-04.{{ sap_sid | lower }}-x{{ iscsi_node_type }}-1.local:{{ sap_sid | lower }}-x{{ iscsi_node_type }}-1"

- name:                                "1.17.1 iSCSI packages - print acl names"
  ansible.builtin.debug:
    msg:                               "acl_name_scs_1: {{ acl_name_scs_1 }}, acl_name_scs_2: {{ acl_name_scs_2 }}, acl_name_db_1: {{ acl_name_db_1 }}, acl_name_db_2: {{ acl_name_db_2 }}"
    verbosity:                         2

- name:                                "1.17.1 iSCSI configuration - replace InitiatorName - SCS"
  when:
    - iscsi_node_type == 'scs'
  block:
    - name:                            "1.17.1 iSCSI configuration - replace InitiatorName for {{ iscsi_node_type }} - {{ primary_instance_name }}"
      ansible.builtin.replace:
        path:                          /etc/iscsi/initiatorname.iscsi
        regexp:                        '^InitiatorName=.*$'
        replace:                       'InitiatorName={{ acl_name_scs_1 }}'
        backup:                        true
      when:
        - inventory_hostname == primary_instance_name

    - name:                            "1.17.1 iSCSI configuration - replace InitiatorName for {{ iscsi_node_type }} - {{ secondary_instance_name }}"
      ansible.builtin.replace:
        path:                          /etc/iscsi/initiatorname.iscsi
        regexp:                        '^InitiatorName=.*$'
        replace:                       'InitiatorName={{ acl_name_scs_2 }}'
        backup:                        true
      when:
        - inventory_hostname == secondary_instance_name

- name:                                "1.17.1 iSCSI configuration - replace InitiatorName - DB"
  when:
    - iscsi_node_type == 'db'
  block:
    - name:                            "1.17.1 iSCSI configuration - replace InitiatorName for {{ iscsi_node_type }} - {{ primary_instance_name }}"
      ansible.builtin.replace:
        path:                          /etc/iscsi/initiatorname.iscsi
        regexp:                        '^InitiatorName=.*$'
        replace:                       'InitiatorName={{ acl_name_db_1 }}'
        backup:                        true
      when:
        - inventory_hostname == primary_instance_name

    - name:                            "1.17.1 iSCSI configuration - replace InitiatorName for {{ iscsi_node_type }} - {{ secondary_instance_name }}"
      ansible.builtin.replace:
        path:                          /etc/iscsi/initiatorname.iscsi
        regexp:                        '^InitiatorName=.*$'
        replace:                       'InitiatorName={{ acl_name_db_2 }}'
        backup:                        true
      when:
        - inventory_hostname == secondary_instance_name

- name:                                "1.17.1 iSCSI configuration - restart iSCSI services"
  ansible.builtin.systemd:
    name:                              "{{ item }}"
    state:                             restarted
  loop:
    - iscsid
    - iscsi

- name:                                "1.17.1 iSCSI configuration block - iterate through the available iSCSI servers"
  when:
    - iscsi_node_type is defined
    - iscsi_initiator_name is defined
  block:
    # error codes:
    # https://github.com/open-iscsi/open-iscsi/blob/master/include/iscsi_err.h
    # Old code:
    # set -o errexit
    # iscsiadm -m discovery --type=st --portal={{ item.host }}:3260
    # iscsiadm -m node -T {{ item.iqn }} --login --portal={{ item.host }}:3260
    # iscsiadm -m node -p {{ item.host }}:3260 -T {{ item.iqn }} --op=update --name=node.startup --value=automatic

    - name:                            "1.17.1 iSCSI configuration on cluster servers for {{ iscsi_node_type }} - discovery, login and update node.startup"
      community.general.open_iscsi:
        login:                         true
        portal:                        "{{ item.host }}"
        # auto_portal_startup:           true
        auto_node_startup:             true
        discover:                      true
        target:                        "{{ item.iqn }}"
        rescan:                        true
      loop:                            "{{ iscsi_servers }}"
      register:                        iscsi_configuration_result
      failed_when:                     false
      when:
        # - iscsi_node_type == 'scs'
        - iscsi_node_type in ['scs', 'db']
        - iscsi_initiator_name == item.iqn

    - name:                                "1.17.1 iSCSI packages - print iSCSI configuration result"
      when:
        - iscsi_node_type is defined
        - iscsi_node_type in ['scs', 'db']
      ansible.builtin.debug:
        msg:                               "{{ iscsi_configuration_result }}"
        verbosity:                         2

    # - name:                            "1.17.1 iSCSI configuration on cluster servers for {{ iscsi_node_type }} - discovery, login and update node.startup"
    #   community.general.open_iscsi:
    #     login:                         true
    #     portal:                        "{{ item.host }}"
    #     # auto_portal_startup:           true
    #     auto_node_startup:             true
    #     discover:                      true
    #     target:                        "{{ item.iqn }}"
    #     rescan:                        true
    #   loop:                            "{{ iscsi_servers }}"
    #   register:                        iscsi_configuration_result
    #   failed_when:                     false
    #   when:
    #     - iscsi_node_type == 'db'
    #     - iscsi_initiator_name == item.iqn

- name:                                "1.17.1 reload iSCSI on cluster servers"
  ansible.builtin.systemd:
    name:                              "{{ item }}"
    enabled:                           true
    daemon_reload:                     true
  loop:
    - iscsid
    - iscsi

- name:                                "1.17.1 iSCSI packages - Select iscsi_configuration_result device nodes list"
  ansible.builtin.set_fact:
    iscsi_devices_on_client:           "{{ iscsi_configuration_result.results | selectattr('devicenodes', 'defined') |
                                           map(attribute='devicenodes') | select() | flatten(levels=1) |
                                           default([]) | unique | list }}"
  when:
    - iscsi_configuration_result is defined

- name:                                "1.17.1 iSCSI packages - Set product of ansible_play_hosts_all in group and iscsi_configuration_result devices on client"
  ansible.builtin.set_fact:
    iscsi_device_map:                  "{{ [ansible_hostname] | product(iscsi_devices_on_client) |
                                           default([]) | unique | list }}"
  when:
    - iscsi_configuration_result is defined

- name:                                "1.17.1 iSCSI packages - Show product of servers in group and iscsi_configuration_result devicenodes attribute"
  ansible.builtin.debug:
    msg:
      - "iscsi_devices_on_client:      {{ iscsi_devices_on_client }}"
      - "iscsi_device_map:             {{ iscsi_device_map }}"
    verbosity:                         2
  when:
    - iscsi_configuration_result is defined

- name:                                "1.17.1 iSCSI Check if iSCSI configuration was successful"
  ansible.builtin.fail:
    msg:                               "iSCSI configuration failed"
  when:
    - iscsi_devices_on_client == []
    - iscsi_device_map == []

...
