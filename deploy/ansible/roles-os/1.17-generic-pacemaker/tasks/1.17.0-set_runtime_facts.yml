---

# /*---------------------------------------------------------------------------8
# |                                                                            |
# |      Set Runtime Paramters - e.g Sub ID , Resource group name              |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

# ----------------------------------------
# BEGIN
# ----------------------------------------

- name:                                "1.17 Generic Pacemaker - Retrieve Subscription ID and Resource Group Name"
  ansible.builtin.command:             curl -H Metadata:true --noproxy "*" "http://169.254.169.254/metadata/instance?api-version=2021-02-01"
  register:                            azure_metadata
  no_log:                              true
  changed_when:                        false
  args:
    warn:                              false

- name:                                "1.17 Generic Pacemaker - Show IMDS results"
  ansible.builtin.debug:
    var:                               azure_metadata
    verbosity:                         2

- name:                                "1.17 Generic Pacemaker - Save the Json data to a Variable as a Fact"
  ansible.builtin.set_fact:
    json_azure_data:                   "{{ azure_metadata.stdout | from_json }}"
  no_log:                              true

- name:                                "1.17 Generic Pacemaker - Extract details"
  ansible.builtin.set_fact:
    fencing_spn_subscription_id: "{{ json_azure_data | json_query('compute.subscriptionId') }}"
    resource_group_name:               "{{ json_azure_data | json_query('compute.resourceGroupName') }}"
  no_log:                              true

- name:                                "1.17 Generic Pacemaker - Extract details"
  ansible.builtin.set_fact:
    primary_vm_name:                   "{{ json_azure_data | json_query('compute.name') }}"
  when:                                ansible_hostname == primary_instance_name
  no_log:                              true

- name:                                "1.17 Generic Pacemaker - Extract VM Name"
  ansible.builtin.set_fact:
    secondary_vm_name:                 "{{ json_azure_data | json_query('compute.name') }}"
  when:                                ansible_hostname == secondary_instance_name
  no_log:                              true

- name:                                "1.17 Generic Pacemaker - Set the primary and secondary instance nic IP - eth0"
  ansible.builtin.set_fact:
    primary_instance_ip:               "{{ hostvars[primary_instance_name]['ansible_eth0']['ipv4']['address'] }}"
    secondary_instance_ip:             "{{ hostvars[secondary_instance_name]['ansible_eth0']['ipv4']['address'] }}"

- name:                                "1.17 Generic Pacemaker - Set the subnet prefix"
  ansible.builtin.set_fact:
    subnet_prefix:                     "{{ json_azure_data | json_query('network.interface[0].ipv4.subnet[0].prefix') }}"

- name:                                "1.17 Generic Pacemaker - Show Details"
  ansible.builtin.debug:
    msg:
      - "SUBSCRIPTION   : {{ fencing_spn_subscription_id }}"
      - "RESOURCE GROUP : {{ resource_group_name }}"
      - "SUBNET PREFIX  : {{ subnet_prefix }}"
    verbosity:                         2

# Configure SSH Keys for inter-node communication as root for SUSE
- name:                                    "1.17 Generic Pacemaker - Configure SSH Keys for inter-node communication as root for SUSE"
  block:
    - name:                                "1.17 Generic Pacemaker - Ensure there are SSH keys for the root user to communicate between nodes"
      ansible.builtin.shell:               ssh-keygen -b 4096 -t rsa -f /root/.ssh/id_rsa -q -N ""
      args:
        creates:                           /root/.ssh/id_rsa

    - name:                                "1.17 Generic Pacemaker - Ensure there is a public key for the root user SSH key"
      ansible.builtin.shell:               ssh-keygen -f /root/.ssh/id_rsa -y > /root/.ssh/id_rsa.pub
      args:
        creates:                           /root/.ssh/id_rsa.pub

    - name:                                "1.17 Generic Pacemaker - Ensure the Public SSH keys are available for exchanging SSH key trust between nodes"
      ansible.builtin.command:             cat /root/.ssh/id_rsa.pub
      register:                            cluster_public_ssh_key
      changed_when:                        false

    - name:                                "1.17 Generic Pacemaker - Set SSH fact"
      ansible.builtin.set_fact:
        cluster_public_ssh_key:            "{{ cluster_public_ssh_key.stdout }}"
  when: ansible_os_family | upper == "SUSE"
# /*---------------------------------------------------------------------------8
# |                                   END                                     |
# +------------------------------------4--------------------------------------*/

...
