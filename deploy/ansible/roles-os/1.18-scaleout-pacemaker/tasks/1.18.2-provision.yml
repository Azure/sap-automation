---
# /*---------------------------------------------------------------------------8
# |                                                                            |
# | This file runs common pre-provisioning tasks before the                    |
# | OS specific clustering is performed                                        |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- name:                                "1.18.2 Generic Pacemaker - Ensure systemctl daemon is reloaded"
  ansible.builtin.systemd:
    daemon_reload:                     true


# # /*----------------------------Supplimentary tasks for all HANA + majority maker nodes------------#
# # note: we are going to install the hooks in this stage as 4.0.3 runs on all HANA nodes and Observer nodes.
# # 5.5 runs only on HANA nodes, so majority maker will be bypassed, resulting in cluster creation failure since it can't find the resource agent/python hook


- name:                                Implement the Python system replication hook SAPHanaSR-ScaleOut MultiTarget (SUSE)
  when:
    - node_tier in ['observer','hana']
    - platform == 'HANA'
    - database_scale_out
    - database_high_availability
    - ansible_os_family | upper == "SUSE"
  block:
    - name:                            Generate list of deployed packages on current host
      ansible.builtin.package_facts:

    # SAPHanaSR-ScaleOut conflicts with SAPHanaSR and dependencies
    - name:                            "Ensure SAPHanaSR package is absent"
      ansible.builtin.package:
        name:                          SAPHanaSR
        state:                         absent
      when:
        - ansible_facts.packages['SAPHanaSR'] is defined

    - name:                            "Ensure SAPHanaSR-doc package is absent"
      ansible.builtin.package:
        name:                          SAPHanaSR-doc
        state:                         absent
      when:
        - ansible_facts.packages['SAPHanaSR-doc'] is defined

    - name:                            "Ensure yast2-sap-ha package is absent"
      ansible.builtin.package:
        name:                          yast2-sap-ha
        state:                         absent
      when:
        - ansible_facts.packages['yast2-sap-ha'] is defined

    # Ensure SAPHANA SR Scaleout package is installed
    - name:                            "Ensure SAPHanaSR-ScaleOut package is installed"
      ansible.builtin.package:
        name:                          SAPHanaSR-ScaleOut
        state:                         present
      when:
        - ansible_os_family | upper == "SUSE"
        - ansible_facts.packages['SAPHanaSR-ScaleOut'] is not defined

    - name:                            "Ensure SAPHanaSR-ScaleOut-doc package is installed"
      ansible.builtin.package:
        name:                          SAPHanaSR-ScaleOut-doc
        state:                         present
      when:
        - ansible_os_family | upper == "SUSE"
        - ansible_facts.packages['SAPHanaSR-ScaleOut-doc'] is not defined


- name:                                Implement the Scale out Resource Agent hook (REDHAT)
  when:
    - node_tier in ['observer','hana']
    - database_scale_out
    - database_high_availability
    - ansible_os_family | upper == "REDHAT"
  block:
    - name:                            Generate list of deployed packages on current host
      ansible.builtin.package_facts:

    - name:                            "Ensure resource-agents-sap-hana  is absent (REDHAT)"
      ansible.builtin.package:
        name:                          resource-agents-sap-hana
        state:                         absent
      when:
        - ansible_facts.packages['resource-agents-sap-hana'] is defined

    - name:                            "Ensure resource-agents-sap-hana-scaleout  is installed (REDHAT)"
      ansible.builtin.package:
        name:                          resource-agents-sap-hana-scaleout
        state:                         present
      when:
        - ansible_facts.packages['resource-agents-sap-hana-scaleout'] is not defined


# SSH access between nodes is only required on SUSE for crm_clustering
- name:                                "1.18.2 Generic Pacemaker - SUSE specific network and SSH configuration"
  when:                                ansible_os_family | upper == "SUSE"
  block:
    # Change the configuration file for the network interface to prevent the cloud
    # network plugin from removing the virtual IP address (Pacemaker must control
    # the VIP assignment)
    # Refer to: https://www.suse.com/support/kb/doc/?id=7023633 for more information
    - name:                            "1.18.2 Generic Pacemaker - Ensure that network interface is not managed by cloud network plugin"
      become:                          true
      ansible.builtin.lineinfile:
        path:                          /etc/sysconfig/network/ifcfg-eth0
        backup:                        true
        regexp:                        '^CLOUD_NETCONFIG_MANAGE='
        line:                          CLOUD_NETCONFIG_MANAGE='no'
      tags:
        - cloudnetmanage

    - name:                            "1.18.2 Generic Pacemaker - Ensure the current Node trusts public key of particiating nodes"
      ansible.posix.authorized_key:
        user:                          root
        key:                           "{{ hostvars[item].cluster_public_ssh_key }}"
        state:                         present
      when:                            ansible_hostname != item
      with_items:
        - "{{ ansible_play_hosts_all }}"

    - name:                            1.18.2 Generic Pacemaker - Ensure trust relationship is working from current to remaining hosts
      ansible.builtin.command:         ssh -oStrictHostKeyChecking=no {{ item }} "hostname -s"
      register:                        primary_to_secondary_ssh_result
      changed_when:                    false
      failed_when:                     primary_to_secondary_ssh_result.stdout_lines[0] != item
      when:                            ansible_hostname != item
      with_items:
        - "{{ ansible_play_hosts_all }}"


# Clustering commands are based on the Host OS
- name:                                "1.18.2 Generic Pacemaker - Cluster based on {{ ansible_os_family }}"
  ansible.builtin.include_tasks:       "1.18.2.0-cluster-{{ ansible_os_family }}.yml"
  # when:                                cluster_existence_check != 0
