# /*---------------------------------------------------------------------------------------------------8
# |                                                                                                    |
# |                      Playbook for SAP SCS HA Install and Pacemaker configuration                   |
# |                                                                                                    |
# +------------------------------------4--------------------------------------------------------------*/
---

- hosts:                               localhost
  name:                                "SCS Installation Playbook: - Initialization"
  gather_facts:                        false
  vars_files:
    - vars/ansible-input-api.yaml                               # API Input template with defaults

  tasks:

    - name:                            "SCS Installation Playbook: - Create Progress folder"
      ansible.builtin.file:
        path:                          "{{ _workspace_directory }}/.progress"
        state:                         directory
        mode:                          0755

    - name:                            "SCS Installation Playbook: - Remove scs-install-done flag"
      ansible.builtin.file:
        path:                          "{{ _workspace_directory }}/.progress/scs-install-done"
        state:                          absent


    - name:                            "SCS Installation Playbook: - Set scs fact"
      ansible.builtin.set_fact:
        tier:                          scs

    - name:                            "SCS Installation Playbook: - Read/Create passwords"
      ansible.builtin.include_role:
        name:                          roles-misc/0.1-passwords
        public:                        true

      tags:
        - 0.1-passwords

    - name:                            "SCS Installation Playbook: - Read/Create key vault secrets"
      ansible.builtin.include_role:
        name:                          roles-misc/0.2-kv-secrets
        public:                        true
      vars:
        tier:                          fencing
      tags:
        - 0.2-kv-secrets

    - name:                            "SCS Installation Playbook: - Read storage account details"
      include_role:
        name:                          roles-misc/0.3.sap-installation-media-storage-details
        public:                        true
      tags:
        - kv-sap-installation-media-storage-details


# /*---------------------------------------------------------------------------8
# |                                                                            |
# |                       Playbook for SAP SCS Install                         |
# |                                                                            |
# +------------------------------------4--------------------------------------*/


- hosts:                               "{{ sap_sid|upper }}_SCS  :
                                        {{ sap_sid|upper }}_DB"

  name:                                "SCS Installation Playbook: - SCS"
  remote_user:                         "{{ orchestration_ansible_user }}"
  become:                              true
  become_user:                         root
  gather_facts:                        true
  vars_files:
    - vars/ansible-input-api.yaml                                               # API Input template with defaults

  tasks:
# -------------------------------------+---------------------------------------8
#
# Build the list of tasks to be executed in order here.
#
# -------------------------------------+---------------------------------------8
    - name:                            "SCS Installation Playbook: - Standalone SCS Setup"
      block:

        - block:
            - name:                    "SCS Installation Playbook: - Print Instance Numbers"
              ansible.builtin.debug:
                msg:
                  - "hdb_instance_number: {{ hdb_instance_number }}"
                  - "scs_instance_number: {{ scs_instance_number }}"
                verbosity:             2

            - name:                    "SCS Installation Playbook: - SCS Assertions"
              ansible.builtin.assert:
                that:
                  - "scs_instance_number != hdb_instance_number"
                fail_msg:              "Please ensure that the scs_instance_number is different from the hdb_instance_number"
          when:                        (ansible_play_hosts_all | length) == 1

        - name:                        "SCS Installation Playbook: - Set 'scs' tier facts"
          ansible.builtin.set_fact:
            tier:                      scs
            main_password:             "{{ hostvars.localhost.sap_password }}"
            scs_high_availability:     "{{ scs_high_availability }}"
            sapbits_location_base_path: "{{ hostvars.localhost.sapbits_location_base_path }}"
            sapbits_sas_token:         "{{ hostvars.localhost.sapbits_sas_token }}"
          tags:
            - always

        - name:                        "SCS Installation Playbook: - Show SAP password"
          ansible.builtin.debug:
            msg:                       "{{ hostvars.localhost.sap_password }}"
            verbosity:                 4

        - block:
            - name:                    "SCS Installation Playbook: - Install SAPInst"
              ansible.builtin.include_role:
                name:                  roles-sap/5.0.0-scs-install
                
            - name:                    "SCS Installation Playbook: - Ensure scs-install-done flag exists"
              delegate_to:             localhost
              ansible.builtin.file:
                path:                  "{{ _workspace_directory }}/.progress/scs-install-done"
                state:                 touch
                mode:                  0755

          always:
            - name:                    "SCS Installation Playbook: - Get the Error lines from installation output"
              ansible.builtin.set_fact:
                error_lines:           "{{ error_lines | default([]) + [item] }}"
              with_items:              "{{ scs_installation.stdout_lines }}"
              when:
                - scs_installation.stdout_lines is defined
                - '"ERROR" in item'
                - scs_installation.rc > 0

            - name:                    "SCS Installation Playbook: - Run post installation routines"
              ansible.builtin.include_role:
                name:                  roles-sap/7.0.0-post-install
              vars:
                suffix:                "_SCS"
                prefix:                "{{ bom.product_ids.dbl.replace('.','/').replace('/ABAP','').split(':')[1] }}"
                path:                  '/INSTALL/DISTRIBUTED/ABAP/ASCS'
                tier:                  'scs'

            - name:                    "SCS Installation Playbook: - Show errors from HANA installation"
              ansible.builtin.debug:
                msg:                   "{{ error_lines }}"
              when:
                - error_lines is defined

          tags:
            - 5.0.0-scs-install
          vars:
            tier:                      "{{ tier }}"
      when:
        - not scs_high_availability
        - "'scs' in supported_tiers"

# /*---------------------------------------------------------------------------8
# |                                                                            |
# |              Playbook for SAP SCS HA and Pacemaker Resources               |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- hosts:                               "{{ sap_sid|upper }}_SCS :
                                        {{ sap_sid|upper }}_ERS"
  name:                                "SCS HA Install and Pacemaker Resources"
  remote_user:                         "{{ orchestration_ansible_user }}"
  become:                              true
  become_user:                         root
  gather_facts:                        true
  vars_files:
    - vars/ansible-input-api.yaml      # API Input template with defaults

  tasks:
# -------------------------------------+---------------------------------------8
#
# Build the list of tasks to be executed in order here.
#
# -------------------------------------+---------------------------------------8
    - name:                            "SCS HA Installation Playbook: - HA SCS Setup"
      block:
        - name:                        "SCS HA Installation Playbook: - Assertion"
          ansible.builtin.assert:
            that:
              - sap_mnt is defined
            fail_msg:                  A highly available SCS deployment requires a shared sap_mnt


        - name:                        "SCS HA Installation Playbook: - Initialize facts"
          set_fact:
            tier:                      ha
            password_ha_db_cluster:    "{{ hostvars.localhost.db_cluster_password }}"
            main_password:             "{{ hostvars.localhost.sap_password }}"
            primary_instance_name:     "{{ ansible_play_hosts_all[0] }}"         # Setting up Primary Instance Name
            secondary_instance_name:   "{{ ansible_play_hosts_all[1] }}"         # Setting up Secondary Instance Name
            sap_hana_fencing_spn_client_id:  "{{ hostvars.localhost.sap_fencing_spn_client_id }}"
            sap_hana_fencing_spn_client_pwd: "{{ hostvars.localhost.sap_fencing_spn_pwd }}"
            sap_hana_fencing_spn_tenant_id:  "{{ hostvars.localhost.sap_fencing_spn_tenant_id }}"
            sapbits_location_base_path: "{{ hostvars.localhost.sapbits_location_base_path }}"
            sapbits_sas_token:         "{{ hostvars.localhost.sapbits_sas_token }}"
            scs_virtual_hostname:      "{{ sap_sid | lower }}scs{{ scs_instance_number }}cl1"
            ecs_virtual_hostname:      "{{ sap_sid | lower }}ers{{ ers_instance_number }}cl2"
          tags:
            - always
        - block:
            - name:                    "SCS HA Installation Playbook: - Ensure the repositories are registered"
              ansible.builtin.include_role:
                name:                  roles-os/1.3-repository
          tags:
            - 1.3-repository

        - block:
            - name:                    "SCS HA Installation Playbook: - Ensure the packages are registered"
              ansible.builtin.include_role:
                name:                  roles-os/1.4-packages
          tags:
            - 1.4-packages

        - block:
            - name:                    "SCS HA Installation Playbook: - Ensure the kernel parameters are set"
              ansible.builtin.include_role:
                name:                  roles-os/1.9-kernelparameters
          tags:
            - 1.9-kernelparameters

        - block:
            - name:                    "SCS HA Installation Playbook: - Ensure the needed services are started"
              ansible.builtin.include_role:
                name:                  roles-os/1.16-services
          tags:
            - 1.16-services

        - block:
            - name:                    "SCS HA Installation Playbook: - Ensure the correct accounts are set"
              include_role:
                name:                  roles-os/1.11-accounts
                tasks_from:            setup_hanausers_sudoers.yml
          tags:
            - 1.11-accounts

        - block:
            - name:                    "SCS HA Installation Playbook: - Install Pacemaker"
              ansible.builtin.include_role:
                name:                  roles-os/1.17-generic-pacemaker       # Configures the Pacemaker cluster with Azure fence agent
          tags:
            - 1.17-generic-pacemaker

        - block:
            - name:                    "SCS HA Installation Playbook: - Ensure the file systems are mounted"
              ansible.builtin.include_role:
                name:                  roles-sap-os/2.6-sap-mounts
          tags:
            - 2.6-sap-mounts

        - block:
            - name:                    "SCS HA Installation Playbook: - Configure Pacemaker and ASCS/ERS"
              include_role:
                name:                  roles-sap/5.6-scsers-pacemaker
                public:                true

            - name:                    "SCS Installation Playbook: - Ensure scs-install-done flag exists"
              delegate_to:             localhost
              ansible.builtin.file:
                path:                  "{{ _workspace_directory }}/.progress/scs-install-done"
                state:                 touch
                mode:                  0755

          always:

            - name:                    "SCS HA Installation Playbook: - Run post installation routines SCS"
              ansible.builtin.include_role:
                name:                  roles-sap/7.0.0-post-install
              vars:
                suffix:                "_SCS"
                prefix:                "{{ scs_bom_id.replace('.','/').replace('/ABAPHA','').split(':')[1] }}"
                path:                  '/INSTALL/HA/ABAP/ASCS'
                tier:                  'scs'
              when:                    
               - scs_bom_id is defined
               - node_tier == 'scs'


            - name:                    "SCS HA Installation Playbook: - Run post installation routines ERS"
              ansible.builtin.include_role:
                name:                  roles-sap/7.0.0-post-install
              vars:
                suffix:                "_ERS"
                prefix:                "{{ ers_bom_id.replace('.','/').replace('/ABAPHA','').split(':')[1] }}"
                path:                  '/INSTALL/HA/ABAP/ERS'
                tier:                  'ers'
              when:                    
               - ers_bom_id is defined
               - node_tier == 'ers'

            - name:                    "SCS HA Installation Playbook: - Get the Error lines from installation output (SCS)"
              ansible.builtin.set_fact:
                error_lines:           "{{ error_lines | default([]) + [item] }}"
              with_items:              "{{ scs_installation.stdout_lines }}"
              when:
                - scs_installation.stdout_lines is defined
                - scs_installation.rc is defined
                - '"ERROR" in item'

            - name:                    "SCS HA Installation Playbook: - Show errors from SCS installation"
              ansible.builtin.debug:
                msg:                   "{{ error_lines }}"
              when:
                - error_lines is defined

            - name:                    "SCS HA Installation Playbook: - Get the Error lines from installation output (ERS)"
              ansible.builtin.set_fact:
                error_lines:           "{{ error_lines | default([]) + [item] }}"
              with_items:              "{{ ers_installation.stdout_lines }}"
              when:
                - ers_installation.stdout_lines is defined
                - ers_installation.rc is defined
                - '"ERROR" in item'
                - ers_installation.rc > 0

            - name:                    "SCS HA Installation Playbook: - Show errors from ERS installation"
              ansible.builtin.debug:
                msg:                   "{{ error_lines }}"
              when:
                - error_lines is defined

          tags:
            - 5.6-scsers-pacemaker
      when:
        - scs_high_availability
        - "'scs' in supported_tiers or 'ers' in supported_tiers "

...

# /*----------------------------------------------------------------------------8
# |                                    END                                      |
# +------------------------------------4--------------------------------------*/
