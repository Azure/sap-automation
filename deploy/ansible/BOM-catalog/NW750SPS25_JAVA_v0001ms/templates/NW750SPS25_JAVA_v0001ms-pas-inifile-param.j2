##########################################################################################################################################################################################################
#                                                                                                                                                                                                        #
# Installation service 'SAP NetWeaver 7.5 > SAP HANA Database > Installation > Application Server Java > Distributed System > Primary Application Server Instance', product id 'NW_Java_CI:NW750.HDB.PD' #
#                                                                                                                                                                                                        #
##########################################################################################################################################################################################################

# Location of Export CD
SAPINST.CD.PACKAGE.HDBCLIENT                                          = {{ sap_cd_package_hdbclient }}
SAPINST.CD.PACKAGE.CD1                                                = {{ sap_cd_package_cd1 }}
SAPINST.CD.PACKAGE.CD2                                                = {{ sap_cd_package_cd2 }}
SAPINST.CD.PACKAGE.CD3                                                = {{ sap_cd_package_cd3 }}
SAPINST.CD.PACKAGE.CD4                                                = {{ sap_cd_package_cd4 }}
SAPINST.CD.PACKAGE.CD5                                                = {{ sap_cd_package_cd5 }}


# Password for the Diagnostics Agent specific <dasid>adm user. Provided value may be encoded.
# DiagnosticsAgent.dasidAdmPassword                                   = 

# Windows domain in which the Diagnostics Agent users must be created. This is an optional property (Windows only).
# DiagnosticsAgent.domain                                             = 

# Windows only: Password for the Diagnostics Agent specific 'SAPService<DASID>' user.
# DiagnosticsAgent.sapServiceDASIDPassword                            = 

# Specify whether Software Provisioning Manager is to drop the schema if it exists.
# HDB_Schema_Check_Dialogs.dropSchema                                 = false

# The name of the database schema.
HDB_Schema_Check_Dialogs.schemaName                                   = SAPJAVA1

# The password of the database schema.
HDB_Schema_Check_Dialogs.schemaPassword                               = {{ main_password }}

# Specify whether Software Provisioning Manager is to validate the schema name. The schema name must only contain numbers and capital letters. It  must not start with '_' . It cannot be 'SYS' or 'SYSTEM'.
# HDB_Schema_Check_Dialogs.validateSchemaName                         = true

# Initialize database or reset tenant database. For uninstall, drop database tenant
# HDB_System_Check_Dialogs.initTopology                               = false

# If set to 'true', an 'ms_acl_info' file is created. It manages the hosts from which the Message Server accepts connections.
# MessageServer.configureAclInfo                                      = false

# Standard system only: Add gateway process to (A)SCS instance
# NW_CI_Instance.ascsInstallGateway                                   = false

# Standard system only: Add web dispatcher process to (A)SCS instance
# NW_CI_Instance.ascsInstallWebDispatcher                             = false

# Standard system with AS ABAP only: ASCS instance number. Leave empty for default.
# NW_CI_Instance.ascsInstanceNumber                                   = 

# Standard system with AS ABAP only: Virtual host name for the ASCS instance. Leave empty for default.
NW_CI_Instance.ascsVirtualHostname                                    = {{ sap_scs_hostname }}

# Instance number of the primary application server instance. Leave empty for default.
NW_CI_Instance.ciInstanceNumber                                       =  {{ sap_ciInstanceNumber }}

# The ABAP message server port. Leave empty for default.
# NW_CI_Instance.ciMSPort                                             = 

# The internal ABAP message server port. Leave empty for default.
# NW_CI_Instance.ciMSPortInternal                                     = 

# Virtual host name of the primary application server instance . Leave empty for default.
NW_CI_Instance.ciVirtualHostname                                      = {{ sap_scs_hostname }}

# Create file 'prxyinfo(.DAT)' in the global directory, if it does not already exist and set 'gw/prxy_info' in the default profile accordingly.  Default is 'false'.
# NW_CI_Instance.createGlobalProxyInfoFile                            = false

# Create file 'reginfo(.DAT)' in the global directory. Default is 'false'.
# NW_CI_Instance.createGlobalRegInfoFile                              = false

# User-defined number of Java server nodes. Depends on NW_CI_Instance.nodesNumber.
# NW_CI_Instance.nodesNum                                             = 

# Number of Java server nodes. Possible values: 'defNodes' - default number; 'srcNodes' - copy from source; 'userNodes' - user-defined number. Default is 'defNodes'
# NW_CI_Instance.nodesNumber                                          = defNodes

# Standard system with AS Java only: The SCS instance number. Leave empty for default.
# NW_CI_Instance.scsInstanceNumber                                    = 

# The internal Java message server port. Leave empty for default.
# NW_CI_Instance.scsMSPortInternal                                    = 

# Standard system with AS Java only: Virtual host name for the SCS instance. Leave empty for default.
NW_CI_Instance.scsVirtualHostname                                     = {{ sap_scs_hostname }}

# Specify whether the all operating system users are to be removed from group 'sapinst' after the execution of Software Provisioning Manager has completed.
NW_Delete_Sapinst_Users.removeUsers                                   = true

# Master password
NW_GetMasterPassword.masterPwd                                        = {{ main_password }}

# Skip checking if creating a HANA user store is needed. Default value is 'true'. If set to 'false', a valid HANA userstore must exists.
# NW_HDB_DBClient.checkCreateUserstore                                = true

# Install the SAP HANA database client in a central or local directory. Possible values are: 'SAPCPE', 'LOCAL'
# NW_HDB_DBClient.clientPathStrategy                                  = LOCAL

# The DB admin user for SAP HANA tenant database. Default value: SYSTEM
# NW_HDB_getDBInfo.dbadmin                                            = SYSTEM

# The instance number of the SAP HANA database server
NW_HDB_getDBInfo.instanceNumber                                       = {{ db_instance_number }}

# Password of user 'SYSTEM' within the 'SystemDB' tenant in an SAP HANA MultiDB server
# NW_HDB_getDBInfo.systemDbPassword                                   = 

# The SQL port for SAP HANA tenant database
# NW_HDB_getDBInfo.tenantPort                                         = 

# DEPRECATED, DO NOT USE!
# NW_SAPCrypto.SAPCryptoFile                                          = 

# Enable the instance agent (sapstartsrv) data supplier to send operating system information to the System Landscape Directory (SLD). Default is 'false'.
# NW_SLD_Configuration.configureSld                                   = false

# Host of the System Landscape Directory (SLD)
# NW_SLD_Configuration.sldHost                                        = 

# Port used to connect to the System Landscape Directory (SLD)
# NW_SLD_Configuration.sldPort                                        = 

# Use HTTPS. Default is 'false'.
# NW_SLD_Configuration.sldUseHttps                                    = false

# The user that is to authenticate towards the System Landscape Directory (SLD)
# NW_SLD_Configuration.sldUser                                        = 

# User password to authenticate towards the System Landscape Directory (SLD). Note: The connection is not checked by Software Provisioning Manager.
# NW_SLD_Configuration.sldUserPassword                                = 

# SAP INTERNAL USE ONLY
# NW_System.installSAPHostAgent                                       = true

# DEPRECATED, DO NOT USE!
# NW_Unpack.dbaToolsSar                                               = 

# DEPRECATED, DO NOT USE!
NW_Unpack.igsExeSar                                                   = {{ target_media_location }}/download_basket/igsexe_13-80003187.sar

# DEPRECATED, DO NOT USE!
NW_Unpack.igsHelperSar                                                = {{ target_media_location }}/download_basket/igshelper_17-10010245.sar

# DEPRECATED, DO NOT USE!
NW_Unpack.sapExeDbSar                                                 = {{ target_media_location }}/download_basket/SAPEXEDB_1100-80002572.SAR

# DEPRECATED, DO NOT USE!
# NW_Unpack.sapExeSar                                                 = 

# DEPRECATED, DO NOT USE!
NW_Unpack.sapJvmSar                                                   = {{ target_media_location }}/download_basket/SAPJVM8_91-80000202.SAR

# DEPRECATED, DO NOT USE!
# NW_Unpack.xs2Sar                                                    = 

# SAP INTERNAL USE ONLY
# NW_adaptProfile.templateFiles                                       = 

# ABAP message server port for connecting to the message server, leave empty for default
# NW_checkMsgServer.abapMSPort                                        = 

# The FQDN of the system
# NW_getFQDN.FQDN                                                     = 

# SAP INTERNAL USE ONLY
# NW_getFQDN.resolve                                                  = true

# Specify whether you want to set FQDN for the system.
# NW_getFQDN.setFQDN                                                  = true

# The path to the jce policy archive to install it into the java home directory if it is not already installed.
# NW_getJavaHome.jcePolicyArchive                                     = 

# JCE cryptographic policy activation. Possible values 'limited', 'unlimited'. Default value 'unlimited'.
# NW_getJavaHome.jcePolicyDecision                                    = unlimited

# Manual configuration and execution of Migration Monitor or manual native database copy method.
# NW_getLoadType.importManuallyExecuted                               = false

# The load type chosen by the user. Valid values are: 'SAP', 'STD', 'OBR', 'HCP', 'FLASHCOPY', 'MDA', 'HBR', 'SBR'
NW_getLoadType.loadType                                               = SAP

# ABAP system is Unicode (true|false), only needed if it cannot be determined from the system.
# NW_getUnicode.isUnicode                                             = 

# SAP INTERNAL USE ONLY
NW_internal.useProductVersionDescriptor                               = true

# Provide  'profile' directory of SAP Netweaver-based system.
NW_readProfileDir.profileDir                                          = {{ sap_profile_dir }}

# Windows only: The drive to use
# NW_readProfileDir.sapdrive                                          = 

# Controls whether build archives are copied to the system. This parameter is overwritten by the 'copyBuildarchives' switch in product.xml.
Prepare_Deployment_Using_Product_Version_Descriptor.copyNWDIArchives  = false

# Comma-separated list of template IDs of product version instances to be installed. This can be used for unattended runs or for providing an initial selection using an inifile.xml or a parameter file. If an instance of the list is unknown with respect to the product version descriptor, the whole list is ignored.
# Select_PPMS_Instances.ListOfSelectedInstances                       = 

# User Name of the AS Java  Administrator
UmeConfiguration.adminName                                            = Administrator

# Password of the AS Java Administrator
UmeConfiguration.adminPassword                                        = {{ main_password }}

# The guest user account is for anonymous access to the Java application server
UmeConfiguration.guestName                                            = Guest

# User Name of the ABAP communication user
# UmeConfiguration.sapjsfName                                         = SAPJSF

# Password of the ABAP communication user
# UmeConfiguration.sapjsfPassword                                     = 

# ABAP client, mandatory if 'UmeConfiguration.umeType' is 'abap'
# UmeConfiguration.umeClient                                          = 

# ABAP application host, mandatory if 'UmeConfiguration.umeType' is 'abap'
# UmeConfiguration.umeHost                                            = 

# ABAP application server instance number, mandatory if 'UmeConfiguration.umeType' is 'abap'
# UmeConfiguration.umeInstance                                        = 

# The User Management Engine (UME) type. Possible values are 'db' or 'abap'.
# UmeConfiguration.umeType                                            = db

# The folder containing all archives that have been downloaded from http://support.sap.com/swdc and are supposed to be used in this procedure
archives.downloadBasket                                               = {{ target_media_location }}/download_basket

# DBACOCKPIT user is to be created. Default value is 'false'.
# hdb.create.dbacockpit.user                                          = false

# Windows only: The domain of the SAP Host Agent user
# hostAgent.domain                                                    = 

# Password for the 'sapadm' user of the SAP Host Agent
# hostAgent.sapAdmPassword                                            = 

# Windows only: The domain of all users of this SAP system. Leave empty for default.
# nwUsers.sapDomain                                                   = 

# Windows only: The password of the 'SAPServiceSID' user
# nwUsers.sapServiceSIDPassword                                       = 

# UNIX only: The user ID of the 'sapadm' user, leave empty for default. The ID is ignored if the user already exists.
# nwUsers.sapadmUID                                                   = 

# UNIX only: The group id of the 'sapsys' group, leave empty for default. The ID is ignored if the group already exists.
nwUsers.sapsysGID                                                     = {{ sapsys_gid }}

# UNIX only: The user id of the <sapsid>adm user, leave empty for default. The ID is ignored if the user already exists.
nwUsers.sidAdmUID                                                     = {{ sidadm_uid }}

# The password of the '<sapsid>adm' user
# nwUsers.sidadmPassword                                              = 

# SAP INTERNAL USE ONLY
# nw_java_import.buildJEEusingExtraMileTool                           = false

# ABAP schema password
# storageBasedCopy.abapSchemaPassword                                 = 

# Instance number of the SAP HANA Database server
storageBasedCopy.hdb.instanceNumber                                   = {{ db_instance_number }}

# Password of user 'SYSTEM' inside the SAP HANA Database Server
storageBasedCopy.hdb.systemPassword                                   = {{ main_password }}

# Sets the SAP<SAPSID>DB schema password using a  parameter file.
# storageBasedCopy.javaSchemaPassword                                 = 
