---
# /*---------------------------------------------------------------------------8
# |                                                                            |
# |                Retrieve or create the SAP password from keyvault           |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- name:                                "0.1 Password: - Construct SAP system password secret name"
  ansible.builtin.set_fact:
    sap_password_id:                   "{{ secret_prefix }}-{{ sap_sid }}-sap-password"

- name:                                "0.1 Password: - Create Password secret"
  ansible.builtin.command:             az keyvault secret set --vault-name {{ kv_name }} --name {{ sap_password_id }} --value "{{ main_password }}"
  when:
    - main_password is defined
    - "main_password | trim | length != 0"

- name:                                "0.1 Password: - Show SAP system password secret name"
  ansible.builtin.debug:
    var:                               sap_password_id
    verbosity:                         2

- name:                                "0.1 Password: - Get SAP password from key vault"
  ansible.builtin.command: >-
    az keyvault secret list
      --vault-name {{ kv_name }}
      --query [].name
      --output yaml
  changed_when:                        false
  register:                            keyvault_secret_sap_password_exists

- name:                                "0.1 Password: - Check for secret availability"
  ansible.builtin.set_fact:
    secret_exists:                     "{{ (sap_password_id in keyvault_secret_sap_password_exists.stdout) | bool }}"

- name:                                "0.1 Password: - Retrieve SAP system password"
  block:
    - name:                            "0.1 Password: - Get SAP password from key vault"
      ansible.builtin.command: >-
        az keyvault secret show
          --vault-name {{ kv_name }}
          --name {{ sap_password_id }}
          --query value
          --output tsv
      changed_when:                    false
      register:                        keyvault_secret_show_sap_password_value
      no_log:                          true

    - name:                            "0.1 Password: - Extract SAP password"
      ansible.builtin.set_fact:
        sap_password:                  "{{ keyvault_secret_show_sap_password_value.stdout }}"
      no_log:                          true

  when:                                secret_exists

- name:                                "0.1 Password: - Set SAP system password"
  block:

    - name:                            "0.1 Password: - Remove tmp file"
      ansible.builtin.file:
        path:                          /tmp/sappasswordfile
        state:                         absent

    - name:                            "0.1 Password: - Create Password prefix"
      ansible.builtin.set_fact:
        sap_password_pre:              "{{ sap_password_pre | default([]) +
                                            [lookup('password',
                                              '/dev/null
                                              length=1
                                              chars=' ~item)]
                                          }}"
      loop:
        - ascii_lowercase
        - ascii_uppercase
        - digits
      no_log:                          true

    - name:                            "0.1 Password: - Construct SAP system password"
      ansible.builtin.set_fact:
        sap_password:                  "{{ sap_password_pre | join('')
                                          + lookup('password',
                                          '/tmp/sappasswordfile
                                          length=9
                                          chars=ascii_lowercase,ascii_uppercase,digits')
                                        }}"
      no_log:                          true
#    - name:                            "0.1 Password: - Construct SAP system password"
#      ansible.builtin.set_fact:
#        sap_password:                  "S3{{ lookup('password', '/tmp/sappasswordfile length=10 chars=ascii_lowercase,ascii_uppercase,digits') }}"

    - name:                            "0.1 Password: - Create Password secret"
      ansible.builtin.command:         az keyvault secret set --vault-name {{ kv_name }} --name {{ sap_password_id }} --value "{{ sap_password }}"

  when:                                not secret_exists


- name:                                "0.1 Password: - Ensure the password is set"
  ansible.builtin.assert:
    that:
      - "{{ sap_password is defined }}" # Has the variable been defined
      - "{{ sap_password | type_debug != 'NoneType' }}" # Is the variable not empty"
      - "{{ sap_password | trim | length > 8 }}"
    fail_msg: "The SAP main password was not set in key vault"

- name:                                "0.1 Password: - Show SAP Password"
  ansible.builtin.debug:
    var:                               sap_password
    verbosity:                         4

- name:                                "0.1 Password: - Get Cluster passwords"
  ansible.builtin.include_tasks:       0.1.1-ha_clusterpasswords.yaml
  when:                                db_high_availability or scs_high_availability

...
