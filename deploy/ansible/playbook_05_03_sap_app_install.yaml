# /*---------------------------------------------------------------------------8
# |                                                                            |
# |                       Prepare for SAP APP Install                          |
# |                                                                            |
# +------------------------------------4--------------------------------------*/
---

- hosts:                               localhost
  name:                                "APP Playbook: Get SAP Password from KeyVault"
  gather_facts:                        false
  vars_files:
    - vars/ansible-input-api.yaml                               # API Input template with defaults
  tasks:

    - name:                            "APP Playbook: Create Progress folder"
      ansible.builtin.file:
        path:                          "{{ _workspace_directory }}/.progress"
        state:                         directory
        mode:                          0755

    - name:                            "APP Playbook: Create Progress App folder"
      ansible.builtin.file:
        path:                          "{{ _workspace_directory }}/.progress/app"
        state:                         directory
        mode:                          0755

    - name:                            "APP Playbook: Remove app-install-done flag"
      ansible.builtin.file:
        path:                          "{{ _workspace_directory }}/.progress/app-install-done"
        state:                          absent

    - name:                            "APP Playbook: Include 0.1 passwords role"
      ansible.builtin.include_role:
        name:                          roles-misc/0.1-passwords
        public:                        true
      tags:
        - 0.1-passwords

    - name:                            "APP Playbook: Initialize tier"
      ansible.builtin.set_fact:
        tier:                          app

    - name:                            "APP Playbook: Run the sap-installation-media-storage-details role"
      ansible.builtin.include_role:
        name:                          roles-misc/0.3.sap-installation-media-storage-details
        public:                        true
      vars:
        tier:                          app
      tags:
        - kv-sap-installation-media-storage-details

# /*---------------------------------------------------------------------------8
# |                                                                            |
# |                       Playbook for SAP OS USERS and Groups Creation        |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- hosts:                               "{{ sap_sid | upper }}_APP"

  name:                                SAP Generic OS Groups and User Creation
  serial:                              1
  remote_user:                         "{{ orchestration_ansible_user }}"
  become:                              true
  become_user:                         "{{ become_user_name }}"
  gather_facts:                        true                                    # Important to collect hostvars information
  vars_files:
    - vars/ansible-input-api.yaml                                              # API Input template with defaults

  tasks:

    - name:                            "APP Installation Playbook: Define this SID"
      ansible.builtin.set_fact:
        this_sid:
          {
            'sid': '{{ sap_sid | upper }}',
            'dbsid_uid': '{{ hdbadm_uid }}',
            'sidadm_uid': '{{ sidadm_uid }}',
            'ascs_inst_no': '{{ scs_instance_number }}',
            'pas_inst_no': '{{ pas_instance_number }}',
            'app_inst_no': '{{ app_instance_number }}'
          }

    - name:                            "APP Installation Playbook: Define list of SIDs"
      ansible.builtin.set_fact:
        all_sids:                      "{% if MULTI_SIDS is defined %}{{ MULTI_SIDS }}{% else %}{{ all_sids | default([]) + [this_sid] }}{% endif %}"

    - name:                            Generic Users and Groups for SAP Installation
      ansible.builtin.include_role:
        name:                          roles-sap-os/2.5-sap-users
        tasks_from:                    user_nw.yaml
      vars:
        scs_instance_number:          "{{ sid_to_be_deployed.ascs_inst_no }}"
        tier:                          generic
        main_password:                 "{{ hostvars.localhost.sap_password }}"
        sapbits_location_base_path:    "{{ hostvars.localhost.sapbits_location_base_path }}"
        sapbits_sas_token:             "{{ hostvars.localhost.sapbits_sas_token }}"
      loop:                            "{{ all_sids }}"
      loop_control:
        loop_var:                    sid_to_be_deployed
      tags:
        - 2.5-sap-users
      when:                            platform != 'ORACLE'


# /*---------------------------------------------------------------------------8
# |                                                                            |
# |                       Playbook for SAP APP Install                         |
# |                                                                            |
# +------------------------------------4--------------------------------------*/


- hosts:                               "{{ sap_sid | upper }}_APP"

  name:                                SAP Installation - APP
  serial:                              1                                        # Cause App Servers to install sequentially
  remote_user:                         "{{ orchestration_ansible_user }}"
  become:                              true
  become_user:                         "{{ become_user_name }}"
  gather_facts:                        true                                    # Important to collect hostvars information
  vars_files:
    - vars/ansible-input-api.yaml                                              # API Input template with defaults


  tasks:
# -------------------------------------+---------------------------------------8
#
# Build the list of tasks to be executed in order here.
#
# -------------------------------------+---------------------------------------8
    - name:                            "APP Playbook - Install: Set 'app' tier facts"
      ansible.builtin.set_fact:
        tier:                          app                                     # SAP Install phase: APP - Application Server
        main_password:                 "{{ hostvars.localhost.sap_password }}"
        sapbits_location_base_path:    "{{ hostvars.localhost.sapbits_location_base_path }}"
        sapbits_sas_token:             "{{ hostvars.localhost.sapbits_sas_token }}"
        app_file_path:                 INSTALL/AS/APPS/
        always_upload_jinja_templates: false

    - name:                            "APP Installation Playbook: Define this SID"
      ansible.builtin.set_fact:
        this_sid:
          {
            'sid': '{{ sap_sid | upper }}',
            'dbsid_uid': '{{ hdbadm_uid }}',
            'sidadm_uid': '{{ sidadm_uid }}',
            'ascs_inst_no': '{{ scs_instance_number }}',
            'pas_inst_no': '{{ pas_instance_number }}' ,
            'app_inst_no': '{{ app_instance_number }}'
          }

    - name:                            "APP Installation Playbook: Define list of SIDs"
      ansible.builtin.set_fact:
        all_sids:                      "{% if MULTI_SIDS is defined %}{{ MULTI_SIDS }}{% else %}{{ all_sids | default([]) + [this_sid] }}{% endif %}"

    - name:                            Run the APP installation Playbook
      block:
        - name:                        "APP Playbook - Install: Include 2.6-sap-mounts role"
          ansible.builtin.include_role:
            name:                      roles-sap-os/2.6-sap-mounts
      tags:
        - 2.6-sap-mounts

    - name:                            Run the APP installation Playbook
      block:
        - name:                        "APP Playbook - Install: Include 5.3-app-install"
          ansible.builtin.include_role:
            name:                      roles-sap/5.3-app-install
          loop:                        "{{ all_sids }}"
          loop_control:
            loop_var:                  sid_to_be_deployed

        - name:                        "APP Playbook - Install: - Create app-install-done flag"
          delegate_to:                 localhost
          become:                      false
          ansible.builtin.file:
            path:                      "{{ _workspace_directory }}/.progress/app/app-install-done{{ ansible_hostname }}"
            state:                     touch
            mode:                      0755
          when:
            - app_already_installed is defined or (app_installation.rc is defined and app_installation.rc == 0)
      always:
        - name:                        "APP Playbook - Install: Get the error lines"
          ansible.builtin.set_fact:
            error_lines:               "{{ error_lines | default([]) + [item] }}"
          with_items:                  "{{ app_installation.stdout_lines }}"
          when:
            - app_installation.stdout_lines is defined
            - '"ERROR" in item'

        - name:                            "DBLoad: Installation results"
          ansible.builtin.debug:
            msg:
              - "prefix:                    {{ app_bom_id.replace('.', '/').replace('/PD', '').split(':')[1] }}"
              - "path:                      {{ app_file_path }}"

        - name:                        "APP Playbook - Install: Run post install activities"
          ansible.builtin.include_role:
            name:                      roles-sap/7.0.0-post-install
          vars:
            suffix:                    "_APP"
            prefix:                    "{{ app_bom_id.replace('.', '/').replace('/PD', '').split(':')[1] }}"
            path:                      "{{ app_file_path }}"
            tier:                      'app'

        - name:                        "APP Playbook - Install: Errors from APP installation"
          ansible.builtin.debug:
            msg:                       "{{ error_lines }}"
          when:
            - error_lines is defined

      tags:
        - 5.3-app-install

# /*---------------------------------------------------------------------------8
# |                                                                            |
# |                  Playbook for Validating SAP APP Install                   |
# |                                                                            |
# +------------------------------------4--------------------------------------*/


- hosts:                               "{{ sap_sid | upper }}_APP"

  name:                                SAP Post Installation - APP
  serial:                              1                                        # Cause App Servers to install sequentially
  remote_user:                         "{{ orchestration_ansible_user }}"
  become:                              true
  become_user:                         root
  gather_facts:                        true
  vars_files:
    - vars/ansible-input-api.yaml                                               # API Input template with defaults

  tasks:
# -------------------------------------+---------------------------------------8
#
# Build the list of tasks to be executed in order here.
#
# -------------------------------------+---------------------------------------8
    - name:                            "APP Playbook - Post Install: Check for files in progress folder"
      ansible.builtin.find:
        path:                          "{{ _workspace_directory }}/.progress/app"
        patterns:                      "*"
      register:                        find_progress_files
      delegate_to:                     localhost
      become:                          false

    - name:                            "APP Playbook - Post Install: - Create app-install-done flag"
      delegate_to:                     localhost
      become:                          false
      ansible.builtin.file:
        path:                          "{{ _workspace_directory }}/.progress/app-install-done"
        state:                         touch
        mode:                          0755
      when:                            find_progress_files.matched == (ansible_play_hosts | length)

...
# /*---------------------------------------------------------------------------8
# |                                    END                                     |
# +------------------------------------4--------------------------------------*/
