# /*---------------------------------------------------------------------------8
# |                                                                            |
# |                 Playbook for SAP Web Dispatcher Install                    |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

# -------------------------------------+---------------------------------------8
# Role: 5.4 Web Dispatcher Installation
#
# Description:
#
# -------------------------------------+---------------------------------------8

---

- hosts:                               localhost
  name:                                "WEB Installation Playbook: - Initialization"
  gather_facts:                        true
  vars_files:
    - vars/ansible-input-api.yaml                               # API Input template with defaults

  tasks:

    - name:                            "WEB Installation Playbook: - Create Progress folder"
      ansible.builtin.file:
        path:                          "{{ _workspace_directory }}/.progress"
        state:                         directory
        mode:                          0755

    - name:                            "WEB Installation Playbook: - Remove web-install-done flag"
      ansible.builtin.file:
        path:                          "{{ _workspace_directory }}/.progress/web-install-done"
        state:                          absent

    - name:                            "WEB Installation Playbook: - Set pas fact"
      ansible.builtin.set_fact:
        tier:                          pas

    - name:                            "WEB Installation Playbook: - Read/Create passwords"
      ansible.builtin.include_role:
        name:                          roles-misc/0.1-passwords
        public:                        true
      tags:
        - 0.1-passwords

    - name:                            "WEB Installation Playbook: - Read storage account details"
      ansible.builtin.include_role:
        name:                          roles-misc/0.3.sap-installation-media-storage-details
        public:                        true
      vars:
        tier:                          web
      tags:
        - kv-sap-installation-media-storage-details

# /*---------------------------------------------------------------------------8
# |                                                                            |
# |                 Playbook for SAP Web Dispatcher Install                    |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- hosts:                               "{{ sap_sid | upper }}_WEB"

  name:                                SAP Installation - WebDispatcher
  remote_user:                         "{{ orchestration_ansible_user }}"
  become:                              true
  gather_facts:                        true                                    # Important to collect hostvars information
  vars_files:
    - vars/ansible-input-api.yaml                                              # API Input template with defaults

  tasks:
# -------------------------------------+---------------------------------------8
#
# Build the list of tasks to be executed in order here.
#
# -------------------------------------+---------------------------------------8
    - name:                            "WEB Installation Playbook: - Set 'web' tier facts"
      ansible.builtin.set_fact:
        tier:                          web
        main_password:                 "{{ hostvars.localhost.sap_password }}"
        sapbits_location_base_path:    "{{ hostvars.localhost.sapbits_location_base_path }}"
        sapbits_sas_token:             "{{ hostvars.localhost.sapbits_sas_token }}"
        always_upload_jinja_templates: false
        file_path:                     /GENERIC/AS/WI_UC
        sa_enabled:                    true

      tags:
        - always

    - name:                            "WEB Installation Playbook: Define this SID"
      ansible.builtin.set_fact:
        this_sid:
          {
            'sid': '{{ sap_sid | upper }}',
            'web_sid': '{{ web_sid | upper }}',
            'dbsid_uid': '{{ hdbadm_uid }}',
            'sidadm_uid': '{{ sidadm_uid }}',
            'ascs_inst_no': '{{ scs_instance_number }}',
            'pas_inst_no': '{{ pas_instance_number }}' ,
            'app_inst_no': '{{ app_instance_number }}'
          }

    - name:                            "WEB Installation Playbook: Define list of SIDs"
      ansible.builtin.set_fact:
        all_sids:                      "{% if MULTI_SIDS is defined %}{{ MULTI_SIDS }}{% else %}{{ all_sids | default([]) + [this_sid] }}{% endif %}"

    - name:                            Run the WEB installation Playbook
      become:                          true
      block:
        - name:                        "WEB Installation Playbook: - run SAPInst"
          ansible.builtin.include_role:
            name:                      roles-sap/5.4-web-install
          loop:                        "{{ all_sids }}"
          loop_control:
            loop_var:                  sid_to_be_deployed
      always:
        - name:                        "WEB Installation Playbook: - Get the Error lines from installation output"
          ansible.builtin.set_fact:
            error_lines:               "{{ error_lines | default([]) + [item] }}"
          with_items:                  "{{ web_installation.stdout_lines }}"
          when:
            - web_installation.stdout_lines is defined
            - '"ERROR" in item'

        - name:                        "WEB Installation Playbook - Install: Run post install activities"
          ansible.builtin.include_role:
            name:                      roles-sap/7.0.0-post-install
          vars:
            suffix:                    "_WEB"
            prefix:                    ""
            path:                      "{{ file_path }}"
            tier:                      'web'
            this_sid:                  "{{ sid_to_be_deployed.web_sid | upper }}"
          loop:                        "{{ all_sids }}"
          loop_control:
            loop_var:                  sid_to_be_deployed

        - name:                        "WEB Installation Playbook: - Show from WEB installation"
          ansible.builtin.debug:
            msg:                       "{{ error_lines }}"
          when:
            - error_lines is defined


    - name:                            "WEB Installation Playbook: - Create web-install-done flag"
      delegate_to:                     localhost
      become:                          false
      ansible.builtin.file:
        path:                          "{{ _workspace_directory }}/.progress/web-install-done"
        state:                         touch
        mode:                          0755

      tags:
        - 5.4-web-install


...
# /*---------------------------------------------------------------------------8
# |                                    END                                     |
# +------------------------------------4--------------------------------------*/
