# /*---------------------------------------------------------------------------8
# |                                                                            |
# |             SAP: Register BOM                                              |
# |         SAP PAS: deploy PAS Parameter file install template                |
# |         SAP PAS: Install                                                   |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

---

- name:                                "PAS Install: Set the SCS Server name list"
  ansible.builtin.set_fact:
    scs_server_temp:                   "{{ scs_server_temp | default([]) + [item] }}"
  with_items:
    - "{{ query('inventory_hostnames', '{{ sap_sid | upper }}_SCS') }}"
    - "{{ query('inventory_hostnames', '{{ sap_sid | upper }}_DB') }}"

- name:                                "PAS Install: -  Set the DB Server name list"
  ansible.builtin.set_fact:
    db_server_temp:                    "{{ db_server_temp | default([]) + [item] }}"
  with_items:
    - "{{ query('inventory_hostnames', '{{ sap_sid | upper }}_DB') }}"

- name:                                "PAS Install: Set BOM facts"
  ansible.builtin.set_fact:
    sap_inifile:                       "{{ bom_base_name }}-pas-{{ sid_to_be_deployed.sid | lower }}-{{ ansible_hostname }}.params"
    sap_inifile_template:              "{{ bom_base_name }}{{ bom_suffix }}-pas-inifile-param.j2"
    dir_params:                        "{{ tmp_directory }}/.{{ sid_to_be_deployed.sid | lower }}-params"
    db_lb_virtual_host:                "{% if db_high_availability %}{{ sid_to_be_deployed.sid | lower }}{{ db_sid | lower }}db{{ db_instance_number }}cl{% else %}{{ hostvars[db_server_temp | first]['virtual_host'] }}{% endif %}"

- name:                                "PAS Install: -  Create directories"
  ansible.builtin.file:
    path:                              "{{ item.path }}"
    state:                             directory
    mode:                              '{{ item.mode }}'
  loop:
    - { mode: '0755', path: '{{ dir_params }}' }
    - { mode: '0755', path: '{{ tmp_directory }}/{{ sid_to_be_deployed.sid | upper }}' }
    - { mode: '0755', path: '/etc/sap_deployment_automation/{{ sap_sid | upper }}' }

- name:                                "PAS Install: reset"
  ansible.builtin.file:
    path:                              "/etc/sap_deployment_automation/{{ sid_to_be_deployed.sid | upper }}/sap_deployment_pas.txt"
    state:                             absent
  when:                                reinstall

- name:                                "PAS Install: check if {{ sid_to_be_deployed.sid | upper }} is installed"
  ansible.builtin.stat:
    path:                              "/etc/sap_deployment_automation/{{ sid_to_be_deployed.sid | upper }}/sap_deployment_pas.txt"
  register:                            pas_installed

# Returns bom object
- name:                                "PAS Install: Register BoM"
  ansible.builtin.include_role:
    name:                              roles-sap/3.3.1-bom-utility
    tasks_from:                        bom-register
  vars:
    bom_name:                          "{{ bom_base_name }}"
    task_prefix:                       "PAS Install: "
    sa_enabled:                        true

# - name:                                "PAS Install: Default instance type"
#   ansible.builtin.set_fact:
#     instance_type:                     "ASCS"
#     public:                            true
#   when:                                bom.InstanceType is not defined

# - name:                                "PAS Install: register instance type if JAVA"
#   ansible.builtin.set_fact:
#     instance_type:                     "JAVA"
#     public:                            true
#   when:
#     - bom.InstanceType is defined
#     - bom.InstanceType | upper == 'JAVA'

- name:                                "PAS Install: register variables"
  ansible.builtin.set_fact:
    pas_bom_instance_type:             "{% if bom.InstanceType is defined %}{{ bom.InstanceType }}{% else %}ABAP{% endif %}"
    public:                            true

- name:                                "PAS Install"
  block:

# *====================================4=======================================8
# |  SAP PAS: Install                                                          |
# | 2230669 - System Provisioning Using a Parameter Input File                 |
# |                                                                            |
# *====================================4=======================================8

    - name:                            "PAS Install: Set the SCS Server name"
      ansible.builtin.set_fact:
        scs_server:                    "{% if scs_high_availability %}{{ sid_to_be_deployed.sid | lower }}scs{{ scs_instance_number }}cl1{% else %}{{ hostvars[scs_server_temp | first]['virtual_host'] }}{% endif %}"
        db_virtual_host:               "{{ hostvars[db_server_temp | first]['virtual_host'] }}"
        instance_number:               "{% if node_tier == 'pas' %}'00'{% else %}'01'{% endif %}"
        file_path:                     "{% if scs_high_availability %}INSTALL/HA/ABAP/APP1{% else %}INSTALL/DISTRIBUTED/ABAP/APP1{% endif %}"
        DB:                            "{% if MULTI_SIDS is defined %}{{ sid_to_be_deployed.sid | upper }}/HDB{{ db_instance_number }}{% else %}{{ db_sid | upper }}/HDB{{ db_instance_number }}{% endif %}"

    - name:                            "SCS Install: check media exists"
      ansible.builtin.stat:
        path:                          "{{ target_media_location }}/SWPM/sapinst"
      register:                        sapinst_found

    - name:                            "ErrorHandling"
      ansible.builtin.fail:
        msg:                           "INSTALL:0006:Unable to find sapinst, please check that the installation media is mounted"
      when: not sapinst_found.stat.exists

    - name:                            "PAS Install: Include roles-sap/3.3.1-bom-utility role"
      ansible.builtin.include_role:
        name:                          roles-sap/3.3.1-bom-utility
        tasks_from:                    bom-template
      vars:
        task_prefix:                   "PAS Install: "
        always_upload_jinja_templates: false
        bom_name:                      "{{ bom_base_name }}{{ bom_suffix }}"
        sap_cd_package_hdbclient:      "{{ target_media_location }}/CD_HDBCLIENT/SAP_HANA_CLIENT"
        sap_cd_package_cd1:            "{{ target_media_location }}/CD_EXPORT"
        sap_cd_package_cd2:
        sap_cd_package_cd3:
        sap_cd_package_cd4:
        sap_cd_package_cd5:
        sap_ciInstanceNumber:          "{{ instance_number }}"
        app_instance_number:
        sap_ciDialogWPNumber:          12
        sap_ciBtcWPNumber:             8
        sap_installSAPHostAgent:       "false"
        sap_profile_dir:               /sapmnt/{{ sid_to_be_deployed.sid | upper }}/profile
        sap_scs_hostname:              "{{ scs_server }}"
        sap_db_hostname:               "{{ db_lb_virtual_host }}"
        sap_ciVirtualHostname:
        sap_appVirtualHostname:
        param_directory:               "{{ dir_params }}"
        sap_sid:                       "{{ sid_to_be_deployed.sid }}"
        scs_instance_number:           "{{ sid_to_be_deployed.ascs_inst_no }}"
        sidadm_uid:                    "{{ sid_to_be_deployed.sidadm_uid }}"
        virt_do_not_resolve_hostname:  "{{ db_lb_virtual_host }}"
        # support older app inifile templates where hdb_instance_number was used
        hdb_instance_number:           "{{ db_instance_number }}"

    - name:                            "PAS Install: register variables"
      ansible.builtin.set_fact:
        pas_bom_id:                    "{{ bom.product_ids.pas }}"

    - name:                            "PAS Install: install variables"
      ansible.builtin.debug:
        msg:
          - "INSTALLED:  {{ pas_installed.stat.exists }}"
          - "INIFILE:    {{ sap_inifile }}"
          - "PRODUCT ID: {{ pas_bom_id }}"
          - "INSTANCE:   {{ instance_number }}"
          - "DBHOST:     {{ db_virtual_host }}"
          - "HOST:       {{ virtual_host }}"
          - "SID:        {{ sid_to_be_deployed.sid | upper }}"

    - name:                            "PAS Install: HANA HSR - Update Profile"
      ansible.builtin.import_tasks:    ../../../roles-db/4.0.1-hdb-hsr/tasks/4.0.1.7-sap-profile-changes.yml
      vars:
        instance_type:                 "{{ pas_bom_instance_type }}"
      when:
        - db_high_availability
        - platform == "HANA"

    - name:                            "Create temp directory for sid"
      ansible.builtin.file:
        path:                          "{{ tmp_directory }}/{{ sid_to_be_deployed.sid | upper }}"
        state:                         directory
        mode:                          0755

    - name:                            "PAS Install: debug"
      ansible.builtin.command:         "cat {{ dir_params }}/{{ sap_inifile }}"
      register:                        debug_inifile

    - name:                            "PAS Install: progress"
      ansible.builtin.debug:
        var:                           debug_inifile
        verbosity:                     4

    - name:                            "PAS Install: progress"
      ansible.builtin.debug:
        msg:                           "Starting PAS installation ({{ sid_to_be_deployed.sid | upper }})"

    - name:                            "PAS Install"
      ansible.builtin.shell: |
                                       umask {{ custom_umask | default('022') }} ;
                                       ./sapinst SAPINST_INPUT_PARAMETERS_URL={{ dir_params }}/{{ sap_inifile }} \
                                                 SAPINST_EXECUTE_PRODUCT_ID={{ pas_bom_id }}                     \
                                                 SAPINST_SKIP_DIALOGS=true                                       \
                                                 SAPINST_USE_HOSTNAME={{ virtual_host }}                         \
                                                 SAPINST_START_GUISERVER=false
      args:
        chdir:                         "{{ target_media_location }}/SWPM"
        creates:                       "/etc/sap_deployment_automation/{{ sid_to_be_deployed.sid | upper }}/sap_deployment_pas.txt"
      environment:
        TMPDIR:                        "{{ tmp_directory }}/{{ sid_to_be_deployed.sid | upper }}"
        SAPSYSTEMNAME:                 "{{ sid_to_be_deployed.sid | upper }}"
      register:                        pas_installation
      failed_when:                     pas_installation.rc > 0

    - name:                            "PAS Install: Installation results"
      ansible.builtin.debug:
        var:                           pas_installation
      when:                            pas_installation.rc > 0

    - name:                            "PAS Install: Installation results"
      ansible.builtin.debug:
        msg:                           "PAS Installation succeeded"
      when:                            pas_installation.rc == 0

    - name:                            "PAS Install: Cleanup ini file {{ ansible_hostname }}"
      ansible.builtin.file:
        path:                          "{{ dir_params }}/{{ sap_inifile }}"
        state:                         absent

    - name:                            "PAS Install: Find the installationSuccesfullyFinished.dat (SAPINST)"
      ansible.builtin.find:
        paths:                         "{{ tmp_directory }}/{{ sid_to_be_deployed.sid | upper }}/sapinst_instdir/{{ bom.product_ids.pas.replace('.', '/').replace('/ABAP', '').split(':')[1] }}/{{ file_path }}"
        file_type:                     file
        patterns:                      'installationSuccesfullyFinished.dat'
        recurse:                       true
      register:                        pas_installed_according_to_sapinst

    - name:                            "PAS Install: flag"
      ansible.builtin.file:
        path:                          "/etc/sap_deployment_automation/{{ sid_to_be_deployed.sid | upper }}/sap_deployment_pas.txt"
        state:                         touch
        mode:                          0755
      when:
        - pas_installation.rc == 0
        - pas_installed_according_to_sapinst is defined
        - pas_installed_according_to_sapinst | length > 0

    - name:                            "PAS Install: Get hdbuserstore path"
      ansible.builtin.find:
        paths:                         "/usr/sap/{{ sap_sid | upper }}"
        file_type:                     file
        patterns:                      'hdbuserstore'
        recurse:                       true
      register:                        hdbuserstore_file
      when:
        - db_high_availability
        - platform == 'HANA'


    - name:                            "PAS Install: Set hdbuserstore path"
      ansible.builtin.set_fact:
        hdbuserstore_path:             "{{ hdbuserstore_file.files[0].path }}"
      when:
        - db_high_availability
        - platform == 'HANA'
        - hdbuserstore_file | length > 0

    - name:                            "PAS Install: show hdbuserstore path"
      ansible.builtin.debug:
        var:                           hdbuserstore_path
      when:
        - db_high_availability
        - platform == 'HANA'

    - name:                            "PAS Install: Set DB Virtual Host name ({{ db_lb_virtual_host }})"
      become:                          true
      become_user:                     "{{ sid_to_be_deployed.sid | lower }}adm"
      ansible.builtin.shell: |
                                       {{ hdbuserstore_path }} SET DEFAULT {{ db_lb_virtual_host }}:3{{ db_instance_number }}13@{{ db_sid | upper }} {{ hana_schema }} {{ main_password }}
      environment:
        SAPSYSTEMNAME:                 "{{ sid_to_be_deployed.sid | upper }}"
        TMPDIR:                        "{{ hdbuserstore_path }}"
        ssfs_connect:                  "1"
      register:                        hdbuserstore
      vars:
        allow_world_readable_tmpfiles: true
      when:
        - db_high_availability
        - platform == 'HANA'
        - pas_installed_according_to_sapinst is defined
        - pas_installed_according_to_sapinst | length > 0

    - name:                            "PAS Install: Check if Standalone"
      ansible.builtin.set_fact:
        servers_temp:                  "{{ servers_temp | default([]) + [item] }}"
      with_items:
        - "{{ query('inventory_hostnames', '{{ sap_sid | upper }}_SCS') }}"
        - "{{ query('inventory_hostnames', '{{ sap_sid | upper }}_DB') }}"
        - "{{ query('inventory_hostnames', '{{ sap_sid | upper }}_PAS') }}"

    - name:                            "PAS Install: Restart SAPHostCtrl"
      become:                          true
      ansible.builtin.command:         /usr/sap/hostctrl/exe/saphostexec -restart
      register:                        saphostexec_result
      when:                            (servers_temp | length) == 1

    - name:                            "PAS Install: SAPHostCtrl output"
      ansible.builtin.debug:
        var:                           saphostexec_result
      when:                            (servers_temp | length) == 1

  when:
    - not pas_installed.stat.exists

- name:                                "PAS Install: - status"
  block:
    - name:                            "PAS Install: - status"
      ansible.builtin.debug:
        msg:                           "PAS Installation is already performed ({{ sid_to_be_deployed.sid | upper }})"

    - name:                            "PAS Install: - return value"
      ansible.builtin.set_fact:
        pas_already_installed:         true

    - name:                            "PAS Install: Get hdbuserstore path"
      ansible.builtin.find:
        paths:                         "/usr/sap/{{ sap_sid | upper }}"
        file_type:                     file
        patterns:                      'hdbuserstore'
        recurse:                       true
      register:                        hdbuserstore_file
      when:
        - db_high_availability
        - platform == 'HANA'

    - name:                            "PAS Install: Set hdbuserstore path"
      ansible.builtin.set_fact:
        hdbuserstore_path:             "{{ hdbuserstore_file.files[0].path }}"
      when:
        - db_high_availability
        - platform == 'HANA'
        - hdbuserstore_file | length > 0

    - name:                            "PAS Install: show hdbuserstore path"
      ansible.builtin.debug:
        var:                           hdbuserstore_path
      when:
        - db_high_availability
        - platform == 'HANA'

    - name:                            "PAS Install: Set DB Virtual Host name ({{ db_lb_virtual_host }})"
      ansible.builtin.shell: |
                                       {{ hdbuserstore_path }} SET DEFAULT {{ db_lb_virtual_host }}:3{{ db_instance_number }}13@{{ db_sid | upper }} {{ hana_schema }} {{ main_password }}
      environment:
        SAPSYSTEMNAME:                 "{{ sid_to_be_deployed.sid | upper }}"
        ssfs_connect:                  "1"
      register:                        hdbuserstore
      become:                          true
      become_user:                     "{{ sid_to_be_deployed.sid | lower }}adm"
      vars:
        allow_world_readable_tmpfiles: true
      when:
        - db_high_availability
        - platform == 'HANA'


  when:
    - pas_installed.stat.exists
...
# /*---------------------------------------------------------------------------8
# |                                   END                                      |
# +------------------------------------4--------------------------------------*/
