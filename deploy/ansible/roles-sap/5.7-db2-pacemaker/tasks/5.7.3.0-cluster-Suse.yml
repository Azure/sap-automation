---

# SLES Clustering - Deploy DB2 clustering Resources
# Ref: https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/dbms-guide-ha-ibm


- name:                                      " DB2 - Stop the primary DB"
  become:                                   true
  become_user:                          db2{{ db_sid | lower }}
  shell:                                        db2stop force
  args:
    executable: /bin/csh
  environment:
    PATH: "{{ ansible_env.PATH }}:/db2/db2{{ db_sid | lower }}/sqllib/gskit/bin"


- name:                                      Change to ksh Shell 
  ansible.builtin.user:
    name:                                    db2{{ db_sid | lower }}
    shell:                                     /bin/ksh



- name:                                Configure DB2 Cluster Resources 
  block:
    - name:                            Ensure maintenance mode is enabled
      ansible.builtin.command:         "crm configure property maintenance-mode=true"

    - name:                            Ensure the Resource Defaults are configured
      ansible.builtin.shell: >
                                       crm configure rsc_defaults \$id="rsc-options"
                                       resource-stickiness="1000"
                                       migration-threshold="5000"

    - name:                            Ensure SAP DB2 primitive resource is configured
      ansible.builtin.shell: >
                                       crm configure primitive rsc_Db2_db2{{ db_sid | lower }}_{{ db_sid }} \
                                       params instance="db2{{ db_sid | lower }}" dblist="{{ db_sid }}"  \
                                       op start interval="0" timeout="130"  \
                                       op stop interval="0" timeout="120"  \
                                       op promote interval="0" timeout="120" \ 
                                       op demote interval="0" timeout="120"  \
                                       op monitor interval="30" timeout="60" \ 
                                       op monitor interval="31" role="Master" timeout="60"
                              
      register:                        sap_db2_topology_rsc
      failed_when:                     sap_db2_topology_rsc.rc > 1


    - name:                            Ensure SAP DB2 Virtual IP resource is configured
      ansible.builtin.shell: >
                                       crm configure primitive rsc_ip_db2{{ db_sid | lower }}_{{ db_sid }} IPaddr2 
                                       op monitor interval="10s" timeout="20s" 
                                       params ip="{{ db_lb_ip }}"
      register:                        sap_db2_rsc_ip
      failed_when:                     sap_db2_rsc_ip.rc > 1

    # socat is recommended in place of netcat on Azure: https://www.suse.com/support/kb/doc/?id=000019536
    # https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/sap-hana-high-availability
    # Currently we recommend using azure-lb resource agent, which is part of package resource-agents
    
    - name:                            Ensure DB2 azure-lb resource agent is configured - probe port for Azure load Balancer
      ansible.builtin.shell:         >
                                       crm configure primitive rsc_nc_db2{{ db_sid | lower }}_{{ db_sid }} azure-lb port=625{{ hdb_instance_number }} 
      register:                        sap_db2_nc_ip
      failed_when:                     sap_db2_nc_ip.rc > 1

    - name:                            Ensure Group IP Address resource is configured
      ansible.builtin.shell: >
                                       crm configure group g_ip_db2{{ db_sid | lower }}_{{ db_sid }}
                                       rsc_ip_db2{{ db_sid | lower }}_{{ db_sid }}
                                       rsc_nc_db2{{ db_sid | lower }}_{{ db_sid }}
      register:                        sap_db2_g_ip
      failed_when:                     sap_db2_g_ip.rc > 1


    - name:                            Ensure Master resource is created 
      ansible.builtin.shell: >
                                       crm configure ms msl_Db2_db2{{ db_sid | lower }}_{{ db_sid }} rsc_Db2_db2{{ db_sid | lower }}_{{ db_sid }}
                                       meta target-role="Started" notify="true"
      register:                        sap_db2_msl
      failed_when:                     sap_db2_msl.rc > 1
      
    - name:                            Ensure Co-Location constraint is configured
      ansible.builtin.shell: >
                                       crm configure colocation col_db2_db2{{ db_sid | lower }}_{{ db_sid }} inf: g_ip_db2{{ db_sid | lower }}_{{ db_sid }}:Started
                                       msl_Db2_db2{{ db_sid | lower }}_{{ db_sid }}:Master
      register:                        sap_db2_g_col_ip
      failed_when:                     sap_db2_g_col_ip.rc > 1

    - name:                            Ensure Resource order is configured
      ansible.builtin.shell: >
                                       crm configure order ord_db2_ip_db2{{ db_sid | lower }}_{{ db_sid }} inf: msl_Db2_db2{{ db_sid | lower }}_{{ db_sid }}:promote
                                       g_ip_db2{{ db_sid | lower }}_{{ db_sid }}:start
      register:                        sap_db2_ord_ip
      failed_when:                     sap_db2_ord_ip.rc > 1

  #  - name:                            Ensure any required cluster resources are cleaned up
  #    ansible.builtin.command:         "crm resource cleanup rsc_SAPHana_{{ db_sid | upper }}_HDB{{ hdb_instance_number }}"

    - name:                            Ensure maintenance mode is disabled
      ansible.builtin.command:         crm configure property maintenance-mode=false

  when:                                ansible_hostname == primary_instance_name

