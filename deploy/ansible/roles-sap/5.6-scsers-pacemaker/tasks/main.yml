---
- name:                                "5.6 SCSERS Pacemaker - set_runtime_facts"
  ansible.builtin.include_tasks:
    file:                              5.6.1-set_runtime_facts.yml
    apply:
      tags:
        - 5.6.1-set_runtime_facts
      become:                          true
      become_user:                     root

- name:                                "5.6 SCSERS Pacemaker - pre_checks"
  ansible.builtin.include_tasks:
    file:                              5.6.2-pre_checks.yml
    apply:
      tags:
        - 5.6.2-pre_checks
      become:                          true
      become_user:                     root

- name:                                "5.6 SCSERS Pacemaker - prep_steps"
  ansible.builtin.include_tasks:
    file:                              5.6.3-prep_steps.yml
    apply:
      tags:
        - 5.6.3-prep_steps
      become:                          true
      become_user:                     root

# /*---------------------------------------------------------------------------8
# |                                                                            |
# | Systemd-Based SAP Startup Framework - BEGIN                                |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- name:                                "5.6 SCSERS - check if the OS version is RHEL 8.2 or newer"
  ansible.builtin.set_fact:
    is_rhel_82_or_newer:               "{{ ansible_distribution_version is version('8.2', '>=') | default(false) }}"

# For systemd services the SAP ASCS/SCS and ERS resources are created as systemd services
# the path for the service file is /etc/systemd/system/SAP<SID>_<InstanceNumber>.service
- name:                                "5.6 SCSERS - check if the SAP ASCS/SCS and ERS resources are created as systemd services"
  when:
    - is_rhel_82_or_newer is defined
    - is_rhel_82_or_newer
  ansible.builtin.stat:
    path:                              "/etc/systemd/system/SAP{{ sap_sid | upper }}_{{ sap_instance_number }}.service"
  register:                            systemd_service_file_path
  loop:
    - "{{ scs_instance_number }}"
    - "{{ ers_instance_number }}"
  loop_control:
    loop_var:                          sap_instance_number

- name:                                "5.6 SCSERS - Set fact for the systemd services existance"
  ansible.builtin.set_fact:
    systemd_service_names:             "{{
                                           systemd_service_file_path.results
                                           | selectattr('stat.exists', 'equalto', true)
                                           | map(attribute='stat.path')
                                           | regex_replace('/etc/systemd/system/', '')
                                         }}"
  when:
    - is_rhel_82_or_newer is defined
    - is_rhel_82_or_newer

- name:                                "5.6 SCSERS - Disable the services and stop auto-restart if they exist"
  when:
    - systemd_service_names is defined
    - systemd_service_names | length > 0
  block:
    - name:                            "5.6 SCSERS - Disable the services if they exist"
      when:
        - is_rhel_82_or_newer is defined
        - is_rhel_82_or_newer
      ansible.builtin.systemd:
        name:                          "{{ service_name }}"
        enabled:                       false
      loop:                            "{{ systemd_service_names }}"
      loop_control:
        loop_var:                      service_name

    - name:                            "5.6 SCSERS Pacemaker - (systemd) Create drop-in file"
      when:
        - is_rhel_82_or_newer is defined
        - is_rhel_82_or_newer
      become:                          true
      ansible.builtin.blockinfile:
        path:                          '{{ dropfile }}'
        create:                        true
        backup:                        true
        owner:                         root
        group:                         root
        mode:                          '0644'
        block: >-
                                       [Service]
                                       Restart=no
      loop:
        - "/etc/systemd/system/SAP{{ sap_sid | upper }}_{{ scs_instance_number }}.service.d/HA.conf"
        - "/etc/systemd/system/SAP{{ sap_sid | upper }}_{{ ers_instance_number }}.service.d/HA.conf"
      loop_control:
        loop_var:                      dropfile
      register:                        dropinfile

    - name:                                "5.6 SCSERS - systemd reload"
      ansible.builtin.systemd:
        daemon_reload:                     true
      when:
        - dropinfile.changed

    - name:                            "5.6 SCSERS - validate that the drop-in file is active"
      when:
        - is_rhel_82_or_newer is defined
        - is_rhel_82_or_newer
      ansible.builtin.shell: >-
                                       systemd-delta | grep 'SAP{{ sap_sid | upper }}_{{ scs_instance_number }}.service.d'
      register:                        dropinfile_validation
      changed_when:                    false
      failed_when:                     dropinfile_validation.rc > 0


# /*---------------------------------------------------------------------------8
# |                                                                            |
# | Systemd-Based SAP Startup Framework - END                                  |
# |                                                                            |
# +------------------------------------4--------------------------------------*/



- name:                                "5.6 SCSERS Pacemaker - provision"
  ansible.builtin.include_tasks:
    file:                              5.6.4-provision.yml
    apply:
      tags:
        - 5.6.4-provision
      become:                          true
      become_user:                     root
  # when:
  #   - cluster_existence_check_result is defined
  #   - not cluster_existence_check_result

- name:                                "Post SCS HA Install: check if installed"
  become:                              true
  ansible.builtin.stat:
    path:                              "/etc/sap_deployment_automation/{{ sap_sid | upper }}/sap_deployment_scs.txt"
  register:                            post_scs_install
  failed_when:                         not post_scs_install.stat.exists
  when:                                ansible_hostname == primary_instance_name

- name:                                "Post ERS Install: check if installed"
  become:                              true
  ansible.builtin.stat:
    path:                              "/etc/sap_deployment_automation/{{ sap_sid | upper }}/sap_deployment_ers.txt"
  register:                            post_ers_install
  failed_when:                         not post_ers_install.stat.exists
  when:                                ansible_hostname == secondary_instance_name

- name:                                "5.6 SCSERS Pacemaker - post_provision_report"
  ansible.builtin.include_tasks:
    file:                              5.6.5-post_provision_report.yml
    apply:
      tags:
        - 5.6.5-post_provision_report
      become:                          true
      become_user:                     root
...
