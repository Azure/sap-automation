---

# RHEL Clustering - Deploy ASCS/ERS cluster resources
# Azure ref: https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-rhel-netapp-files

# [1] Create the SAP cluster resources
# If using enqueue server 1 architecture (ENSA1), define the resources as follows:

- name:                                "5.6 SCSERS - RHEL - ENSA1 - SAP Resources - Cluster Configuration after Install"
  when:
    - inventory_hostname == primary_instance_name
    - ensa1 | default(false)
  block:
    - name:                            "5.6 SCSERS - RHEL - ENSA1 - Enable Maintenance mode for the cluster"
      ansible.builtin.command:         pcs property set maintenance-mode=true

    - name:                            "5.6 SCSERS - RHEL - ENSA1 - Configure SAP ASCS/SCS resources"
      ansible.builtin.command: >
                                       pcs resource create rsc_sap_{{ sap_sid }}_{{ instance_type | upper }}{{ scs_instance_number }} SAPInstance \
                                       InstanceName={{ instance_name }} START_PROFILE="{{ start_profile_path }}" \
                                       AUTOMATIC_RECOVER=false \
                                       meta resource-stickiness=5000 migration-threshold=1 failure-timeout=60 \
                                       op monitor interval=20 on-fail=restart timeout={{ clus_sap_mon_timeout | int }} \
                                       op start interval=0 timeout=600 op stop interval=0 timeout=600 \
                                       --group g-{{ sap_sid | upper }}_{{ instance_type | upper }}
      register:                        ascs_rsc_sap
      failed_when:                     ascs_rsc_sap.rc > 1

    - name:                            "5.6 SCSERS - RHEL - ENSA1 - Set the ASCS resource stickiness"
      ansible.builtin.command:         pcs resource meta g-{{ sap_sid | upper }}_{{ instance_type | upper }} resource-stickiness=3000

    - name:                            "5.6 SCSERS - RHEL - ENSA1 - Configure SAP ERS resources"
      ansible.builtin.command: >
                                       pcs resource create rsc_sap_{{ sap_sid }}_ERS{{ ers_instance_number }} SAPInstance \
                                       InstanceName={{ sap_sid }}_ERS{{ ers_instance_number }}_{{ ers_virtual_hostname }} START_PROFILE="/sapmnt/{{ sap_sid }}/profile/{{ sap_sid }}_ERS{{ ers_instance_number }}_{{ ers_virtual_hostname }}" \
                                       AUTOMATIC_RECOVER=false IS_ERS=true \
                                       op monitor interval=20 on-fail=restart timeout={{ clus_sap_mon_timeout | int }} \
                                       op start interval=0 timeout=600 \
                                       op stop interval=0 timeout=600 \
                                       --group g-{{ sap_sid | upper }}_ERS
      register:                        ers_rsc_sap
      failed_when:                     ers_rsc_sap.rc > 1

    - name:                            "5.6 SCSERS - RHEL - ENSA1 - Configure Co-location Constraints"
      ansible.builtin.shell: |
                                       pcs constraint colocation add g-{{ sap_sid | upper }}_ERS with g-{{ sap_sid | upper }}_{{ instance_type | upper }} -5000
                                       pcs constraint location rsc_sap_{{ sap_sid }}_{{ instance_type | upper }}{{ scs_instance_number }} rule score=2000 runs_ers_{{ sap_sid }} eq 1
                                       pcs constraint order start g-{{ sap_sid | upper }}_{{ instance_type | upper }} then stop g-{{ sap_sid | upper }}_ERS kind=Optional symmetrical=false
      register:                        co_location
      failed_when :                    co_location.rc > 1

    - name:                            "5.6 SCSERS - RHEL - ENSA1 - Bring Primary node online"
      ansible.builtin.command:         pcs node unstandby {{ primary_instance_name }}

    # - name:                            "5.6 SCSERS - RHEL - ENSA1 - Set the Cluster out of maintenance mode"
    #   ansible.builtin.command:         pcs property set maintenance-mode=false

    # - name:                            "5.6 SCSERS - RHEL - ENSA2 - pause the execution for 2 minutes"
    #   ansible.builtin.wait_for:
    #     timeout:                       120

# Use the following if using ENSA2
- name:                                "5.6 SCSERS - RHEL - SAP Resources - Cluster Configuration after Install"
  when:
    - inventory_hostname == primary_instance_name
    - ensa2 | default(false)
  block:
    - name:                            "5.6 SCSERS - RHEL - ENSA2 - Enable Maintenance mode for the cluster"
      ansible.builtin.command:         pcs property set maintenance-mode=true

    - name:                            "5.6 SCSERS - RHEL - ENSA2 - Configure SAP ASCS/SCS resources"
      ansible.builtin.command: >
                                       pcs resource create rsc_sap_{{ sap_sid }}_{{ instance_type | upper }}{{ scs_instance_number }} SAPInstance \
                                       InstanceName={{ instance_name }} START_PROFILE="{{ start_profile_path }}" \
                                       AUTOMATIC_RECOVER=false \
                                       meta resource-stickiness=5000 \
                                       op monitor interval=20 on-fail=restart timeout={{ clus_sap_mon_timeout | int }} \
                                       op start interval=0 timeout=600 op stop interval=0 timeout=600 \
                                       --group g-{{ sap_sid | upper }}_{{ instance_type | upper }}
      register:                        ascs_rsc_sap
      failed_when:                     ascs_rsc_sap.rc > 1

    - name:                            "5.6 SCSERS - RHEL - ENSA2 - Set the ASCS resource stickiness"
      ansible.builtin.command:         pcs resource meta g-{{ sap_sid | upper }}_{{ instance_type | upper }} resource-stickiness=3000

    - name:                            "5.6 SCSERS - RHEL - ENSA2 - Configure SAP ERS resources"
      ansible.builtin.command: >
                                       pcs resource create rsc_sap_{{ sap_sid }}_ERS{{ ers_instance_number }} SAPInstance \
                                       InstanceName={{ sap_sid }}_ERS{{ ers_instance_number }}_{{ ers_virtual_hostname }} START_PROFILE="/sapmnt/{{ sap_sid }}/profile/{{ sap_sid }}_ERS{{ ers_instance_number }}_{{ ers_virtual_hostname }}" \
                                       AUTOMATIC_RECOVER=false IS_ERS=true \
                                       op monitor interval=20 on-fail=restart timeout={{ clus_sap_mon_timeout | int }} \
                                       op start interval=0 timeout=600 \
                                       op stop interval=0 timeout=600 \
                                       --group g-{{ sap_sid | upper }}_ERS
      register:                        ers_rsc_sap
      failed_when:                     ers_rsc_sap.rc > 1

    - name:                            "5.6 SCSERS - RHEL - ENSA2 - Set the ERS resource stickiness"
      ansible.builtin.command:         pcs resource meta rsc_sap_{{ sap_sid }}_ERS{{ ers_instance_number }} resource-stickiness=3000

    - name:                            "5.6 SCSERS - RHEL - ENSA2 - Configure Co-location Constraints"
      ansible.builtin.shell: |
                                       pcs constraint colocation add g-{{ sap_sid | upper }}_ERS with g-{{ sap_sid | upper }}_{{ instance_type | upper }} -5000
                                       pcs constraint order start g-{{ sap_sid | upper }}_{{ instance_type | upper }} then start g-{{ sap_sid | upper }}_ERS kind=Optional symmetrical=false
                                       pcs constraint order start g-{{ sap_sid | upper }}_{{ instance_type | upper }} then stop g-{{ sap_sid | upper }}_ERS kind=Optional symmetrical=false
      register:                        co_location
      failed_when:                     co_location.rc > 1

    # - name:                            "5.6 SCSERS - RHEL - ENSA2 - Set the Cluster out of maintenance mode"
    #   ansible.builtin.command:         pcs property set maintenance-mode=false

    # - name:                            "5.6 SCSERS - RHEL - ENSA2 - pause the execution for 2 minutes"
    #   ansible.builtin.wait_for:
    #     timeout:                       120

# /*---------------------------------------------------------------------------8
# |                                                                            |
# | Systemd-Based SAP Startup Framework - BEGIN                                |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- name:                                "5.6 SCSERS - RHEL - Systemd-Based SAP Startup Framework"
  ansible.builtin.include_tasks:
    file:                              "5.6.7-config-systemd-sap-start.yml"
    apply:
      become:                          true
      become_user:                     root
      tags:
        - "5.6.7-config-systemd-sap-start"
  when:
    - is_rhel_82_or_newer is defined
    - is_rhel_82_or_newer | default(false)

# /*---------------------------------------------------------------------------8
# |                                                                            |
# | Systemd-Based SAP Startup Framework - END                                  |
# |                                                                            |
# +------------------------------------4--------------------------------------*/


# +------------------------------------4---------------------------------------*|
# | 5.6.6-validate.yml - Validate the SAP ASCS/SCS and ERS resources            |
# | These are common tasks                                                      |
# +------------------------------------+---------------------------------------*|

# - name:                                "5.6 SCSERS - RHEL - Enable Maintenance mode for the cluster"
#   ansible.builtin.command:             pcs property set maintenance-mode=true

- name:                                "5.6 SCSERS - RHEL - Reboot and wait 5 minutes"
  ansible.builtin.debug:
    msg:                               "Reboot and wait 5 minutes"

- name:                                "5.6 SCSERS - RHEL - Reboot the primary/secondary instance"
  ansible.builtin.reboot:
    reboot_timeout:                    300
    post_reboot_delay:                 300

- name:                                "5.6 SCSERS - RHEL - Set the Cluster out of maintenance mode"
  ansible.builtin.command:             pcs property set maintenance-mode=false

- name:                                "5.6 SCSERS - RHEL - Wait for 120 seconds for the cluster to stabilize"
  ansible.builtin.wait_for:
    timeout:                           120
  register:                            wait_for_connection_results

- name:                                "5.6 SCSERS - RHEL ensure SAPInstance resources are started"
  ansible.builtin.shell: |
                                       set -o pipefail
                                       pcs status --full | grep SAPInstance | grep Started | wc -l
  register:                            sap_instance_status
  retries:                             40
  delay:                               15
  until:                               (sap_instance_status.stdout | int) == ([(ansible_play_hosts_all | length), 2] | max | int)
  run_once:                            true
  failed_when:                         false


- name:                                "5.6 SCSERS - RHEL - SCS cluster group validation"
  ansible.builtin.include_tasks:
    file:                              "5.6.6-validate.yml"
    apply:
      become:                          true
      become_user:                     root
      tags:
        - "5.6.6-validate"
  when:
    - inventory_hostname == primary_instance_name

# End of SAP Resources cluster configuration
...
