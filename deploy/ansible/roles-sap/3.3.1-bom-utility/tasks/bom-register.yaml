# Inputs:
#   bom_name              - Name of BOM (ex: S41909SPS03_v0001ms)
#
#
# Outputs:
#   bom                   - object
#

---
# -------------------------------------+---------------------------------------8
#
# Description:  Check if BOM is Microsoft supplied and register BOM as an object.
#               If not, download from storage account location.
#

- name:                                "3.3 BoM Processing: - Set Python version {{ distribution_id }}"
  ansible.builtin.set_fact:
    python_version:                    'python2'

- name:                                "3.3 BoM Processing: - Set Python version {{ distribution_id }}"
  ansible.builtin.set_fact:
    python_version:                    'python3'
  when:                                distribution_id in ['suse15', 'redhat8']

- name:                                "BOM: {{ bom_name }} Check is file {{ bom_name }} is already downloaded to the storage account"
  ansible.builtin.get_url:
    url:                               "{{ sapbits_location_base_path }}/{{ sapbits_bom_files }}/boms/{{ bom_name }}/{{ bom_name }}.yaml{{ sapbits_sas_token }}"
    dest:                              "{{ download_directory }}/bom/{{ bom_name }}.yaml"
    mode:                              0644
  delegate_to:                         localhost
  become:                              true
  ignore_errors:                       true
  register:                            result
  vars:
    ansible_python_interpreter:        "{{ python_version }}"
  when:                                
    - distribution_id in ['suse15', 'redhat8']
    - not always_upload_jinja_templates

- name:                                "BOM: {{ bom_name }} Check is file {{ bom_name }} is already downloaded to the storage account"
  ansible.builtin.get_url:
    url:                               "{{ sapbits_location_base_path }}/{{ sapbits_bom_files }}/boms/{{ bom_name }}/{{ bom_name }}.yaml{{ sapbits_sas_token }}"
    dest:                              "{{ download_directory }}/bom/{{ bom_name }}.yaml"
    mode:                              0644
  delegate_to:                         localhost
  become:                              true
  register:                            result
  ignore_errors:                       true
  when:
    - distribution_id != 'suse15'
    - distribution_id != 'redhat8'
    - not always_upload_jinja_templates

# - name:                                "BOM: Show blob status"
#   ansible.builtin.debug:
#     msg:
#       - "{{ result }}"
#       - "{{ sapbits_location_base_path }}/{{ sapbits_bom_files }}/boms/{{ bom_name }}/{{ bom_name }}.yaml{{ sapbits_sas_token }}"

- name:                                "BOM: Register BOM ({{ bom_name }}) from Storage Account"
  block:

    - name:                            "{{ task_prefix }} Register downloaded BOM ({{ bom_name }})"
      ansible.builtin.include_vars:
        file:                          "{{ download_directory }}/bom/{{ bom_name }}.yaml"
        name:                          bom

    - name:                            "{{ task_prefix }} Register downloaded BOM ({{ bom_name }}) file name"
      ansible.builtin.set_fact:
        bom_file:                      "{{ download_directory }}/bom/{{ bom_name }}.yaml"

  when:
    - result is succeeded or result is skipped
    - not always_upload_jinja_templates

# -------------------------------------+---------------------------------------8

- name:                                "{{ task_prefix }} Check for Microsoft Supplied BOM ({{ bom_name }})"
  block:
    - name:                            "{{ task_prefix }} Check for Microsoft Supplied BOM ({{ bom_name }})"
      ansible.builtin.stat:
        path:                          "{{ playbook_dir }}/BOM-catalog/{{ bom_name }}/{{ bom_name }}.yaml"
      register:                        microsoft_supplied_bom
      delegate_to:                     localhost
    
    - name:                            "{{ task_prefix }} Show Microsoft Supplied BOM ({{ bom_base_name }}) result"
      ansible.builtin.debug:
        msg:                           
         - "BOM PATH:   BOM-catalog/{{ bom_name }}/{{ bom_name }}.yaml"
         - "BOM Exists: {{ microsoft_supplied_bom.stat.exists }}"                           
        verbosity:                     2

    - name:                            "{{ task_prefix }} Register Microsoft Supplied BOM {{ bom_name }}"
      ansible.builtin.include_vars:
        file:                          "{{ microsoft_supplied_bom.stat.path }}"
        name:                          bom
      when:                            microsoft_supplied_bom.stat.exists

    - name:                            "{{ task_prefix }} Register downloaded BOM ({{ bom_name }}) file name"
      ansible.builtin.set_fact:
        bom_file:                      "{{ microsoft_supplied_bom.stat.path }}"
      when:                            microsoft_supplied_bom.stat.exists

    - name:                            "{{ task_prefix }} Check for Microsoft Supplied BOM ({{ bom_name }}) in archives"
      block:

        - name:                        "{{ task_prefix }} Check for Microsoft Supplied BOM ({{ bom_name }}) in archives"
          ansible.builtin.stat:
            path:                      "{{ playbook_dir }}/BOM-catalog/archives/{{ bom_name }}/{{ bom_name }}.yaml"
          register:                    microsoft_supplied_bom_archive
          delegate_to:                 localhost

        - name:                        "{{ task_prefix }} Register Microsoft Supplied BOM {{ bom_name }} from archives"
          ansible.builtin.include_vars:
            file:                      "{{ microsoft_supplied_bom_archive.path }}"
            name:                      bom
          when:                        microsoft_supplied_bom_archive.stat.exists

        - name:                        "{{ task_prefix }} Register downloaded BOM ({{ bom_name }}) file name"
          ansible.builtin.set_fact:
            bom_file:                  "{{ microsoft_supplied_bom_archive.stat.path }}"
          when:                        microsoft_supplied_bom_archive.stat.exists

      when:                            not microsoft_supplied_bom.stat.exists

  when:                                result is failed or always_upload_jinja_templates


# If Microsoft supplied BOM not found

...
