# /*---------------------------------------------------------------------------8
# |                                                                            |
# |                          Role to process the BOM                           |
# |                                                                            |
# +------------------------------------4--------------------------------------*/
# Description:  Downloads the files specified in BOM file from SAP to the
#               ansible controller and uploads them to the storage account.
#
#
# Objects:
#   External:
#             sapbits_location_base_path      - URL of Blob Storage
#             sapbits_bom_files               - path to the root of the sap file store
#             bom_base_name                   - Name of BOM
#             sapbits_sas_token               - SAS Token
#             download_directory              - Path to the download location on the ansible controller
#
#   Internal:
#             result                          - objet to store the results of a task execution
#
#   Created:
#             bom                             - object containing the specified BOM
#
# -------------------------------------+---------------------------------------8
# Reviews:
#
#
# -------------------------------------+---------------------------------------8
---
# -------------------------------------+---------------------------------------8
#
# Description:  Validation for Prerequisites
#
- name:                                "0.1 BoM Validator: - Pre-checks"
  import_tasks:                        pre_checks.yaml
# -------------------------------------+---------------------------------------8

# -------------------------------------+---------------------------------------8
#
# Description:  Create BOM download directories".
#

- name:                                "0.1 BoM Validator: - Create BOM download directories"
  ansible.builtin.file:
    path:                              "{{ item.path }}"
    state:                             directory
    mode:                              0755
  become:                              true
  become_user:                         root
  delegate_to:                         localhost
  loop:
    - path: "{{ download_directory }}"
    - path: "{{ download_directory }}/tmp"
    - path: "{{ download_directory }}/bom"
    - path: "{{ download_directory }}/files"

- name:                                "0.1 BoM Validator: - BoM Initial file"
  ansible.builtin.copy:
    dest:                              "{{ download_directory }}/readme.md"
    content:                           "This is the container with the SAP media"
    mode:                              0755
  register:                            readme_file
  become:                              true
  become_user:                         root

- name:                                "0.1 BoM Validator: - Check storage account container"
  ansible.builtin.command: >-
                                       az storage blob upload
                                         --account-name {{ sapbits_location_base_path.rpartition('//')[2].split('.')[0] }}
                                         --sas-token {{ sapbits_sas_token }}
                                         --container-name {{ sapbits_location_base_path.rpartition('//')[2].split('/')[1] }}/{{ sapbits_bom_files }}/archives
                                         --name readme.md
                                         --file {{ readme_file.dest }}
                                         --if-none-match "*"
                                         --no-progress
  delegate_to:                         localhost
  register:                            azresult
  ignore_errors:                       true
  changed_when:                        false
  failed_when:
    - azresult.rc != 0
    - azresult.stderr is defined
    - azresult.stderr.find("BlobAlreadyExists") == -1


# -------------------------------------+---------------------------------------8
#
# Description:  Call BOM processor, passing BOM name.
#
# TODO:
#       Enhance so a single task loops over bas bom and dependencies
#
- name:                                "0.1 BoM Validator: - Process main BoM"
  ansible.builtin.include_tasks:       bom_validator.yaml
  vars:
    account:                           "{{ sapbits_location_base_path.rpartition('//')[2].split('.')[0] }}"
    container:                         "{{ sapbits_location_base_path.rpartition('//')[2].split('/')[1] }}/{{ sapbits_bom_files }}/archives"
    bom_name:                          "{{ bom_base_name }}"
    upload:                            true
# -------------------------------------+---------------------------------------8
- name:                                "0.1 BoM Validator: - Save BoM {{ bom_base_name }} as Dictionary"
  ansible.builtin.set_fact:
    root_bom:                          "{{ bom }}"
    root_media_list:                   "{{ bom.materials.media | flatten(levels=1) }}"

# -------------------------------------+---------------------------------------8
#
# Description:  Call BOM processor, passing dependent BOM names.
#
- name:                                "0.1 BoM Validator: - Process dependent BoMs in a loop"
  ansible.builtin.include_tasks:       bom_validator.yaml
  vars:
    account:                           "{{ sapbits_location_base_path.rpartition('//')[2].split('.')[0] }}"
    container:                         "{{ sapbits_location_base_path.rpartition('//')[2].split('/')[1] }}/{{ sapbits_bom_files }}/archives"
    bom_name:                          "{{ bom_dependency.name }}"
    upload:                            false
  register:                            dependent_bom_collection
  loop:                                "{{ bom.materials.dependencies | flatten(levels=1) }}"
  loop_control:
    loop_var:                          bom_dependency
  when:
    - bom.materials.dependencies is defined
    - bom.materials.dependencies | length>0
# -------------------------------------+---------------------------------------8

- name:                                "0.1 BOM Validator: - Filter combined BoM"
  ansible.builtin.set_fact:
    root_media_list:                   "{{ root_media_list | unique(attribute='archive') | list }}"

- name:                                "0.1 BOM Validator: - Assemble combined BoM"
  ansible.builtin.set_fact:
    new_bom:                           "{{ lookup('template', 'bom.j2') }}"

- name:                                "0.1 BOM Validator: - remove BoM"
  become:                              true
  become_user:                         root
  delegate_to:                         localhost
  ansible.builtin.file:
    path:                              "{{ download_directory }}/bom/{{ bom_base_name }}.yaml"
    state:                             absent

- name:                                "0.1 BOM Validator: - write combined BoM"
  become:                              true
  become_user:                         root
  delegate_to:                         localhost
  ansible.builtin.copy:
    content:                           "{{ new_bom }}"
    dest:                              "{{ download_directory }}/bom/{{ bom_base_name }}.yaml"
    mode:                              0755
    force:                             true

- name:                                "0.1 BoM Validator: - BoM "
  ansible.builtin.debug:
    var:                               new_bom
    verbosity:                         4

- name:                                "0.1 BoM Validator: - delete combined BoM"
  ansible.builtin.command: >-
                                       az storage blob delete
                                         --account-name {{ sapbits_location_base_path.rpartition('//')[2].split('.')[0] }}
                                         --sas-token {{ sapbits_sas_token }}
                                         --container-name {{ sapbits_location_base_path.rpartition('//')[2].split('/')[1] }}/{{ sapbits_bom_files }}/boms/{{ bom_base_name }}
                                         --name {{ bom_base_name }}.yaml
  delegate_to:                         localhost
  register:                            azresult
  changed_when:                        false
  failed_when:
    - azresult.rc != 0
    - azresult.stderr is defined
    - azresult.stderr.find("BlobNotFound") == -1


- name:                                "0.1 BoM Validator: - Upload combined BoM"
  ansible.builtin.command: >-
                                       az storage blob upload
                                         --account-name {{ sapbits_location_base_path.rpartition('//')[2].split('.')[0] }}
                                         --sas-token {{ sapbits_sas_token }}
                                         --container-name {{ sapbits_location_base_path.rpartition('//')[2].split('/')[1] }}/{{ sapbits_bom_files }}/boms/{{ bom_base_name }}
                                         --name {{ bom_base_name }}.yaml
                                         --file {{ download_directory }}/bom/{{ bom_base_name }}.yaml
                                         --overwrite true
                                         --if-none-match "*"
                                         --no-progress
  delegate_to:                         localhost
  register:                            azresult
  changed_when:                        false
  failed_when:
    - azresult.rc != 0
    - azresult.stderr is defined
    - azresult.stderr.find("BlobAlreadyExists") == -1

- name:                                "0.1 BoM Validator: - BoM folder path"
  ansible.builtin.debug:
    msg:                               "{{ sapbits_location_base_path }}/{{ sapbits_bom_files }}/boms/{{ bom_base_name }}/{{ bom_base_name }}.yaml"


# /*---------------------------------------------------------------------------8
# |                                   END                                      |
# +------------------------------------4--------------------------------------*/

...
