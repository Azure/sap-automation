---
# /*---------------------------------------------------------------------------8
# |                                                                            |
# |         BOM Validation role                                                |
# |                                                                            |
# | Assumptions                                                                |
# |   target_media_location exists on disk                                     |
# |                                                                            |
# | Inputs:                                                                    |
# |   target_media_location             Default     {{ target_media_location }}|
# |   download_directory                                                       |
# |   bom_name                                                                 |
# |   sapbits_location_base_path                                               |
# |   sapbits_bom_files                                                        |
# |   sapbits_sas_token                                                        |
# |   sapbits_access_key                                                       |
# |   S_user                                                                   |
# |   S_password:                                                              |
# |   download_directory:               Default /mnt/downloads                 |
# |                                                                            |
# | Locals:                                                                    |
# |   _bom                                                                     |
# |   item                                                                     |
# |   result                                                                   |
# |                                                                            |
# | BOM Fields:                                                                |
# |   download                                                                 |
# |   archive                                                                  |
# |   permissions                                                              |
# |                                                                            |
# |                                                                            |
# | Steps:                                                                     |
# |   01) Register BOM                                                         |
# |   02) Download media                                                       |
# +------------------------------------4--------------------------------------*/

# -------------------------------------+---------------------------------------8
# Step: 01
# Description:  Informational
#
- name:                             "Informational"
  ansible.builtin.debug:
    var:                            bom_name
    verbosity:                      1
# Step: 01 - END
# -------------------------------------+---------------------------------------8


# -------------------------------------+---------------------------------------8
# Step: 02
# Description:  Register BOM
#
# - name:                                 "TROUBLESHOOTING: bom-registration.yaml"
#   pause:
#     prompt: "Press enter to continue..."
#     echo: yes
#   when:
#     - pause|default(false)                                                      # when true; if not defined, then value is false

- name:                                "Call BOM registration"
  ansible.builtin.include_role:
    name:                              roles-sap/3.3.1-bom-utility
    tasks_from:                        bom-register
  vars:
    inventory_dir:                     "{{ download_directory }}/bom"
    task_prefix:                       "Validation: "
    source:                            "disk"
# Step: 02 - END
# -------------------------------------+---------------------------------------8

# -------------------------------------+---------------------------------------8
# Step: 03
# Description:  Dynamic Processing - Iterate over BOM dictionary to find Dynamic
#               entries.
#
- name:                                 "Reconcile dynamic entries of BOM"
  ansible.builtin.include_tasks:        "dynamic_bom_processing.yaml"
  loop:                                 "{{ bom.materials.media | flatten(levels=1) }}"
  loop_control:
    loop_var:                           bom_media_entry
    index_var:                          bom_media_index
  when:
    - bom_media_entry.dynamic is defined
    - bom_media_entry.dynamic
# Step: 03 - END
# -------------------------------------+---------------------------------------8


# -------------------------------------+---------------------------------------8
# Step: 04
# Description:  Generate SAS token block
#
- name:                                 "Generate SAS token block"
  block:

# -------------------------------------+---------------------------------------8
# Step: 04-01
# Description:
#
    - name:                             "{{ task_prefix }} - Informational"
      ansible.builtin.debug:
        msg: |-
                                        Entering SAS token block...
        verbosity:                      1
# Step: 04-01 - END
# -------------------------------------+---------------------------------------8

# -------------------------------------+---------------------------------------8
# Step: 04-02
# Description:
#
    - name:                             "{{ task_prefix }} - Caculate expiration date (+3 Days)"
      ansible.builtin.set_fact:
        expiry:                         "{{ '%Y-%m-%d' | strftime((ansible_date_time.epoch | int) + (86400 * 3)) }}"
# Step: 04-02 - END
# -------------------------------------+---------------------------------------8

# -------------------------------------+---------------------------------------8
# Step: 04-03
# Description:
#
    - name:                             "{{ task_prefix }} - Create SAP Binaries Storage Account SAS"
      ansible.builtin.command: >-
                                        az storage account generate-sas                                                     \
                                          --services b                                                                      \
                                          --resource-types sco                                                              \
                                          --permissions cdlrw                                                               \
                                          --account-name {{ sapbits_location_base_path.rpartition('//')[2].split('.')[0] }} \
                                          --account-key {{ sapbits_access_key }}                                            \
                                          --expiry {{ expiry }}                                                             \
                                          --output tsv
      changed_when:                     false
      register:                         az_sapbits_sas_token
# Step: 04-03 - END
# -------------------------------------+---------------------------------------8

# -------------------------------------+---------------------------------------8
# Step: 04-04
# Description:
#
    - name:                             "{{ task_prefix }} - Extract SAP Binaries Storage Account SAS (temp)"
      ansible.builtin.set_fact:
        sapbits_sas_token:              "{{ az_sapbits_sas_token.stdout }}"
# Step: 04-04 - END
# -------------------------------------+---------------------------------------8

  vars:
    task_prefix:                        Generate SAS token block
  when:
    - sa_enabled
# Step: 04 - END
# -------------------------------------+---------------------------------------8


# -------------------------------------+---------------------------------------8
# Step: 05
# Description:  Check and download files
#
- name:                                "0.1 BoM Validator: - BOM: {{ bom_name }} Check and Download Files"
  ansible.builtin.include_tasks:       bom_download.yaml
  loop:                                "{{ bom.materials.media | flatten(levels=1) }}"
  loop_control:
    loop_var:                           bom_media_entry
    index_var:                          bom_media_index
  no_log:                              false
# Step: 05 - END
# -------------------------------------+---------------------------------------8

# -------------------------------------+---------------------------------------8
# Step: 06
# Description:  Combine dependent BoMs block
#
- name:                                 "Combine dependent BoMs block"
  block:

# -------------------------------------+---------------------------------------8
# Step: 06-01
# Description:
#
    - name:                             "{{ task_prefix }} - Combine dependent BoMs"
      ansible.builtin.set_fact:
        root_media_list:                "{{ root_media_list + bom.materials.media | flatten(levels=1) }}"
# Step: 06-01 - END
# -------------------------------------+---------------------------------------8

# -------------------------------------+---------------------------------------8
# Step: 06-02
# Description:
#
    - name:                             "{{ task_prefix }} - Informational"
      ansible.builtin.debug:
        msg: |-
                                        {{ root_media_list }}
        verbosity:                      1
# Step: 06-02 - END
# -------------------------------------+---------------------------------------8

  vars:
    task_prefix:                        Combine dependent BoMs block
  when: root_media_list is defined
# Step: 06 - END
# -------------------------------------+---------------------------------------8


# -------------------------------------+---------------------------------------8
# Step: 07
# Description:
#
- name:                                "0.1 BoM Validator: - BOM: {{ bom_name }} Folder"
  ansible.builtin.debug:
    msg:                               "FOLDERNAME : {{ bom_file.rpartition('/')[0] }}"
# Step: 07 - END
# -------------------------------------+---------------------------------------8


# # -------------------------------------+---------------------------------------8
# # Step: 08
# # Description:
# #
# - name: "Upload"
#   block:

# # -------------------------------------+---------------------------------------8
# # Step: 08-01
# # Description:
# #
#     - name:                                "0.1 BoM Validator: - delete old versions of templates"
#       ansible.builtin.command: >-
#                                           az storage blob delete-batch
#                                             --account-name {{ sapbits_location_base_path.rpartition('//')[2].split('.')[0] }}
#                                             --sas-token {{ sapbits_sas_token }}
#                                             --source {{ sapbits_location_base_path.rpartition('//')[2].split('/')[1] }}
#                                             --pattern "{{ sapbits_bom_files }}/boms/{{ bom_base_name }}/templates/*"
#       delegate_to:                         localhost
#       ignore_errors:                       false
#       changed_when:                        false
# # Step: 08-01 - END
# # -------------------------------------+---------------------------------------8

# # -------------------------------------+---------------------------------------8
# # Step: 08-02
# # Description:
# #
#     - name:                                "0.1 BoM Validator: - BOM: {{ bom_name }} Upload Folder"
#       vars:
#         bom_container_name:               "{{ sapbits_location_base_path.rpartition('//')[2].split('/')[1] }}/{{ sapbits_bom_files }}/boms"
#       ansible.builtin.command: >-
#                                           az storage blob upload-batch
#                                             --account-name {{ account }}
#                                             --account-key {{ sapbits_access_key }}
#                                             --destination "{{ bom_container_name }}/{{ bom_name }}/templates"
#                                             --source "{{ bom_file.rpartition('/')[0] }}/templates"
#                                             --overwrite true
#                                             --if-none-match "*"
#                                             --no-progress
#       delegate_to:                         localhost
#       register:                            bom_upload_azresult
#       changed_when:                        false
#       ignore_errors:                       false
#       failed_when:
#         - bom_upload_azresult.rc != 0
#         - bom_upload_azresult.stderr is defined
#         - bom_upload_azresult.stderr.find("BlobAlreadyExists") == -1
# # Step: 08-02 - END
# # -------------------------------------+---------------------------------------8

#   when:
#     - upload is defined
#     - upload
#     - sa_enabled                                              # and Storage Account is enabled
# # Step: 08 - END
# # -------------------------------------+---------------------------------------8

...
# /*---------------------------------------------------------------------------8
# |                                   END                                      |
# +------------------------------------4--------------------------------------*/
