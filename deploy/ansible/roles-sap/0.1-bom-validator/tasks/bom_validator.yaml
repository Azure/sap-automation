---
# /*----------------------------------------------------------------------------8
# |                                                                            |
# |         BOM Validation role                                                |
# |                                                                            |
# | Assumptions                                                                |
# |   target_media_location exists on disk                                     |
# |                                                                            |
# | Inputs:                                                                    |
# |   target_media_location             Default     {{ target_media_location }}           |
# | download_directory                                                         |
# | bom_name                                                                   |
# | sapbits_location_base_path                                                 |
# | sapbits_bom_files                                                          |
# | sapbits_sas_token                                                          |
# | sapbits_access_key                                                         |
# | S_user                                                                     |
# | S_password:                                                                |
# | download_directory:               Default /mnt/downloads                   |
# |                                                                            |
# |Locals:                                                                     |
# | _bom                                                                       |
# | item                                                                       |
# | result                                                                     |
# |                                                                            |
# | BOM Fields:                                                                |
# | download                                                                   |
# | archive                                                                    |
# | permissions                                                                |
# |                                                                            |
# |                                                                            |
# | Steps:                                                                     |
#   01) Register BOM                                                           |
#   02) Download media                                                         |
# +------------------------------------4--------------------------------------*/

- name:                                "0.1 BoM Validator: - Run the bom-register"
  ansible.builtin.include_role:
    name:                              roles-sap/3.3.1-bom-utility
    tasks_from:                        bom-register
  vars:
    inventory_dir:                     "{{ download_directory }}/bom"
    task_prefix:                       "Validation: "
    source:                            "disk"

- name:                                "Combine dependent BoMs"
  ansible.builtin.set_fact:
    root_media_list:                   "{{ root_media_list + bom.materials.media | flatten(levels=1) }}"
  when: root_media_list is defined

# ------------------<DEBUGGING>-------------------
# - name:                                "Show BOM Info"
#   ansible.builtin.debug:
#     msg:
#       - "BOM: {{ item.archive }} Url: {{ item.url }} Dest: {{ download_directory }}/{{ item.archive }}"
#       - "URL: {{ item.url }} Destination: {{ download_directory }}/files/{{ item.archive }}"
#     verbosity:                         2
#   loop:                                "{{ bom.materials.media|flatten(levels=1) }}"
#   when:                                item.url is defined

# - name:                                "BOM: {{ bom_name }} Files without URLS"
#   ansible.builtin.debug:
#     msg:                               "Archive: {{ item.archive }} Dest: {{ download_directory }}/{{ item.archive }}"
#     verbosity:                         2
#   loop:                                "{{ bom.materials.media|flatten(levels=1) }}"
#   when:                                item.url is not defined

# ------------------</DEBUGGING>------------------


#   02) Validate media from SAP
#   Loop through BOM media URLs

- name:                                "BoM Validator: - Extract SAP Binaries Storage Account SAS secret"
  block:

    - name:                            "BoM Validator: - Set Expiry"
      ansible.builtin.command:         "date +'%Y-%m-%d' -d '+3 days'"
      register: expiry

    - name:                            "BoM Validator: - Create SAP Binaries Storage Account SAS"
      ansible.builtin.shell: >-
                                       az storage account generate-sas \
                                         --services b \
                                         --resource-types sco \
                                         --permissions cdlrw \
                                         --account-name {{ sapbits_location_base_path.rpartition('//')[2].split('.')[0] }} \
                                         --account-key {{ sapbits_access_key }} \
                                         --expiry {{ expiry.stdout }} \
                                         | tr -d \"
      changed_when:                    false
      register:                        az_sapbits_sas_token

    - name:                            "BoM Validator: - Extract SAP Binaries Storage Account SAS (temp)"
      ansible.builtin.set_fact:
        sapbits_sas_token: >-
                                       {{ az_sapbits_sas_token.stdout }}

- name:                                "0.1 BoM Validator: - BOM: {{ bom_name }} Check and Download Files"
  ansible.builtin.include_tasks:       bom_download.yaml

  loop:                                "{{ bom.materials.media|flatten(levels=1) }}"
  no_log:                              false

- name:                                "0.1 BoM Validator: - BOM: {{ bom_name }} Folder"
  ansible.builtin.debug:
    msg:                               "FOLDERNAME : {{ bom_file.rpartition('/')[0] }}"

- name:                                "0.1 BoM Validator: - delete old versions of templates"
  ansible.builtin.command: >-
                                       az storage blob delete-batch
                                         --account-name {{ sapbits_location_base_path.rpartition('//')[2].split('.')[0] }}
                                         --sas-token {{ sapbits_sas_token }}
                                         --source {{ sapbits_location_base_path.rpartition('//')[2].split('/')[1] }}
                                         --pattern "{{ sapbits_bom_files }}/boms/{{ bom_base_name }}/templates/*"
  delegate_to:                         localhost
  ignore_errors:                       false
  changed_when:                        false
  when:
    - upload is defined
    - upload

- name:                                "0.1 BoM Validator: - BOM: {{ bom_name }} Upload Folder"
  vars:
    bom_container_name:               "{{ sapbits_location_base_path.rpartition('//')[2].split('/')[1] }}/{{ sapbits_bom_files }}/boms"
  ansible.builtin.command: >-
                                       az storage blob upload-batch
                                         --account-name {{ account }}
                                         --account-key {{ sapbits_access_key }}
                                         --destination "{{ bom_container_name }}/{{ bom_name }}/templates"
                                         --source "{{ bom_file.rpartition('/')[0] }}/templates"
                                         --overwrite true
                                         --if-none-match "*"
                                         --no-progress
  delegate_to:                         localhost
  register:                            bom_upload_azresult
  changed_when:                        false
  ignore_errors:                       false
  failed_when:
    - bom_upload_azresult.rc != 0
    - bom_upload_azresult.stderr is defined
    - bom_upload_azresult.stderr.find("BlobAlreadyExists") == -1
  when:
    - upload is defined
    - upload

# ------------------<DEBUGGING>-------------------
# - name: "List error codes"
#   debug:
#     var: azresult
# ------------------</DEBUGGING>------------------

# -------------------------------------+---------------------------------------8

...
# /*---------------------------------------------------------------------------8
# |                                   END                                      |
# +------------------------------------4--------------------------------------*/
