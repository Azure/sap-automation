#   SAP: Register BOM
#   SAP WEB: deploy Web Dispatcher Parameter file install template
#   SAP WEB: Install

# TODO: Considerations
#         20G+ swap space
#         Livecache: None, HANA Internal, MaxDB External
#         message server acl
#         certificates
#         secure storage key
#

---

- name:                                "Web Install: Set BOM facts"
  ansible.builtin.set_fact:
    sap_inifile:                       "{{ bom_base_name }}-web-{{ sid_to_be_deployed.sid }}-{{ ansible_hostname }}.params"
    sap_inifile_template:              "{{ bom_base_name }}-web-inifile-param.j2"
    dir_params:                        "{{ tmp_directory }}/.{{ sid_to_be_deployed.sid | lower }}-params"

- name:                                "Web Install: Create hidden directory"
  ansible.builtin.file:
    path:                              "{{ dir_params }}"
    state:                             directory
    mode:                              0755

- name:                                "Web Install: Create temp directory for sid"
  ansible.builtin.file:
    path:                              "{{ tmp_directory }}/{{ sid_to_be_deployed.sid | upper }}"
    state:                             directory
    mode:                              0755

- name:                                "Web Install: Create run flag directory"
  ansible.builtin.file:
    path:                              "/etc/sap_deployment_automation/{{ sid_to_be_deployed.sid | upper }}"
    state:                             directory
    mode:                              0755

- name:                                "Web Install: reset"
  ansible.builtin.file:
    path:                              "/etc/sap_deployment_automation/{{ sid_to_be_deployed.sid | upper }}/sap_deployment_web.txt"
    state:                             absent
  when:                                reinstall

- name:                                "Web Install: check if {{ sid_to_be_deployed.sid | upper }} is installed"
  ansible.builtin.stat:
    path:                              "/etc/sap_deployment_automation/{{ sid_to_be_deployed.sid | upper }}/sap_deployment_web.txt"
  register:                            web_installed

- name:                                "Web Install: Get the SCS Server name list"
  ansible.builtin.set_fact:
    scs_server_temp:                   "{{ scs_server_temp | default([]) + [item] }}"
  with_items:
    - "{{ query('inventory_hostnames', '{{ sap_sid | upper }}_SCS') }}"
    - "{{ query('inventory_hostnames', '{{ sap_sid | upper }}_DB') }}"

- name:                                "Web Install: Set the SCS Server name"
  ansible.builtin.set_fact:
    scs_server:                         "{% if scs_high_availability %}{{ sap_sid | lower }}scs{{ scs_instance_number }}cl1{% else %}{{ scs_server_temp | first }}{% endif %}"


# Returns bom object

- name:                                "Web Install: Include 3.3.1-bom-utility role"
  ansible.builtin.include_role:
    name:                              roles-sap/3.3.1-bom-utility
    tasks_from:                        bom-register
  vars:
    bom_name:                          "{{ bom_base_name }}"
    task_prefix:                       "Web Install: "

- name:                                "Web Install: Include roles-sap/3.3.1-bom-utility role"
  ansible.builtin.include_role:
    name:                              roles-sap/3.3.1-bom-utility
    tasks_from:                        bom-template
  vars:
    task_prefix:                       "Web Install: "
    always_upload_jinja_templates:     false
    param_directory:                   "{{ dir_params }}"
    bom_name:                          "{{ bom_base_name }}"
    sap_cd_package_hdbclient:          "{{ target_media_location }}/CD_HDBCLIENT/SAP_HANA_CLIENT"
    sap_cd_package_cd1:                "{{ target_media_location }}/CD_EXPORT"
    sap_cd_package_cd2:
    sap_cd_package_cd3:
    sap_cd_package_cd4:
    sap_cd_package_cd5:
    web_instance_number:               "00" # "{{ web_instance_number }}"
    sap_ciInstanceNumber:              "00"
    sap_profile_dir:                   /sapmnt/{{ sap_sid | upper }}/profile
    sap_scs_hostname:                  "{{ scs_server }}"
    sap_webVirtualHostname:            "{{ inventory_hostname }}"
    sap_installSAPHostAgent:           false

  tags:
    - skip_ansible_lint

- name:                                "Web install: register variables"
  ansible.builtin.set_fact:
    web_bom_id:                        "{{ bom.product_ids.web }}"

- name:                                "Web Install: install variables"
  ansible.builtin.debug:
    msg:
      - "INSTALLED:  {{ web_installed.stat.exists }}"
      - "INIFILE:    {{ sap_inifile }}"
      - "SID:        {{ web_sid }}"
      - "SAPSID:     {{ sap_sid }}"
      - "PRODUCT ID: {{ web_bom_id }}"
      - "INSTANCE:   {{ web_instance_number }}"
      - "SCSHOST:    {{ scs_server }}"


- name:                                "Web Install"
  block:

# *====================================4=======================================8
#   SAP Web Dispatcher: Install
# 2230669 - System Provisioning Using a Parameter Input File
#

    - name:                            "SAP Web Dispatcher Install: progress"
      ansible.builtin.debug:
        msg:                           "Starting Web Install ({{ sid_to_be_deployed.sid | upper }})"

    - name:                            "SAP Web Dispatcher Install"
      ansible.builtin.command: |
                                       ./sapinst SAPINST_INPUT_PARAMETERS_URL={{ dir_params }}/{{ sap_inifile }} \
                                                 SAPINST_EXECUTE_PRODUCT_ID={{ bom.product_ids.web }}            \
                                                 SAPINST_SKIP_DIALOGS=true                                       \
                                                 SAPINST_USE_HOSTNAME={{ virtual_host }}                         \
                                                 SAPINST_START_GUISERVER=false
      args:
        chdir:                         "{{ target_media_location }}/SWPM"
        creates:                       "/etc/sap_deployment_automation/{{ sid_to_be_deployed.sid | upper }}/sap_deployment_web.txt"
      environment:
        SAPSYSTEMNAME:                 "{{ db_sid | upper }}"
        TMPDIR:                        "{{ tmp_directory }}/{{ sid_to_be_deployed.sid | upper }}"
      register:                        web_installation
      failed_when:                     web_installation.rc > 0
      tags:
        - skip_ansible_lint
      when:                            node_tier == 'web'

    - name:                            "WEB Install: Installation results"
      ansible.builtin.debug:
        var:                           web_installation
      when:                            web_installation.rc > 0

    - name:                            "WEB Install: Installation results"
      ansible.builtin.debug:
        msg:                           "WEB Installation succeeded"
      when:                            web_installation.rc == 0

    - name:                            "Web Install: flag"
      ansible.builtin.file:
        path:                          "/etc/sap_deployment_automation/{{ sid_to_be_deployed.sid | upper }}/sap_deployment_web.txt"
        state:                         touch
        mode:                          0755

  when:
    - node_tier == 'web'
    - not web_installed.stat.exists

# *====================================4=======================================8

...
# /*---------------------------------------------------------------------------8
# |                                   END                                      |
# +------------------------------------4--------------------------------------*/
