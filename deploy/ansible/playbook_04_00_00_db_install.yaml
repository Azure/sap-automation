# /*----------------------------------------------------------------------------8
# |                                                                            |
# |                      Prepare for DB Install                           |
# |                                                                            |
# +------------------------------------4--------------------------------------*/
---

- hosts:                               localhost
  name:                                Get SAP Password from KeyVault
  gather_facts:                        false
  vars_files:
    - vars/ansible-input-api.yaml                               # API Input template with defaults

  tasks:

    - name:                            Create Progress folder
      ansible.builtin.file:
        path:                          "{{ _workspace_directory }}/.progress"
        state:                         directory
        mode:                          0755

    - name:                            Remove db-install-done flag
      ansible.builtin.file:
        path:                          "{{ _workspace_directory }}/.progress/db-install-done"
        state:                          absent


    - name:                            Set hdb fact
      ansible.builtin.set_fact:
        tier:                          hdb

    - name:                            Include 0.1-passwords Role
      ansible.builtin.include_role:
        name:                          roles-misc/0.1-passwords
        public:                        true

      tags:
        - 0.1-passwords

    - name:                            Include 0.2-kv-secrets role
      ansible.builtin.include_role:
        name:                          roles-misc/0.2-kv-secrets
        public:                        true
      vars:
        tier:                          fencing
      tags:
        - 0.2-kv-secrets

    - name:                            Run the sap-installation-media-storage-details role
      include_role:
        name:                          roles-misc/0.3.sap-installation-media-storage-details
        public:                        true
      tags:
        - kv-sap-installation-media-storage-details

# /*----------------------------------------------------------------------------8
# |                                                                            |
# |                      Playbook for HANA DB Install                           |
# |                                                                            |
# +------------------------------------4--------------------------------------*/


- hosts:                               "{{ sap_sid|upper }}_DB"

  name:                                DB Installation - HANA
  remote_user:                         "{{ orchestration_ansible_user }}"
  become:                              true
  become_user:                         root
  gather_facts:                        true
  vars_files:
    - vars/ansible-input-api.yaml                               # API Input template with defaults


  tasks:
# -------------------------------------+---------------------------------------8
#
# Build the list of tasks to be executed in order here.
#
# -------------------------------------+---------------------------------------8

    - name:                            "Install HANA"
      block:
        - name:                        Setting the DB facts
          ansible.builtin.set_fact:
            tier:                      hdb                                     # Actions for HANA DB Serve
            main_password:             "{{ hostvars.localhost.sap_password }}"
            sapbits_location_base_path: "{{ hostvars.localhost.sapbits_location_base_path }}"
            sapbits_sas_token:          "{{ hostvars.localhost.sapbits_sas_token }}"
          tags:
            - always

        - name:                        Show SAP password
          ansible.builtin.debug:
            msg:                       "{{ hostvars.localhost.sap_password }}"
            verbosity:                 2

        - block:
            - name:                    Include 4.0.0-hdb-install role
              ansible.builtin.include_role:
                name:                  roles-db/4.0.0-hdb-install
          always:
            - name:                    Get the Error lines
              ansible.builtin.set_fact:
                error_lines:           "{{ error_lines | default([]) + [item] }}"
              with_items:              "{{ hana_installation.stdout_lines }}"
              when:
                - hana_installation.stdout_lines is defined
                - hana_installation.rc is defined
                - '"ERROR" in item'

            - name:                    Include 7.0.0-post-install role
              ansible.builtin.include_role:
                name:                  roles-sap/7.0.0-post-install
              vars:
                suffix:                "_DB"
                tier:                  'hana'

            - name:                    Errors from HANA installation
              ansible.builtin.debug:
                msg:                   "{{ error_lines }}"
              when:
                - error_lines is defined

          tags:
            - 4.0.0-hdb-install

      when: node_tier == 'hana'

    - name:                            "Install Pacemaker (base)"
      block:

        - name:                        Setting the DB facts
          ansible.builtin.set_fact:
            tier:                      ha
            main_password:             "{{ hostvars.localhost.sap_password }}"
            password_ha_db_cluster:    "{{ hostvars.localhost.db_cluster_password }}"

        - name:                        "Setting the pacemaker facts -DB"
          ansible.builtin.set_fact:
            primary_instance_name:           "{{ ansible_play_hosts_all[0] }}"         # Setting up Primary Instance Name
            secondary_instance_name:         "{{ ansible_play_hosts_all[1] }}"         # Setting up Secondary Instance Name
            sap_hana_fencing_spn_client_id:  "{{ hostvars.localhost.sap_fencing_spn_client_id }}"
            sap_hana_fencing_spn_client_pwd: "{{ hostvars.localhost.sap_fencing_spn_pwd }}"
            sap_hana_fencing_spn_tenant_id:  "{{ hostvars.localhost.sap_fencing_spn_tenant_id }}"

        - block:
            - name:                    Include 1.3-repository role
              ansible.builtin.include_role:
                name:                  roles-os/1.3-repository
              when:                    db_high_availability
          tags:
            - 1.3-repository

        - block:
            - name:                    Include 1.4-packages role
              ansible.builtin.include_role:
                name:                  roles-os/1.4-packages
              when:                    db_high_availability
          tags:
            - 1.4-packages

        - block:
          # Setup the kernel parameters required for pacemaker cluster VMs
            - name:                    Include 1.9-kernelparameters role
              ansible.builtin.include_role:
                name:                  roles-os/1.9-kernelparameters
              when:                    db_high_availability
          tags:
            - 1.9-kernelparameters

        - block:
            - name:                    Include 1.16-services role
              ansible.builtin.include_role:
                name:                  roles-os/1.16-services
              when:                    db_high_availability
          tags:
            - 1.16-services

        - block:
            - name:                    Include 1.11-accounts role
              ansible.builtin.include_role:
                name:                  roles-os/1.11-accounts
              when:                    db_high_availability
          tags:
            - 1.11-accounts

        - block:
            - name:                    Include 1.17-generic-pacemaker role
              ansible.builtin.include_role:
                name:                  roles-os/1.17-generic-pacemaker                         # Configures the Pacemaker cluster with Azure fence agent
          tags:
            - 1.17-generic-pacemaker

      when:
        - db_high_availability
        - node_tier == 'hana'


# /*----------------------------------------------------------------------------8
# |                                                                            |
# |                      Playbook for Oracle DB Install                           |
# |                                                                            |
# +------------------------------------4--------------------------------------*/


- hosts:                               "{{ sap_sid|upper }}_DB"
  name:                                DB Installation - Oracle
  remote_user:                         "{{ orchestration_ansible_user }}"
  become:                              true
  become_user:                         "oracle"
  gather_facts:                        false
  vars_files:
    - vars/ansible-input-api.yaml                               # API Input template with defaults


  tasks:
# -------------------------------------+---------------------------------------8
#
# Build the list of tasks to be executed in order here.
#
# -------------------------------------+---------------------------------------8

    - name:                            "Install Oracle"
      block:

        - name:                        Setting the DB facts
          ansible.builtin.set_fact:
            tier:                      ora                                    # Actions for Oracle DB Servers
            main_password:             "{{ hostvars.localhost.sap_password }}"
          tags:
            - always

        - name:                        Check for file system mounts
          ansible.builtin.include_role:
            name:                      roles-sap-os/2.6-sap-mounts
          when:                        platform == 'ORACLE'

        - name:                        Installing Oracle
          ansible.builtin.include_role:
            name:                      roles-db/4.1.0-ora-install
          when:                        platform == 'ORACLE'
      when:                            platform == 'ORACLE'

# /*----------------------------------------------------------------------------8
# |                                                                            |
# |                         PLAYBOOK FOR DB LOGGING                       |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- hosts:                               localhost
  name:                                Log results
  gather_facts:                        false
  vars_files:
    - vars/ansible-input-api.yaml                               # API Input template with defaults

  tasks:
    - name:                           Create db-install-done flag
      ansible.builtin.file:
        path:                         "{{ _workspace_directory }}/.progress/db-install-done"
        state:                        touch
        mode:                         0755

...
# /*----------------------------------------------------------------------------8
# |                                    END                                      |
# +------------------------------------4--------------------------------------*/
