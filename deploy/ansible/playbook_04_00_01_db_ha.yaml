# /*----------------------------------------------------------------------------8
# |                                                                            |
# |                      Playbook for HANA DB HSR                          |
# |                                                                            |
# +------------------------------------4--------------------------------------*/
---

- hosts:                               localhost
  name:                                Get SAP Password from KeyVault
  gather_facts:                        false
  vars_files:
    - vars/ansible-input-api.yaml      # API Input template with defaults
  tasks:

    - name:                            Initialization
      block:
        - name:                        Create Progress folder
          ansible.builtin.file:
            path:                      "{{ _workspace_directory }}/.progress"
            state:                     directory
            mode:                      0755

        - name:                        Remove db-ha-done flag
          ansible.builtin.file:
            path:                      "{{ _workspace_directory }}/.progress/db-ha-done"
            state:                      absent

        - name:                        Initialize facts
          ansible.builtin.set_fact:
            tier:                      fencing

        - name:                        Run the misc/password role
          ansible.builtin.include_role:
            name:                      roles-misc/0.1-passwords
            public:                    true
          tags:
            - 0.1-passwords

        - name:                        Run the keyvault role
          ansible.builtin.include_role:
            name:                      roles-misc/0.2-kv-secrets
          when:                      platform != "ORACLE"
          tags:
            - kv-secrets

      when:                            db_high_availability


- hosts:                               "{{ sap_sid | upper }}_DB"
  name:                                DB HA Configuration
  remote_user:                         "{{ orchestration_ansible_user }}"
  become:                              true
  become_user:                         "{{ become_user_name }}"
  gather_facts:                        true                                    # Important to collect hostvars information
  vars_files:
    - vars/ansible-input-api.yaml                                              # API Input template with defaults

  tasks:
# -------------------------------------+---------------------------------------8
#
# Build the list of tasks to be executed in order here.
#
# -------------------------------------+---------------------------------------8
    - name:                            "HANA HA Setup"
      block:
        - name:                            "Install HANA System Replication"
          block:
            - name:                        Initialize facts
              ansible.builtin.set_fact:
                tier:                      hdb                                      # Actions for HANA DB Servers
                primary_instance_name :    "{{ ansible_play_hosts_all[0] }}"        # Setting up Primary Instance Name
                primary_instance_ip_db:    "{{ hostvars[ansible_play_hosts_all[0]]['ansible_eth0']['ipv4']['address'] }}"
                secondary_instance_name:   "{{ ansible_play_hosts_all[1] }}"         # Setting up Secondary Instance Name
                secondary_instance_ip_db:  "{{ hostvars[ansible_play_hosts_all[1]]['ansible_eth0']['ipv4']['address'] }}"
                main_password:             "{{ hostvars.localhost.sap_password }}"

            - name:                    Run the db/hdb-hsr role
              ansible.builtin.include_role:
                name:                  roles-db/4.0.1-hdb-hsr
              tags:
                - 4.0.1-hdb-hsr

        - name:                            "Install HANA Pacemaker resources"
          block:
            - name:                        Initialize facts
              ansible.builtin.set_fact:
                tier:                      ha
                password_ha_db_cluster:    "{{ hostvars.localhost.db_cluster_password }}"
                main_password:             "{{ hostvars.localhost.sap_password }}"
                primary_instance_name:     "{{ ansible_play_hosts_all[0] }}"         # Setting up Primary Instance Name
                primary_instance_ip_db:    "{{ hostvars[ansible_play_hosts_all[0]]['ansible_eth0']['ipv4']['address'] }}"
                secondary_instance_name:   "{{ ansible_play_hosts_all[1] }}"         # Setting up Secondary Instance Name
                secondary_instance_ip_db:  "{{ hostvars[ansible_play_hosts_all[1]]['ansible_eth0']['ipv4']['address'] }}"
                fencing_spn_client_id:     "{% if not use_msi_for_clusters %}{{ hostvars.localhost.sap_fencing_spn_client_id }}{% endif %}"
                fencing_spn_client_pwd:    "{% if not use_msi_for_clusters %}{{ hostvars.localhost.sap_fencing_spn_pwd }}{% endif %}"
                fencing_spn_tenant_id:     "{% if not use_msi_for_clusters %}{{ hostvars.localhost.sap_fencing_spn_tenant_id }}{% endif %}"
              tags:
                - always

            - name:                    "HANA HA Setup: - Ensure the needed services are started"
              ansible.builtin.include_role:
                name:                  roles-os/1.16-services
              tags:
                - 1.16-services

            - name:                    "HANA HA Setup: - run the Pacemaker role"
              ansible.builtin.include_role:
                name:                  roles-sap/5.5-hanadb-pacemaker
              when:                    db_high_availability
              tags:
                - 5.5-hanadb-pacemaker

      when:
        - db_high_availability
        - platform == 'HANA'

# -------------------------------------+---------------------------------------8
#
# Build the list of tasks to be executed in order here.
#
# -------------------------------------+---------------------------------------8

# Oracle installation has to be done with oracle user. Change the user to become orasid and call the installer.

- hosts:                               "{{ sap_sid | upper }}_DB[0]"
  # serial:                               1
  name:                                DB Data Guard setup - Oracle
  remote_user:                         "{{ orchestration_ansible_user }}"
  become:                              true
  become_user:                         "root"
  gather_facts:                        true
  vars_files:
    - vars/ansible-input-api.yaml                               # API Input template with defaults

  tasks:

    - name:                            "Oracle Data Guard Setup"
      block:
        - name:                        Setting the DB facts
          ansible.builtin.set_fact:
            tier:                      ora                                    # Actions for Oracle DB Servers
            action:                    0
            main_password:             "{{ hostvars.localhost.sap_password }}"
          tags:
            - always

        - name:                        Oracle Data guard
          ansible.builtin.include_role:
            name:                      roles-db/4.1.3-ora-dg
          tags:
            - 4.1.3-ora-dg
      when:
        - db_high_availability
        - platform == 'ORACLE'

- hosts:                               "{{ sap_sid | upper }}_DB"
  name:                                DB Dataguard setup - Oracle
  remote_user:                         "{{ orchestration_ansible_user }}"
  become:                              true
  become_user:                         "root"
  gather_facts:                        true
  vars_files:
    - vars/ansible-input-api.yaml                               # API Input template with defaults

  tasks:

    - name:                            "Oracle Data Guard Setup"
      block:
        - name:                        Setting the DB facts
          ansible.builtin.set_fact:
            tier:                      ora                                    # Actions for Oracle DB Servers
            action:                    1
            main_password:             "{{ hostvars.localhost.sap_password }}"
          tags:
            - always

        - name:                        Oracle Data guard
          ansible.builtin.include_role:
            name:                      roles-db/4.1.3-ora-dg
          tags:
            - 4.1.3-ora-dg

        - name:                       "Observer Playbook: - Run post installation routines"
          ansible.builtin.include_role:
            name:                     roles-sap/7.0.0-post-install
          vars:
            suffix:                   "_DC_ACTION_1"
            tier:                     'oracle'
      when:
        - db_high_availability
        - platform == 'ORACLE'

- hosts:                               "{{ sap_sid | upper }}_DB[0]"
  name:                                DB Dataguard setup - Oracle
  remote_user:                         "{{ orchestration_ansible_user }}"
  become:                              true
  become_user:                         "root"
  gather_facts:                        true
  vars_files:
    - vars/ansible-input-api.yaml                               # API Input template with defaults

  tasks:

    - name:                            "Oracle Data Guard Setup"
      block:
        - name:                        Setting the DB facts
          ansible.builtin.set_fact:
            tier:                      ora                                    # Actions for Oracle DB Servers
            action:                    2
            main_password:             "{{ hostvars.localhost.sap_password }}"
          tags:
            - always

        - name:                        Oracle Data guard
          ansible.builtin.include_role:
            name:                      roles-db/4.1.3-ora-dg
          tags:
            - 4.1.3-ora-dg

        - name:                       "Observer Playbook: - Run post installation routines"
          ansible.builtin.include_role:
            name:                     roles-sap/7.0.0-post-install
          vars:
            suffix:                   "_DC_ACTION_2"
            tier:                     'oracle'
      when:
        - db_high_availability
        - platform == 'ORACLE'

# /*----------------------------------------------------------------------------8
# |                                                                            |
# |                         PLAYBOOK FOR Observer Node setup                       |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- hosts:                               "{{ sap_sid | upper }}_OBSERVER_DB"

  name:                                Observer Playbook
  remote_user:                         "{{ orchestration_ansible_user }}"
  become:                              true
  become_user:                         "{{ become_user_name }}"
  gather_facts:                        true                                    # Important to collect hostvars information
  vars_files:
    - vars/ansible-input-api.yaml                                              # API Input template with defaults

  tasks:

    - name:                            "Observer Playbook: Setting the DB facts"
      ansible.builtin.set_fact:
        node_tier:                     observer
        action:                        3
        main_password:                 "{{ hostvars.localhost.sap_password }}"
      tags:
        - always

    # Specify the active tier for this playbook run
    - name:                            "Observer Playbook: Setting the os tier facts"
      ansible.builtin.set_fact:
        tier:                          os
      tags:
        - always

    - name:                            "Observer Playbook: Oracle Observer setup"
      ansible.builtin.include_role:
        name:                          roles-db/4.1.3-ora-dg

    - name:                            "Observer Playbook: - Run post installation routines"
      ansible.builtin.include_role:
        name:                          roles-sap/7.0.0-post-install
      vars:
        suffix:                        "_OBSERVER"
        tier:                          'oracle'
...
# /*----------------------------------------------------------------------------8
# |                                    END                                      |
# +------------------------------------4--------------------------------------*/
