# /*---------------------------------------------------------------------------8
# |                                                                            |
# |                Perform the ANF system mounts                              |
# |                                                                            |
# +------------------------------------4--------------------------------------*/
---

- name:                                "ANF Mount: Set the NFS Service name"
  ansible.builtin.set_fact:
    nfs_service:                       "{% if distribution_id == 'redhat8' %}nfs-server{% else %}{% if distribution_id == 'redhat7' %}nfs{% else %}nfsserver{% endif %}{% endif %}"

- name:                                "ANF Mount: Ensure the NFS service is stopped"
  ansible.builtin.systemd:
    name:                              "{{ nfs_service }}"
    state:                             stopped
  when:
    - node_tier == 'scs'
    - sap_mnt is not defined
    - sap_trans is not defined

- name:                                "ANF Mount: Disable ID mapping (ANF)"
  ansible.builtin.lineinfile:
    path:                              /etc/idmapd.conf
    regexp:                            '^[ #]*Domain = '
    line:                              'Domain = defaultv4iddomain.com'
    insertafter:                       '[General]'
  register:                            id_mapping_changed
  when:
    - tier == 'sapos'

- name:                                "ANF Mount: Ensure the services are restarted"
  block:
    - name:                            "AF Mount: Ensure the rpcbind service is restarted"
      ansible.builtin.systemd:
        name:                          rpcbind
        state:                         restarted
    - name:                            "ANF Mount: Ensure the NFS ID Map service is restarted"
      ansible.builtin.systemd:
        name:                          "nfs-idmapd"
        daemon-reload:                 true
        state:                         restarted
    - name:                            "ANF Mount: Pause for 15 seconds"
      ansible.builtin.pause:
        seconds:                       5
    - name:                            "ANF Mount: Ensure the NFS service is restarted"
      ansible.builtin.systemd:
        name:                          "{{ nfs_service }}"
        state:                         restarted
  when:
    - id_mapping_changed is changed

- name:                                "ANF Mount: Create /saptmp"
  ansible.builtin.file:
    path:                              "/saptmp"
    state:                             directory
    group:                             sapsys
  when:
    - node_tier == 'scs'
    - tier == 'sapos'
    - sap_mnt is defined
  tags:
    - skip_ansible_lint

- name:                                "ANF Mount: Create /saptrans"
  ansible.builtin.file:
    path:                              "/saptrans"
    state:                             directory
    group:                             sapsys
  when:
    - node_tier == 'scs'
    - tier == 'sapos'
    - sap_trans is defined
  tags:
    - skip_ansible_lint

  # Mount Filesystem on ANF
  # This is needed so that we can create the correct directory
- name:                                "ANF Mount: (sapmnt)"
  block:
    - name:                            "ANF Mount: Filesystems on ANF (sapmnt)"
      ansible.builtin.mount:
        src:                           "{{ sap_mnt }}"
        path:                          "/saptmp"
        fstype:                        "nfs4"
        opts:                          "rw,hard,rsize=65536,wsize=65536,sec=sys,vers=4.1,tcp"
        state:                         mounted
  when:
    - tier == 'sapos'
    - node_tier == 'scs'
    - sap_mnt is defined
  rescue:
    - name:                            "ANF Mount: Clear the cache of the nfsidmap daemon (ANF)"
      ansible.builtin.shell: |
                                       nfsidmap -c

    - name:                            "ANF Mount: Ensure the rpcbind service is restarted"
      ansible.builtin.systemd:
        name:                          rpcbind
        daemon-reload:                 true
        state:                         restarted

# /*---------------------------------------------------------------------------8
# |                                                                            |
# |          Mount Filesystem on ANF                                           |
# |          This is needed so that we can create the correct directories      |
# +------------------------------------4--------------------------------------*/
- name:                                "ANF Mount: (transport)"
  block:
    - name:                            "ANF Mount: Filesystems on ANF (transport)"
      ansible.builtin.mount:
        src:                           "{{ sap_trans }}"
        path:                          "/saptrans"
        fstype:                        "nfs4"
        opts:                          "rw,hard,rsize=65536,wsize=65536,sec=sys,vers=4.1,tcp"
        state:                         mounted
  when:
    - tier == 'sapos'
    - node_tier == 'scs'
    - sap_trans is defined
  rescue:
    - name:                            "ANF Mount: Clear the cache of the nfsidmap daemon (ANF)"
      ansible.builtin.shell: |
                                       nfsidmap -c

    - name:                            "ANF Mount: Ensure the rpcbind service is restarted"
      ansible.builtin.systemd:
        name:                          rpcbind
        state:                         restarted


- name:                                "ANF Mount: Create SAP Directories (spmnt & usrsap)"
  ansible.builtin.file:
    path:                              "{{ item.path }}"
    state:                             directory
    mode:                              0755
  loop:
    - { path: '/saptmp/sapmnt{{ sap_sid|upper }}'                              }
    - { path: '/saptmp/usrsap{{ sap_sid|upper }}'                              }
    - { path: '/saptmp/usrsap{{ sap_sid|upper }}ascs{{ scs_instance_number }}' }
    - { path: '/saptmp/usrsap{{ sap_sid|upper }}ers{{ ers_instance_number }}'  }
    - { path: '/saptmp/usrsap{{ sap_sid|upper }}sys'                           }
  when:
    - tier == 'sapos'
    - node_tier == 'scs'
    - sap_mnt is defined

- name:                                "ANF Mount: Create SAP Directories (transport)"
  ansible.builtin.file:
    path:                              "{{ item.path }}"
    state:                             directory
    mode:                              0755
  loop:
    - { path: '/saptrans/usrsaptrans' }
  when:
    - tier == 'sapos'
    - node_tier == 'scs'
    - sap_trans is defined

- name:                                "ANF Mount: Unmount file systems (sap_mnt)"
  ansible.builtin.mount:
    src:                               "{{ sap_mnt }}"
    path:                              "/saptmp"
    state:                             unmounted
  when:
    - tier == 'sapos'
    - node_tier == 'scs'
    - sap_mnt is defined

- name:                                "ANF Mount: Unmount file systems (transport)"
  ansible.builtin.mount:
    src:                               "{{ sap_trans }}"
    path:                              "/saptrans"
    state:                             unmounted
  when:
    - tier == 'sapos'
    - node_tier == 'scs'
    - sap_trans is defined

- name:                                "ANF Mount: Delete locally created SAP Directories"
  ansible.builtin.file:
    path:                              "{{ item.path }}"
    state:                             absent
  loop:
    - { path: '/saptmp/sapmnt{{ sap_sid|upper }}'                              }
    - { path: '/saptmp/usrsap{{ sap_sid|upper }}'                              }
    - { path: '/saptmp/usrsap{{ sap_sid|upper }}ascs{{ scs_instance_number }}' }
    - { path: '/saptmp/usrsap{{ sap_sid|upper }}ers{{ ers_instance_number }}'  }
    - { path: '/saptmp/usrsap{{ sap_sid|upper }}sys'                           }
  when:
    - tier == 'sapos'
    - node_tier == 'scs'
    - sap_mnt is defined

- name:                                "ANF Mount: Delete locally created SAP Directories (transport)"
  ansible.builtin.file:
    path:                              "{{ item.path }}"
    state:                             absent
  loop:
    - { path: '/saptrans/usrsaptrans'}
  when:
    - tier == 'sapos'
    - node_tier == 'scs'
    - sap_trans is defined


- name:                                "ANF Mount: Cleanup fstab and directory (sap_mnt)"
  ansible.builtin.mount:
    src:                               "{{ sap_mnt }}"
    path:                              "/saptmp"
    fstype:                            "nfs4"
    opts:                              "rw,hard,rsize=65536,wsize=65536,sec=sys,vers=4.1,tcp"
    state:                             absent
  when:
    - tier == 'sapos'
    - node_tier == 'scs'
    - sap_mnt is defined

- name:                                "ANF Mount: Cleanup fstab and directory (transport)"
  ansible.builtin.mount:
    src:                               "{{ sap_trans }}"
    path:                              "/saptrans"
    fstype:                            "nfs4"
    opts:                              "rw,hard,rsize=65536,wsize=65536,sec=sys,vers=4.1,tcp"
    state:                             absent
  when:
    - tier == 'sapos'
    - node_tier == 'scs'
    - sap_trans is defined


# Configure shared directories
- name:                                "ANF Mount: Create SAP Directories (sap_mnt)"
  ansible.builtin.file:
    owner:                             '{{ sidadm_uid }}'
    group:                             sapsys
    mode:                              0755
    path:                              "{{ item.path }}"
    state:                             directory
  loop:
    - { path: '/sapmnt/{{ sap_sid|upper }}'      }
  when:
    - tier == 'sapos'
    - node_tier != 'hana'
    - sap_mnt is defined
  tags:
    - skip_ansible_lint
  register: is_created_now

- name:                                "ANF Mount: Change attribute only when we create SAP Directories (sap_mnt)"
  ansible.builtin.file:
    path:                              "{{ item.item.path }}"
    state:                             directory
    attr:                              i+
  loop: "{{ is_created_now.results }}"
  when:
    - tier == 'sapos'
    - item.item is changed
  register: set_immutable_attribute
  tags:
    - skip_ansible_lint

- name:                                "ANF Mount: Create SAP Directories (transport)"
  ansible.builtin.file:
    owner:                             '{{ sidadm_uid }}'
    group:                             sapsys
    mode:                              0755
    path:                              "{{ item.path }}"
    state:                             directory
  loop:
    - { path: '/usr/sap/trans'                 }
  when:
    - tier == 'sapos'
    - node_tier in ['app','scs','ers', 'pas']
    - sap_trans is defined
  register: is_created_now2
  tags:
    - skip_ansible_lint

- name:                                "ANF Mount: Change attribute only when we create SAP Directories (transport)"
  ansible.builtin.file:
    path:                              "{{ item.item.path }}"
    state:                             directory
    attr:                              i+
  loop: "{{ is_created_now2.results }}"
  when:
    - tier == 'sapos'
    - item.item is changed
  register: set_immutable_attribute
  tags:
    - skip_ansible_lint

- name:                                "ANF Mount: Create SAP Directories (scs & ers)"
  ansible.builtin.file:
    path:                              "{{ item.path }}"
    state:                             directory
    owner:                             '{{ sidadm_uid }}'
    group:                             sapsys
    mode:                              0755
  loop:
    - { path: '/usr/sap/{{ sap_sid|upper }}' }
    - { path: '/usr/sap/{{ sap_sid|upper }}/SYS' }
    - { path: '/usr/sap/{{ sap_sid|upper }}/ASCS{{ scs_instance_number }}' }
    - { path: '/usr/sap/{{ sap_sid|upper }}/ERS{{ ers_instance_number }}' }
  when:
    - tier == 'sapos'
    - node_tier in ['scs','ers']
    - sap_mnt is defined
  register: is_created_now3

- name:                                "ANF Mount: Change attribute only when we create SAP Directories (scs & ers)"
  ansible.builtin.file:
    path:                              "{{ item.item.path }}"
    state:                             directory
    attr:                              i+
  loop: "{{ is_created_now3.results }}"
  when:
    - tier == 'sapos'
    - item.item is changed
  register: set_immutable_attribute
  tags:
    - skip_ansible_lint

- name:                                "ANF Mount: (transport)"
  ansible.builtin.mount:
    src:                               "{{ item.src }}"
    path:                              "{{ item.path }}"
    fstype:                            "{{ item.type }}"
    opts:                              'rw,hard,rsize=65536,wsize=65536,sec=sys,vers=4.1,tcp'
    state:                             mounted
  loop:
    - { type: 'nfs4',  src: '{{ sap_trans }}/usrsaptrans', path: '/usr/sap/trans'}
  when:
    - tier == 'sapos'
    - node_tier in ['scs','ers','pas','app']
    - sap_trans is defined

- name:                                "ANF Mount: sapmnt/{{ sap_sid|upper }} - Standalone"
  ansible.builtin.mount:
    src:                               "{{ item.src }}"
    path:                              "{{ item.path }}"
    fstype:                            "{{ item.type }}"
    opts:                              'rw,hard,rsize=65536,wsize=65536,sec=sys,vers=4.1,tcp'
    state:                             mounted
  loop:
    - { type: 'nfs4',  src: '{{ sap_mnt }}/sapmnt{{ sap_sid|upper }}',    path: '/sapmnt/{{ sap_sid|upper }}'      }
  when:
    - not scs_high_availability
    - tier in ['sapos']
    - node_tier != 'hana'
    - sap_mnt is defined

- name:                                "ANF Mount: sapmnt/{{ sap_sid|upper }}"
  ansible.builtin.mount:
    src:                               "{{ item.src }}"
    path:                              "{{ item.path }}"
    fstype:                            "{{ item.type }}"
    opts:                              'rw,hard,rsize=65536,wsize=65536,sec=sys,vers=4.1,tcp'
    state:                             mounted
  loop:
    - { type: 'nfs4',  src: '{{ sap_mnt }}/sapmnt{{ sap_sid|upper }}',    path: '/sapmnt/{{ sap_sid|upper }}'      }
  when:
    - scs_high_availability
    - tier in ['sapos']
    - node_tier != 'hana'
    - sap_mnt is defined

- name:                                "ANF Mount: usr/sap/{{ sap_sid|upper }}/SYS"
  ansible.builtin.mount:
    src:                               "{{ item.src }}"
    path:                              "{{ item.path }}"
    fstype:                            "{{ item.type }}"
    opts:                              'rw,hard,rsize=65536,wsize=65536,sec=sys,vers=4.1,tcp'
    state:                             mounted
  loop:
    - { type: 'nfs4',  src: '{{ sap_mnt }}/usrsap{{ sap_sid|upper }}sys', path: '/usr/sap/{{ sap_sid|upper }}/SYS' }
  when:
    - scs_high_availability
    - tier in ['sapos']
    - node_tier in ['scs','ers']
    - sap_mnt is defined

...
