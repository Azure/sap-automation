# /*---------------------------------------------------------------------------8
# |                                                                            |
# |                Perform the ANF system mounts                              |
# |                                                                            |
# +------------------------------------4--------------------------------------*/
---

- name:                                "ANF Mount: Set the NFS Service name"
  ansible.builtin.set_fact:
    nfs_service:                       "{% if distribution_id == 'redhat8' %}nfs-server{% else %}{% if distribution_id == 'redhat7' %}nfs{% else %}nfsserver{% endif %}{% endif %}"

- name:                                "AFS Mount: Define this SID"
  ansible.builtin.set_fact:
    this_sid:                          { 'sid': '{{ sap_sid|upper }}', 'sidadm_uid': '{{ sidadm_uid }}', 'ascs_inst_no': '{{ scs_instance_number }}', 'pas_inst_no': '{{ app_instance_number }}' , 'app_inst_no': '{{ pas_instance_number }}' }

- name:                                "AFS Mount: Create list of all_sap_mounts to support "
  ansible.builtin.set_fact:
    all_sap_mounts:                    "{% if MULTI_SIDS is defined %}{{ MULTI_SIDS }}{% else %}{{ all_sap_mounts|default([]) + [ this_sid ] }}{% endif %}"

- name:                                "ANF Mount: Ensure the NFS service is stopped"
  ansible.builtin.systemd:
    name:                              "{{ nfs_service }}"
    state:                             stopped
  when:
    - node_tier == 'scs'
    - sap_mnt is not defined
    - sap_trans is not defined

- name:                                "ANF Mount: Disable ID mapping (ANF)"
  ansible.builtin.lineinfile:
    path:                              /etc/idmapd.conf
    regexp:                            '^[ #]*Domain = '
    line:                              'Domain = defaultv4iddomain.com'
    insertafter:                       '[General]'
  register:                            id_mapping_changed
  when:
    - tier == 'sapos'

- name:                                "ANF Mount: Ensure the services are restarted"
  block:
    - name:                            "AF Mount: Ensure the rpcbind service is restarted"
      ansible.builtin.systemd:
        name:                          rpcbind
        state:                         restarted
    - name:                            "ANF Mount: Ensure the NFS ID Map service is restarted"
      ansible.builtin.systemd:
        name:                          "nfs-idmapd"
        daemon-reload:                 true
        state:                         restarted
    - name:                            "ANF Mount: Pause for 15 seconds"
      ansible.builtin.pause:
        seconds:                       5
    - name:                            "ANF Mount: Ensure the NFS service is restarted"
      ansible.builtin.systemd:
        name:                          "{{ nfs_service }}"
        state:                         restarted
  when:
    - id_mapping_changed is changed

# /*---------------------------------------------------------------------------8
# |                                                                            |
# |         Prepare for the sap_mnt mounts                                     |
# |         Create temporary directory structure                               |
# |         Mount the share, create the directory structure on share           |
# |         Unmount and clean up temporary directory structure                 |
# |                                                                            |
# +------------------------------------4--------------------------------------*/
- name:                                "ANF Mount: (sapmnt)"
  block:
    - name:                            "ANF Mount: Create /saptmp"
      ansible.builtin.file:
        path:                          "/saptmp"
        state:                         directory
        group:                         sapsys
      tags:
        - skip_ansible_lint

    - name:                            "ANF Mount: (sapmnt)"
      block:
        - name:                        "ANF Mount: Filesystems on ANF (sapmnt)"
          ansible.builtin.mount:
            src:                       "{{ sap_mnt }}"
            path:                      "/saptmp"
            fstype:                    "nfs4"
            opts:                      "rw,hard,rsize=65536,wsize=65536,sec=sys,vers=4.1,tcp"
            state:                     mounted
      rescue:
        - name:                        "ANF Mount: Clear the cache of the nfsidmap daemon (ANF)"
          ansible.builtin.shell: |
                                       nfsidmap -c
        - name:                        "ANF Mount: Ensure the rpcbind service is restarted"
          ansible.builtin.systemd:
            name:                      rpcbind
            daemon-reload:             true
            state:                     restarted

    - name:                            "ANF Mount: Create SAP Directories (spmnt & usrsap)"
      ansible.builtin.file:
        path:                          "{{ item.path }}"
        state:                         directory
        mode:                          0755
      loop:
        - { path: '/saptmp/sapmnt{{ sap_sid|upper }}'                              }
        - { path: '/saptmp/usrsap{{ sap_sid|upper }}'                              }
        - { path: '/saptmp/usrsap{{ sap_sid|upper }}ascs{{ scs_instance_number }}' }
        - { path: '/saptmp/usrsap{{ sap_sid|upper }}ers{{ ers_instance_number }}'  }
        - { path: '/saptmp/usrsap{{ sap_sid|upper }}sys'                           }
    
    - name:                           "ANF Mount: Create SAP Directories (ANF)"
      ansible.builtin.file:
        path:                          "/saptmp/sapmnt{{ item.sid | upper }}"
        state:                         directory
        mode:                          0755
      loop:                            "{{ MULTI_SIDS }}"
      when:                            MULTI_SIDS is defined
    
    - name:                            "ANF Mount: Unmount file systems (sap_mnt)"
      ansible.builtin.mount:
        src:                           "{{ sap_mnt }}"
        path:                          "/saptmp"
        state:                         unmounted
    
    - name:                            "ANF Mount: Delete locally created SAP Directories"
      ansible.builtin.file:
        path:                          "{{ item.path }}"
        state:                         absent
      loop:
        - { path: '/saptmp/sapmnt{{ sap_sid|upper }}'                              }
        - { path: '/saptmp/usrsap{{ sap_sid|upper }}'                              }
        - { path: '/saptmp/usrsap{{ sap_sid|upper }}ascs{{ scs_instance_number }}' }
        - { path: '/saptmp/usrsap{{ sap_sid|upper }}ers{{ ers_instance_number }}'  }
        - { path: '/saptmp/usrsap{{ sap_sid|upper }}sys'                           }
    
    - name:                            "ANF Mount: Remove SAP Directories (ANF)"
      ansible.builtin.file:
        path:                          "/saptmp/sapmnt{{ item.sid | upper }}"
        state:                         absent
      loop:                            "{{ MULTI_SIDS }}"
      when:                            MULTI_SIDS is defined

    - name:                            "ANF Mount: Cleanup fstab and directory (sap_mnt)"
      ansible.builtin.mount:
        src:                           "{{ sap_mnt }}"
        path:                          "/saptmp"
        fstype:                        "nfs4"
        opts:                          "rw,hard,rsize=65536,wsize=65536,sec=sys,vers=4.1,tcp"
        state:                         absent

  when:
    - tier == 'sapos'
    - node_tier == 'scs'
    - sap_mnt is defined

# /*---------------------------------------------------------------------------8
# |                                                                            |
# |                Perform the sap_mnt mounts                                  |
# |                Create directories and make them immutable                  |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- name:                                "ANF Mount: Create SAP Directories (sapmnt)"
  ansible.builtin.file:
    owner:                             "{{ item.sidadm_uid }}"
    group:                             sapsys
    mode:                              0755
    path:                              "/sapmnt/{{ item.sid }}"
    state:                             directory
  register: is_created_now
  loop:                                "{{ all_sap_mounts }}"
  tags:
    - skip_ansible_lint
  when:
    - tier == 'sapos'
    - node_tier in ['app','scs','ers', 'pas']
    - sap_mnt is defined

- name:                                "ANF Mount: Change attribute only when we create SAP Directories (sap_mnt)"
  ansible.builtin.file:
    path:                              "{{ item.item.path }}"
    state:                             directory
    attr:                              i+
  loop: "{{ is_created_now.results }}"
  when:
    - tier == 'sapos'
    - item.item is changed
  register: set_immutable_attribute
  tags:
    - skip_ansible_lint

- name:                                "ANF Mount: Create SAP Directories (scs & ers)"
  ansible.builtin.file:
    path:                              "{{ item.path }}"
    state:                             directory
    owner:                             '{{ sidadm_uid }}'
    group:                             sapsys
    mode:                              0755
  loop:
    - { path: '/usr/sap/{{ sap_sid|upper }}' }
    - { path: '/usr/sap/{{ sap_sid|upper }}/SYS' }
    - { path: '/usr/sap/{{ sap_sid|upper }}/ASCS{{ scs_instance_number }}' }
    - { path: '/usr/sap/{{ sap_sid|upper }}/ERS{{ ers_instance_number }}' }
  when:
    - tier == 'sapos'
    - node_tier in ['scs','ers']
    - sap_mnt is defined
    - MULTI_SIDS is undefined
  register: is_created_now3

- name:                                "ANF Mount: Change attribute only when we create SAP Directories (scs & ers)"
  ansible.builtin.file:
    path:                              "{{ item.item.path }}"
    state:                             directory
    attr:                              i+
  loop: "{{ is_created_now3.results }}"
  when:
    - tier == 'sapos'
    - item.item is changed
  register: set_immutable_attribute
  tags:
    - skip_ansible_lint

- name:                                "ANF Mount: sapmnt/{{ sap_sid|upper }} - Standalone"
  ansible.builtin.mount:
    src:                               "{{ item.src }}"
    path:                              "{{ item.path }}"
    fstype:                            "{{ item.type }}"
    opts:                              'rw,hard,rsize=65536,wsize=65536,sec=sys,vers=4.1,tcp'
    state:                             mounted
  loop:
    - { type: 'nfs4',  src: '{{ sap_mnt }}/sapmnt{{ sap_sid|upper }}',    path: '/sapmnt/{{ sap_sid|upper }}'      }
  when:
    - not scs_high_availability
    - tier in ['sapos']
    - node_tier != 'hana'
    - sap_mnt is defined

- name:                                "AFS Mount: sapmnt/{{ sap_sid|upper }} - Standalone MULTI_SIDS"
  become:                              true
  become_user:                         root
  ansible.builtin.mount:
    src:                               "{{ sap_mnt }}/sapmnt{{ item.sid }}"
    path:                              "/sapmnt/{{ item.sid }}"
    fstype:                            'nfs4'
    opts:                              'rw,hard,rsize=65536,wsize=65536,sec=sys,vers=4.1,tcp'
    state:                             mounted
  loop:                                "{{ MULTI_SIDS }}"
  when:
    - not scs_high_availability
    - sap_mnt is defined
    - MULTI_SIDS is defined

- name:                                "ANF Mount: sapmnt/{{ sap_sid|upper }}"
  ansible.builtin.mount:
    src:                               "{{ item.src }}"
    path:                              "{{ item.path }}"
    fstype:                            "{{ item.type }}"
    opts:                              'rw,hard,rsize=65536,wsize=65536,sec=sys,vers=4.1,tcp'
    state:                             mounted
  loop:
    - { type: 'nfs4',  src: '{{ sap_mnt }}/sapmnt{{ sap_sid|upper }}',    path: '/sapmnt/{{ sap_sid|upper }}'      }
  when:
    - scs_high_availability
    - tier in ['sapos']
    - node_tier != 'hana'
    - sap_mnt is defined

- name:                                "ANF Mount: usr/sap/{{ sap_sid|upper }}/SYS"
  ansible.builtin.mount:
    src:                               "{{ item.src }}"
    path:                              "{{ item.path }}"
    fstype:                            "{{ item.type }}"
    opts:                              'rw,hard,rsize=65536,wsize=65536,sec=sys,vers=4.1,tcp'
    state:                             mounted
  loop:
    - { type: 'nfs4',  src: '{{ sap_mnt }}/usrsap{{ sap_sid|upper }}sys', path: '/usr/sap/{{ sap_sid|upper }}/SYS' }
  when:
    - scs_high_availability
    - tier in ['sapos']
    - node_tier in ['scs','ers']
    - sap_mnt is defined


# /*---------------------------------------------------------------------------8
# |                                                                            |
# |         Prepare for the sap_trans, install mounts                                     |
# |         Create temporary directory structure                               |
# |         Mount the share, create the directory structure on share           |
# |         Unmount and clean up temporary directory structure                 |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- name:                                "ANF Mount: sap_trans, install"
  ansible.builtin.include_tasks:       2.6.1.1-anf-data.yaml
  loop:     
   - { 'type': 'trans',   'temppath' : 'saptrans',   'mount' : '{{ sap_trans }}',                  'opts' : 'rw,hard,rsize=65536,wsize=65536,sec=sys,vers=4.1,tcp', 'path' : '/usr/sap/trans',   'target_nodes' : ['app','pas', 'ers', 'scs'] }
   - { 'type': 'install', 'temppath' : 'sapinstall', 'mount' : '{{ usr_sap_install_mountpoint }}', 'opts' : 'rw,hard,rsize=65536,wsize=65536,sec=sys,vers=4.1,tcp', 'path' : '/usr/sap/install', 'target_nodes' : ['all']}
  vars:
    primary_host:                     "{{ query('inventory_hostnames', '{{ sap_sid|upper }}_SCS') | first }}"
  when:
    - tier == 'sapos'

- name:                                "ANF Mount: HANA data"
  ansible.builtin.include_tasks:       2.6.1.1-anf-data.yaml
  loop:     
   - { 'type': 'data', 'temppath' : 'hanadata', 'mount' : '{{ hana_data_mountpoint }}', 'opts' : 'rw,hard,rsize=65536,wsize=65536,sec=sys,vers=4.1,tcp', 'path' : '/hana/data', 'target_nodes' : ['hana'] }
   - { 'type': 'log',  'temppath' : 'hanalog',  'mount' : '{{ hana_log_mountpoint }}',  'opts' : 'rw,hard,rsize=65536,wsize=65536,sec=sys,vers=4.1,tcp', 'path' : '/hana/log' , 'target_nodes' : ['hana'] }
  vars:
    primary_host:                     "{{ query('inventory_hostnames', '{{ sap_sid|upper }}_DB') | first }}"
  when:
    - tier == 'sapos'
    - node_tier == 'hana'
    - hana_data_mountpoint is defined
    - hana_log_mountpoint is defined

...
