# /*---------------------------------------------------------------------------8
# |                                                                            |
# |         Prepare for the mounts                                             |
# |         Create temporary directory structure                               |
# |         Mount the share, create the directory structure on share           |
# |         Unmount and clean up temporary directory structure                 |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- name:                                "ANF Mount: Loop variable"
  ansible.builtin.debug:
    var:                               item
    verbosity:                         2

- name:                                "ANF Mount: HANA {{ item.type }}"
  block:
    - name:                            "ANF Mount: Create temporary directory /{{ item.temppath }}"
      ansible.builtin.file:
        path:                          "/{{ item.temppath }}"
        mode:                          "{{ item.permissions }}"
        state:                         directory
        group:                         sapsys

    - name:                            "ANF Mount: ({{ item.type }})"
      block:
        - name:                        "ANF Mount: Filesystems on ANF ({{ item.temppath }}) (temporary)"
          ansible.posix.mount:
            src:                       "{{ item.mount }}"
            path:                      "/{{ item.temppath }}"
            fstype:                    "nfs4"
            opts:                      "{{ item.opts }}"
            state:                      mounted
      rescue:
        - name:                        "ANF Mount: Clear the cache of the nfsidmap daemon (ANF)"
          ansible.builtin.shell: |
            nfsidmap -c

        - name:                        "ANF Mount: Ensure the rpcbind service is restarted"
          ansible.builtin.systemd:
            name:                      rpcbind
            state:                     restarted

        - name:                        "ANF Mount: Filesystems on ANF ({{ item.temppath }}) (temporary)"
          ansible.posix.mount:
            src:                       "{{ item.mount }}"
            path:                      "/{{ item.temppath }}"
            fstype:                    "nfs4"
            opts:                      "{{ item.opts }}"
            state:                      mounted

    - name:                            "ANF Mount: Create Directories ({{ item.temppath }}) on temporary mount"
      ansible.builtin.file:
        path:                          "/{{ item.temppath }}/{{ item.folder }}"
        state:                         directory
        mode:                          0755

    - name:                            "ANF Mount: Unmount file systems ({{ item.temppath }}) from temporary mount"
      ansible.posix.mount:
        src:                           "{{ item.mount }}"
        path:                          "/{{ item.temppath }}"
        state:                         unmounted

    - name:                            "ANF Mount: Delete locally created SAP Directories ({{ item.temppath }})"
      ansible.builtin.file:
        path:                          "/{{ item.temppath }}"
        state:                         absent

    - name:                            "ANF Mount: Cleanup fstab and directory ({{ item.temppath }})"
      ansible.posix.mount:
        src:                           "{{ item.mount }}"
        path:                          "/{{ item.temppath }}"
        fstype:                        "nfs4"
        opts:                          "{{ item.opts }}"
        state:                         absent

  when:
    - item.mount is defined
    - ansible_hostname == primary_host
    - item.create_temp_folders


# /*---------------------------------------------------------------------------8
# |                                                                            |
# |                Perform the mounts                                          |
# |                Create directories and make them immutable                  |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- name:                                "ANF Mount: Create SAP Directories ({{ item.path }})"
  ansible.builtin.file:
    owner:                             "{% if (item.target_nodes is search('hana')) %}{{ hdbadm_uid }}{% else %}{{ sidadm_uid }}{% endif %}"
    group:                             sapsys
    mode:                              0755
    path:                              "{{ item.path }}"
    state:                             directory
    recurse:                           true
  register:                            is_created_now
  when:
    - node_tier in item.target_nodes or item.target_nodes == ['all']

- name:                                "ANF Mount: Create SAP Directories ({{ item.path }})"
  ansible.builtin.debug:
    var:                               is_created_now
    verbosity:                         2

- name:                                "ANF Mount: Change attribute only when we create SAP Directories ({{ item.temppath }})"
  become:                              true
  become_user:                         "root"
  ansible.builtin.file:
    path:                              "{{ is_created_now.path }}"
    state:                             directory
    mode:                              0755
    attr:                              i+
  when:
    - node_tier in item.target_nodes or item.target_nodes == "all"
    - is_created_now.changed
    - item.set_chattr_on_dir

- name:                                "ANF Mount: ({{ item.path }} "
  block:
    - name:                            "ANF Mount: ({{ item.path }} on {% if item.create_temp_folders %}{{ item.mount }}/{{ item.folder }}{% else %}{{ item.mount }}{% endif %})"
      ansible.posix.mount:
        src:                           "{% if item.create_temp_folders %}{{ item.mount }}/{{ item.folder }}{% else %}{{ item.mount }}{% endif %}"
        path:                          "{{ item.path }}"
        fstype:                        "nfs4"
        opts:                          "{{ item.opts }}"
        state:                         mounted
      when:
        - node_tier in item.target_nodes or item.target_nodes == ['all']
  rescue:
    - name:                            "ANF Mount: Sleep for 10 seconds and continue with play"
      ansible.builtin.wait_for:
        timeout:                       10

    - name:                            "ANF Mount: ({{ item.path }} on {% if item.create_temp_folders %}{{ item.mount }}/{{ item.folder }}{% else %}{{ item.mount }}{% endif %})"
      ansible.posix.mount:
        src:                           "{% if item.create_temp_folders %}{{ item.mount }}/{{ item.folder }}{% else %}{{ item.mount }}{% endif %}"
        path:                          "{{ item.path }}"
        fstype:                        "nfs4"
        opts:                          "{{ item.opts }}"
        state:                         mounted
      when:
        - node_tier in item.target_nodes or item.target_nodes == ['all']

- name:                            "Backward Compatibility - Check required Database HA variables"
  ansible.builtin.set_fact:
    database_high_availability:    "{{ db_high_availability | default(false) }}"
  when:
    - db_high_availability is defined
    - database_high_availability is not defined

# absent_from_fstab
- name:                                "ANF Mount: RHEL DB high availability configuration"
  when:                                ansible_os_family | upper == "REDHAT" and database_high_availability
  block:
    - name:                            "ANF Mount: remove entry in fstab for {{ item.path }} when DB high availability"
      ansible.posix.mount:
        src:                           "{% if item.create_temp_folders %}{{ item.mount }}/{{ item.folder }}{% else %}{{ item.mount }}{% endif %}"
        path:                          "{{ item.path }}"
        fstype:                        "nfs4"
        opts:                          "{{ item.opts }}"
        state:                         absent_from_fstab
      when:
        - item.target_nodes == ['hana']
        - item.type in ['data','log','shared']
        - database_high_availability

    - name:                            "ANF Mount: make mount for {{ item.path }} ephemeral when DB high availability"
      ansible.posix.mount:
        src:                           "{% if item.create_temp_folders %}{{ item.mount }}/{{ item.folder }}{% else %}{{ item.mount }}{% endif %}"
        path:                          "{{ item.path }}"
        fstype:                        "nfs4"
        opts:                          "{{ item.opts }}"
        state:                         ephemeral
      when:
        - item.target_nodes == ['hana']
        - item.type in ['data','log','shared']
        - database_high_availability

# https://www.suse.com/support/kb/doc/?id=000019904
# - name:                                "ANF Mount: SLES DB high availability configuration"
#   when:                                ansible_os_family | upper == "SUSE" and db_high_availability
#   block:
#     - name:                            "ANF Mount: remove entry in fstab for {{ item.path }} when DB high availability"
#       ansible.posix.mount:
#         src:                           "{% if item.create_temp_folders %}{{ item.mount }}/{{ item.folder }}{% else %}{{ item.mount }}{% endif %}"
#         path:                          "{{ item.path }}"
#         fstype:                        "nfs4"
#         opts:                          "{{ item.opts }}"
#         state:                         absent_from_fstab
#       when:
#         - item.target_nodes == ['hana']
#         - item.type in ['data','log']
#         - db_high_availability

#     - name:                            "ANF Mount: make mount for {{ item.path }} ephemeral when DB high availability"
#       ansible.posix.mount:
#         src:                           "{% if item.create_temp_folders %}{{ item.mount }}/{{ item.folder }}{% else %}{{ item.mount }}{% endif %}"
#         path:                          "{{ item.path }}"
#         fstype:                        "nfs4"
#         opts:                          "{{ item.opts }}"
#         state:                         ephemeral
#       when:
#         - item.target_nodes == ['hana']
#         - item.type in ['data','log']
#         - db_high_availability
