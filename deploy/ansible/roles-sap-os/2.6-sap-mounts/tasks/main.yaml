---

# /*---------------------------------------------------------------------------8
# |                                                                            |
# |                Perform the Disk system mounts                              |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

# Mount Filesystems
- name:                                Mount Filesystems
  ansible.builtin.mount:
    src:                               "{{ item.src }}"
    path:                              "{{ item.path }}"
    fstype:                            "{{ item.type }}"
    opts:                              defaults
    state:                             mounted
  vars:
    # Get all the hostnames in <SID>_SCS group and return only the first hostname
    nfs_server:                        "{{ query('inventory_hostnames', '{{ sap_sid|upper }}_SCS') | first }}"
  loop:
    - { node_tier: 'all',  type: 'xfs',   src: '/dev/vg_sap/lv_usrsap',                 path: '/usr/sap'         }
#    - { node_tier: 'scs',  type: 'xfs',   src: '/dev/vg_sap/lv_usrsapinstall',          path: '/usr/sap/install' }
    - { node_tier: 'hana', type: 'xfs',   src: '/dev/vg_sap/lv_hana_shared',            path: '/hana/shared'     }
    - { node_tier: 'hana', type: 'xfs',   src: '/dev/vg_hana_data/lv_hana_data',        path: '/hana/data'       }
    - { node_tier: 'hana', type: 'xfs',   src: '/dev/vg_hana_log/lv_hana_log',          path: '/hana/log'        }
    - { node_tier: 'hana', type: 'xfs',   src: '/dev/vg_hana_backup/lv_hana_backup',    path: '/hana/backup'     }
  when:         (item.node_tier == "all" or item.node_tier == node_tier)

- name:                                Set the NFS Server name
  ansible.builtin.set_fact:
    nfs_server:                        "{{ query('inventory_hostnames', '{{ sap_sid|upper }}_SCS') | first }}"
  when:                                NFS_provider != "AFS" or NFS_provider != "ANF"

# Mount Filesystems
- name:                                Mount local sapmnt (scs)
  ansible.builtin.mount:
    src:                               "{{ item.src }}"
    path:                              "{{ item.path }}"
    fstype:                            "{{ item.type }}"
    opts:                              defaults
    state:                             mounted
  loop:
    - { type: 'xfs',  src: '/dev/vg_sap/lv_sapmnt',  path: '/sapmnt/{{ sap_sid|upper }}' }
  when:
    - tier == 'sapos'
    - sap_mnt is undefined
    - node_tier == 'scs'

# Mount Filesystems
- name:                                Mount Filesystems block
  block:
    - name:                            Mount Filesystems when not using external NFS (all app tier)
      ansible.builtin.mount:
        src:                           "{{ item.src }}"
        path:                          "{{ item.path }}"
        fstype:                        "{{ item.type }}"
        opts:                          defaults
        state:                         mounted
      loop:
        - { type: 'nfs4',  src: '{{ nfs_server }}:/sapmnt/{{ sap_sid|upper }}',  path: '/sapmnt/{{ sap_sid|upper }}' }
      when:
        - tier == 'sapos'
        - node_tier in ['pas', 'app', 'ers']
        - sap_mnt is undefined
  rescue:
    - name:                            Re-mount Filesystems when not using external NFS (app & pas)
      ansible.builtin.debug:
        msg:                           "Trying to remount"
    - name:                            Re-mount Filesystems when not using external NFS (app & pas)
      ansible.builtin.mount:
        src:                           "{{ item.src }}"
        path:                          "{{ item.path }}"
        fstype:                        "{{ item.type }}"
        opts:                          defaults
        state:                         remounted
      loop:
        - { type: 'nfs4',  src: '{{ nfs_server }}:/sapmnt/{{ sap_sid|upper }}',  path: '/sapmnt/{{ sap_sid|upper }}' }
      when:
        - tier == 'sapos'
        - node_tier in ['pas', 'app', 'ers']
        - sap_mnt is undefined


# Mount Filesystems

- name:                                Mount Install folder
  ansible.builtin.mount:
    src:                               "{{ item.src }}"
    path:                              "{{ item.path }}"
    fstype:                            "{{ item.type }}"
    opts:                              defaults
    state:                             mounted
  loop:
    - { type: 'nfs4',  src: '{{ usr_sap_install_path }}',   path: '/usr/sap/install'  }
  when:
    - tier == 'sapos'
    - usr_sap_install_mountpoint is defined


- name:                                Show sap_mnt
  ansible.builtin.debug:
    var:                               NFS_provider

# Import this task only if the sap_mnt is defined, i.e. AFS is used
- name:                                Import AFS tasks
  ansible.builtin.import_tasks:        2.6.0-afs-mounts.yaml
  when:
    - sap_mnt is defined or sap_trans is defined
    - sap_mnt | trim | length != 0
    - tier == 'sapos'
    - NFS_provider == 'AFS'

# Import this task only if the sap_mnt is defined, i.e. ANF is used
- name:                                Import ANF tasks
  ansible.builtin.import_tasks:        2.6.1-anf-mounts.yaml
  when:
    - sap_mnt is defined or sap_trans is defined
    - sap_mnt | trim | length != 0
    - tier == 'sapos'
    - NFS_provider == 'ANF'

# Import this task only if the tier is ora.
- import_tasks:                        "2.6.2-oracle-mounts.yaml"
  when:
    - node_tier == "oracle"
    - node_tier != "oracle-asm"

# Import this task only if the tier is ora.
- import_tasks:                        "2.6.4-db2-mounts.yaml"
  when:
    - node_tier == "db2"
...
