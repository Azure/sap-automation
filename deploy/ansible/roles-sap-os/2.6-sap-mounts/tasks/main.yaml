---

# /*---------------------------------------------------------------------------8
# |                                                                            |
# |                Perform the Disk system mounts                              |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- name:                                "2.6 SAP Mounts: - Check if the shared disk exists"
  ansible.builtin.set_fact:
    shareddisk:                        "{{ disks | selectattr('host', 'defined') |
      selectattr('host', 'equalto', inventory_hostname) |
      selectattr('type', 'equalto', 'shared') |
      map(attribute='type') | sort | unique |
      list | length }}"

- name:                                "2.6 SAP Mounts: - choose the shared disk"
  ansible.builtin.set_fact:
    sharedpath:                       "{% if shareddisk == '1' %}/dev/vg_hana_shared/lv_hana_shared{% else %}/dev/vg_sap/lv_hana_shared{% endif %}"

- name:                                "2.6 SAP Mounts: - Set the NFS Server name list"
  ansible.builtin.set_fact:
    nfs_server_temp:                   "{{ nfs_server_temp | default([]) + [item] }}"
  with_items:
    - "{{ query('inventory_hostnames', '{{ sap_sid|upper }}_SCS') }}"
    - "{{ query('inventory_hostnames', '{{ sap_sid|upper }}_DB') }}"

- name:                                "2.6 SAP Mounts: - Set the NFS Server name"
  ansible.builtin.set_fact:
    nfs_server:                        "{{ nfs_server_temp | first }}"
  when:                                NFS_provider != "AFS"

- name:                                "2.6 SAP Mounts: - Set the usr/sap/install path"
  ansible.builtin.set_fact:
    usr_sap_install_mount_point:        "{% if NFS_provider == 'AFS' %}{{ usr_sap_install_mountpoint }}{% else %}{{ nfs_server }}:/usr/sap/install{% endif %}"

- name:                                "2.6 SAP Mounts: - Show info"
  ansible.builtin.debug:
    msg:
      - "NFS Provider: {{ NFS_provider }}"                             
      - "Install path: {{ usr_sap_install_mount_point }}"                             
    verbosity:                         2

# Mount Filesystems
- name:                                "2.6 SAP Mounts: - Mount local sap file systems"
  ansible.builtin.mount:
    src:                               "{{ item.src }}"
    path:                              "{{ item.path }}"
    fstype:                            "{{ item.type }}"
    opts:                              defaults
    state:                             mounted
  loop:
    - { node_tier: 'all',  type: 'xfs',   src: '/dev/vg_sap/lv_usrsap',                 path: '/usr/sap'         }
  when:
    - (item.node_tier == "all" or item.node_tier == node_tier)
    - not scs_high_availability

- name:                                "2.6 SAP Mounts: - Mount local file systems"
  ansible.builtin.mount:
    src:                               "{{ item.src }}"
    path:                              "{{ item.path }}"
    fstype:                            "{{ item.type }}"
    opts:                              defaults
    state:                             mounted
  loop:
    - { node_tier: 'hana', type: 'xfs',   src: "{{ sharedpath }}",                      path: '/hana/shared'     }
    - { node_tier: 'hana', type: 'xfs',   src: '/dev/vg_hana_data/lv_hana_data',        path: '/hana/data'       }
    - { node_tier: 'hana', type: 'xfs',   src: '/dev/vg_hana_log/lv_hana_log',          path: '/hana/log'        }
    - { node_tier: 'hana', type: 'xfs',   src: '/dev/vg_hana_backup/lv_hana_backup',    path: '/hana/backup'     }
  when:         (item.node_tier == "all" or item.node_tier == node_tier)

- name:                                "2.6 SAP Mounts: - Mount local install file systems (when not using AFS)"
  ansible.builtin.mount:
    src:                               "{{ item.src }}"
    path:                              "{{ item.path }}"
    fstype:                            "{{ item.type }}"
    opts:                              defaults
    state:                             mounted
  loop:
    - { node_tier: 'scs',  type: 'xfs',   src: '/dev/vg_sap/lv_usrsapinstall',          path: '/usr/sap/install' }
  when:
    - item.node_tier in supported_tiers
    - not use_AFS

- name:                                "2.6 SAP Mounts: - Mount local sapmnt on (scs) {{ ansible_hostname }}"
  ansible.builtin.mount:
    src:                               "{{ item.src }}"
    path:                              "{{ item.path }}"
    fstype:                            "{{ item.type }}"
    opts:                              defaults
    state:                             mounted
  loop:
    - { type: 'xfs',  src: '/dev/vg_sap/lv_sapmnt',  path: '/sapmnt/{{ sap_sid|upper }}' }
  when:
    - tier == 'sapos'
    - sap_mnt is undefined
    - "'scs' in supported_tiers"

- name:                                "2.6 SAP Mounts: - sapmnt"
  block:
    - name:                            "2.6 SAP Mounts: - Mount sapmnt file system when not using external NFS (all app tier)"
      ansible.builtin.mount:
        src:                           "{{ item.src }}"
        path:                          "{{ item.path }}"
        fstype:                        "{{ item.type }}"
        opts:                          defaults
        state:                         mounted
      loop:
        - { type: 'nfs4',  src: '{{ nfs_server }}:/sapmnt/{{ sap_sid|upper }}',  path: '/sapmnt/{{ sap_sid|upper }}' }
      when:
        - tier == 'sapos'
        - node_tier in ['pas', 'app', 'ers']
        - sap_mnt is undefined
        - nfs_server !=  ansible_hostname
  rescue:
    - name:                            "2.6 SAP Mounts: - Re-mount File systems when not using external NFS (app & pas)"
      ansible.builtin.debug:
        msg:                           "Trying to remount sap_mnt"
    - name:                            "2.6 SAP Mounts: - Mount sapmnt file system when not using external NFS (all app tier)"
      ansible.builtin.mount:
        src:                           "{{ item.src }}"
        path:                          "{{ item.path }}"
        fstype:                        "{{ item.type }}"
        opts:                          defaults
        state:                         remounted
      loop:
        - { type: 'nfs4',  src: '{{ nfs_server }}:/sapmnt/{{ sap_sid|upper }}',  path: '/sapmnt/{{ sap_sid|upper }}' }
      when:
        - tier == 'sapos'
        - node_tier in ['pas', 'app', 'ers']
        - sap_mnt is undefined
        - nfs_server !=  ansible_hostname

- name:                                "2.6 SAP Mounts: - Mount Install folder when not using AFS"
  ansible.builtin.mount:
    src:                               "{{ item.src }}"
    path:                              "{{ item.path }}"
    fstype:                            "{{ item.type }}"
    opts:                              defaults
    state:                             mounted
  loop:
    - { type: 'nfs4', src: '{{ usr_sap_install_mount_point }}', path: '/usr/sap/install' }
  when:
    - tier == 'sapos'
    - node_tier != 'scs'
    - not use_AFS

# Import this task only if the sap_mnt is defined, i.e. AFS is used
- name:                                "2.6 SAP Mounts: - Import AFS tasks"
  ansible.builtin.import_tasks:        2.6.0-afs-mounts.yaml
  when:
    - sap_mnt is defined or sap_trans is defined
    - NFS_provider == 'AFS'

# Import this task only if the sap_mnt is defined, i.e. ANF is used
- name:                                "2.6 SAP Mounts: - Import ANF tasks"
  ansible.builtin.import_tasks:        2.6.1-anf-mounts.yaml
  when:
    - sap_mnt is defined or sap_trans is defined
    - NFS_provider == 'ANF'
...
