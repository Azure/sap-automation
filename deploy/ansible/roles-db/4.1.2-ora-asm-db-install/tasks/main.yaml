# /*---------------------------------------------------------------------------8
# |                                                                            |
# |     Perform the Oracle DB installation on ASM                              |
# |       Creates the database orcl and shuts it down                          |
# |       Updates SBP patches for database and GRID infrastructure.            |
# |       Export environment variables for Oracle Installation                 |
# |       Updates SBP patches for database and GRID infrastructure.            |
# |         Default value of rdbms compatiable is 10.1.0.0                     |
# |         however for SAP installation it needs a minimum value of 11.2.0.2. |
# |       SAP Note 1739274 - Database Parameter COMPATIBLE                     |
# |       SAP Note 1773593 - CREATE DATABASE  on ASM Fails with ORA-15204      |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

---

- name:                                "ORACLE: - Validate ORACLE parameters"
  ansible.builtin.assert:
    that:
      - item_to_check.parameter is defined                    # Has the variable been defined
      - item_to_check.parameter | type_debug != 'NoneType'    # and given a value
      - item_to_check.parameter | trim | length > 1
    fail_msg:                      item_to_check.error
  loop:
    - { parameter: 'ora_release', error: 'Oracle deployments requires that ora_release is provided' }
    - { parameter: 'ora_version', error: 'Oracle deployments requires that ora_version is provided' }
    - { parameter: 'oracle_sbp_patch', error: 'Oracle deployments requires that oracle_sbp_patch is provided' }
  loop_control:
    loop_var: item_to_check

- name:                                "SAP Oracle DB ASM: Load the disk configuration settings"
  ansible.builtin.include_vars:        disks_config_asm.yml


- name:                                "SAP Oracle DB ASM: Create run MOPatch directory"
  ansible.builtin.file:
    path:                              /oracle/stage/{{ ora_release }}/grid_home/MOPatch
    state:                             directory
    owner:                             oracle
    group:                             oinstall
    mode:                              0777

#   Oracle DB install: Response file
- name:                               "SAP Oracle DB ASM: deploy Database install response file"
  ansible.builtin.template:
    src:                              ORACLE_{{ ora_release }}c_00_ASM_db_v1_install.rsp.j2
    dest:                             "/etc/sap_deployment_automation/oracle/ORACLE_{{ ora_release }}c_00_ASM_db_{{ ansible_hostname }}_{{ db_sid }}_install.rsp"
    mode:                             0644
    force:                            true


# +------------------------------------4--------------------------------------*/
# |                                                                            |
# |                       Oracle Grid: Extract                                 |
# |          Running the standard SAP installer to extract the files to        |
# |          /oracle/<sid>/19.0.0                                              |
# +------------------------------------4--------------------------------------*/

- name:                               "SAP Oracle DB ASM: Extract the Oracle Software"
  become:                             true
  become_user:                        oracle
  ansible.builtin.shell: |
                                      set -o errexit
                                      set -o pipefail
                                      ./RUNINSTALLER -ohextract -silent |tee -a /etc/sap_deployment_automation/oracle/oraextract.log
                                      ln -s /oracle/{{ db_sid | upper }}/{{ ora_version }} /oracle/{{ db_sid | upper }}/{{ ora_release }}
                                      touch /etc/sap_deployment_automation/oracle/oraextract.txt
  register:                           swinstaller_results
  failed_when:                        swinstaller_results.rc >= 2
  environment:
    DB_SID:                           "{{ db_sid| upper }}"
    CV_ASSUME_DISTID:                 OL7
  args:
    chdir:                            "/usr/sap/install/oraserver/LINUX_X86_64/db_home/SAP"
    creates:                          /etc/sap_deployment_automation/oracle/oraextract.txt


# +------------------------------------4--------------------------------------*/
# |                                                                            |
# |                       Oracle Grid: Run installation                        |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- name:                               "SAP Oracle DB ASM: Execute runInstaller"
  become:                             true
  become_user:                        oracle
  ansible.builtin.shell: |
                                      set -o errexit
                                      set -o pipefail
                                      ./runInstaller -silent -responseFile /etc/sap_deployment_automation/oracle/ORACLE_{{ ora_release }}c_00_ASM_db_{{ ansible_hostname }}_{{ db_sid }}_install.rsp |tee -a /etc/sap_deployment_automation/oracle/dbinstall.log
  register:                           dbinstaller_results
  environment:
    DB_SID:                           "{{ db_sid }}"
    CV_ASSUME_DISTID:                 OL7
  args:
    executable:                       /bin/csh
    chdir:                            "/oracle/{{ db_sid|upper }}/{{ ora_version }}"
    creates:                          /etc/sap_deployment_automation/oracle/dbinstall.txt

- name:                               "SAP Oracle DB ASM: Create after a successful install"
  ansible.builtin.file:
    path:                             "/etc/sap_deployment_automation/oracle/dbinstall.txt"
    state:                            touch
    mode:                             0777

# +------------------------------------4--------------------------------------*/
# |                                                                            |
# |                       Oracle Grid: Post processing                         |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- name:                               "SAP Oracle DB ASM: Oracle Post Processing - Run root.sh"
  become:                             true
  become_user:                        root
  ansible.builtin.shell: |
                                      /oracle/{{ db_sid }}/{{ ora_version }}/root.sh
  register:                           rootscript_results
  args:
    executable:                       /bin/csh
    creates:                          /etc/sap_deployment_automation/oracle/dbrootscripstexecuted.txt

- name:                                "SAP Oracle DB ASM: Create flag"
  ansible.builtin.file:
    path:                              /etc/sap_deployment_automation/oracle/dbrootscripstexecuted.txt
    state:                             touch
    mode:                              0755

- name:                                "SAP Oracle DB ASM: Set permissions"
  ansible.builtin.file:
    path:                              "/oracle/stage/{{ ora_release }}/grid_home/bin/oracle"
    state:                             directory
    owner:                             oracle
    group:                             oinstall
    mode:                              '6751'

#STEP3.1 POST PROCESSING - Execute DB configtools.

- name:                                "SAP Oracle DB ASM: Execute ASM Configtools"
  become:                              true
  become_user:                         oracle
  ansible.builtin.shell: |
                                       set -o errexit
                                       set -o pipefail
                                       /oracle/{{ db_sid }}/{{ ora_version }}/runInstaller -executeConfigTools -silent -responseFile /etc/sap_deployment_automation/oracle/ORACLE_{{ ora_release }}c_00_ASM_db_{{ ansible_hostname }}_{{ db_sid|upper }}_install.rsp |tee -a /etc/sap_deployment_automation/oracle/dbconfigtoolsinstall.log
  register:                            dbtools_installer_results
  environment:
    DB_SID:                            "{{ db_sid |upper }}"
    CV_ASSUME_DISTID:                  OL7
  args:
    executable:                        /bin/csh
    chdir:                             "/oracle/{{ db_sid| upper }}/{{ ora_version }}"
    creates:                           /etc/sap_deployment_automation/oracle/dbtools_install.txt

- name:                                "SAP Oracle DB ASM: Create flag after a successful execution"
  ansible.builtin.file:
    path:                              /etc/sap_deployment_automation/oracle/dbtools_install.txt
    state:                             touch
    mode:                              0755

# - name: "FAIL Here"
#   fail:
#     msg: Check if the crs and ASM database are stopped or not

# +------------------------------------4--------------------------------------*/
# |                                                                            |
# |                       Oracle Grid: Patching                                |
# |                                                                            |
# +------------------------------------4--------------------------------------*/


# # Stop Database for SBP Patching
- name:                                "SAP Oracle DB ASM: Stop ORCL Database"
  become:                              true
  become_user:                         oracle
  ansible.builtin.shell: |
                                       set -o pipefail
                                       ./srvctl stop database -db orcl -f |tee /etc/sap_deployment_automation/oracle/dbstop.log
  register:                            dbstop_results
  failed_when:                         dbstop_results.rc >= 3
  args:
    chdir:                             /oracle/stage/{{ ora_release }}/grid_home/bin
    creates:                           /etc/sap_deployment_automation/oracle/dbstopped.txt

- name:                                "SAP Oracle DB ASM: flag file created after a successful DB Stop"
  ansible.builtin.file:
    path:                              /etc/sap_deployment_automation/oracle/dbstopped.txt
    state:                             touch
    mode:                              0755


# /*---------------------------------------------------------------------------8
# |                                                                            |
# | Step 4 SBP Patching for Oracle                                             |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- name:                            "ORACLE: Find MOPatch"
  ansible.builtin.find:
    paths:                         "{{ target_media_location }}/SBP/SAPSBP"
    patterns:                      ["MOPatch"]
    file_type:                     directory
    recurse:                       true
  register:                        mopatch_directory

- name:                            "ORACLE: Find MOPatch"
  ansible.builtin.fail:
      msg:                           "Too many MOPatches found"
  when:                            mopatch_directory.matched != 1

- name:                            "ORACLE: MOPatch path"
  ansible.builtin.set_fact:
    mopatch_path:                  "{{ mopatch_directory.files[0].path }}"
  when:                            mopatch_directory.matched == 1

- name:                            "ORACLE: Check if 'OPatch.bck' exists"
  ansible.builtin.stat:
    path:                          /oracle/{{ db_sid | upper }}/{{ ora_version }}/OPatch.bck
  register:                        opatch_stat

- name:                            "ORACLE: backup OPatch"
  ansible.builtin.copy:
        src:                           /oracle/{{ db_sid | upper }}/{{ ora_version }}/OPatch
        dest:                          /oracle/{{ db_sid | upper }}/{{ ora_version }}/OPatch.bck
        remote_src:                    true
        mode:                          0755
  when:
    - not opatch_stat.stat.exists

- name:                            "ORACLE: remove old OPatch"
  ansible.builtin.file:
    path:                          /oracle/{{ db_sid | upper }}/{{ ora_version }}/OPatch
    state:                         absent
  when:
    - not opatch_stat.stat.exists

- name:                            "ORACLE: copy OPatch"
  # become:                              true
  # become_user:                         "oracle"
  ansible.builtin.copy:
    src:                           "{{ target_media_location }}/SBP/OPATCH/OPatch"
    dest:                          /oracle/{{ db_sid | upper }}/{{ ora_version }}
    remote_src:                    true
    mode:                          0755
    owner:                         oracle
    group:                         oinstall

- name:                            "ORACLE: copy MOPatch"
  # become:                              true
  # become_user:                         "oracle"
  ansible.builtin.copy:
    src:                           "{{ mopatch_path }}"
    dest:                          /oracle/{{ db_sid | upper }}/{{ ora_version }}
    remote_src:                    true
    mode:                          0777
    owner:                         oracle
    group:                         oinstall

- name:                            "ORACLE - SBP Patching"
  become:                          true
  become_user:                     "oracle"
  ansible.builtin.command:         $IHRDBMS/MOPatch/mopatch.sh -v -s {{ target_media_location }}/SBP/{{ oracle_sbp_patch }}
  environment:
    DB_SID:                        "{{ db_sid }}"
    CV_ASSUME_DISTID:              OL7
    IHRDBMS:                       /oracle/{{ db_sid | upper }}/{{ ora_version }}
    ORACLE_HOME:                   /oracle/{{ db_sid | upper }}/{{ ora_version }}
    RDBMS:                         /oracle/{{ db_sid | upper }}/{{ ora_version }}
  register:                        sbpscript_results
  failed_when:                     sbpscript_results.rc >= 2
  args:
    creates:                       "/etc/sap_deployment_automation/{{ sap_sid | upper }}/sbp_installed.txt"
    chdir:                         "{{ target_media_location }}/SBP"
    executable:                    /bin/csh

- name:                            "ORACLE: Post processing installer output"
  ansible.builtin.debug:
    var:                           sbpscript_results.stdout_lines
    verbosity:                     2
- name:                            "ORACLE: Post processing installer output"
  ansible.builtin.copy:
    dest:                          "/etc/sap_deployment_automation/{{ sap_sid | upper }}/sbp.log"
    content:                       "{{ sbpscript_results.stdout }}"
    mode:                          0777
  when:                            sbpscript_results.stdout is defined

    # - name:                                Remove SAPSBP
    #   ansible.builtin.file:
    #     path:                              "{{ mopatch_path }}"
    #     state:                             absent





# - name:                                "SAP Oracle DB ASM:Post Processing - SBP Patching"
#   become:                              true
#   become_user:                         oracle
#   ansible.builtin.shell: |
#                                        set -o errexit
#                                        set -o pipefail
#                                        mv  /oracle/{{ db_sid }}/{{ ora_version }}/OPatch   /oracle/{{ db_sid }}/{{ ora_version }}/OPatch.bck
#                                        cp -R OPATCH/OPatch  /oracle/{{ db_sid }}/{{ ora_version }}/.
#                                        cp -R SAPSBP/SBP_191200210720_202108/MOPatch  /oracle/{{ db_sid }}/{{ ora_version }}/.
#                                        $IHRDBMS/MOPatch/mopatch.sh -v -s {{ target_media_location }}/SBP/{{ oracle_sbp_patch }} |tee -a /etc/sap_deployment_automation/oracle/sbp.log
#   register:                            sbpscript_results
#   environment:
#     CV_ASSUME_DISTID:                  OL7
#     IHRDBMS:                           /oracle/{{ db_sid }}/{{ ora_version }}
#     ORACLE_HOME:                       /oracle/{{ db_sid }}/{{ ora_version }}
#     RDBMS:                             /oracle/{{ db_sid }}/{{ ora_release }}
#   failed_when:                         sbpscript_results.rc >= 2
#   args:
#     executable:                        /bin/csh
#     chdir:                             /usr/sap/install/SBP/
#     creates:                           /etc/sap_deployment_automation/oracle/sbpinstalled.txt

# - name:                                "SAP Oracle DB ASM: Create flag after a successful script execution"
#   ansible.builtin.file:
#     path:                              /etc/sap_deployment_automation/oracle/sbpinstalled.txt
#     state:                             touch
#     mode:                              0755


#STEP 4.2 SBP Patching for Oracle GRID.
#STEP 4.2.1 SBP Patching for Oracle GRID.

# Backup Oracle Grid Home prior to patching.

- name:                            "ORACLE ASM : BACKUP ASM GRID"
  # become:                              true
  # become_user:                         "oracle"
  ansible.builtin.copy:
    src:                           "/oracle/stage/{{ ora_release }}/grid_home"
    dest:                          /oracle/stage/{{ ora_release }}/grid_home.bck
    remote_src:                    true
    mode:                          0755
    owner:                         oracle
    group:                         oinstall

# Check if MOPatch exists, backup the old MOPatch and copy the new one.

- name:                            "ORACLE: Check if 'MOPatch.bck' exists for GRID"
  ansible.builtin.stat:
    path:                          /oracle/stage/{{ ora_release }}/grid_home/MOPatch.bck
  register:                        mopatchgrid_stat

- name:                            "ORACLE: backup MOPatch"
  ansible.builtin.copy:
        src:                           /oracle/stage/{{ ora_release }}/grid_home/MOPatch
        dest:                          /oracle/stage/{{ ora_release }}/grid_home/MOPatch.bck
        remote_src:                    true
        mode:                          0755
        owner:                         oracle
        group:                         oinstall
  when:
    - not mopatchgrid_stat.stat.exists


- name:                            "ORACLE: remove old MOPatch"
  ansible.builtin.file:
    path:                          /oracle/stage/{{ ora_release }}/grid_home/MOPatch
    state:                         absent
  when:
    - not mopatchgrid_stat.stat.exists


- name:                            "ORACLE: copy MOPatch for GRID"
  # become:                              true
  # become_user:                         "oracle"
  ansible.builtin.copy:
    src:                           "{{ mopatch_path }}"
    dest:                          /oracle/stage/{{ ora_release }}/grid_home/
    remote_src:                    true
    mode:                          0777
    owner:                         oracle
    group:                         oinstall

#Backup the existing Opatch and then copy the new Opatch from the downloads folder

- name:                            "ORACLE: Check if 'OPatch.bck' exists for GRID"
  ansible.builtin.stat:
    path:                          /oracle/stage/{{ ora_release }}/grid_home/OPatch.bck
  register:                        opatchgrid_stat

- name:                            "ORACLE: backup OPatch"
  ansible.builtin.copy:
        src:                           /oracle/stage/{{ ora_release }}/grid_home/OPatch
        dest:                          /oracle/stage/{{ ora_release }}/grid_home/OPatch.bck
        remote_src:                    true
        mode:                          0755
        owner:                         oracle
        group:                         oinstall
  when:
    - not opatchgrid_stat.stat.exists


- name:                            "ORACLE: remove old OPatch"
  ansible.builtin.file:
    path:                          /oracle/stage/{{ ora_release }}/grid_home/OPatch
    state:                         absent
  when:
    - not opatchgrid_stat.stat.exists

- name:                            "ORACLE: copy OPatch for GRID"
  # become:                              true
  # become_user:                         "oracle"
  ansible.builtin.copy:
    src:                           "{{ target_media_location }}/SBP/OPATCH/OPatch"
    dest:                          /oracle/stage/{{ ora_release }}/grid_home/
    remote_src:                    true
    mode:                          0755
    owner:                         oracle
    group:                         oinstall

- name:                                "SAP Oracle DB ASM: Prepare for GRID SBP Patching"
  ansible.builtin.command:              /oracle/stage/{{ ora_release }}/grid_home/crs/install/roothas.sh -prepatch |tee /etc/sap_deployment_automation/oracle/pre-patchcmd.log
  register:                            gridpreinstall
  args:
    creates:                           /etc/sap_deployment_automation/oracle/gridpreinstall.txt

- name:                                "SAP Oracle DB ASM: Create flag after a successful preparation"
  ansible.builtin.file:
    path:                              /etc/sap_deployment_automation/oracle/gridpreinstall.txt
    state:                             touch
    mode:                              0755
  when:                                gridpreinstall.rc == 0

- name:                            "ORACLE ASM - GRID SBP Patching"
  become:                          true
  become_user:                     "oracle"
  ansible.builtin.command:         $IHRDBMS/MOPatch/mopatch.sh -v -s {{ target_media_location }}/SBP/{{ oracle_sbp_patch }}
  environment:
    DB_SID:                        "{{ db_sid }}"
    CV_ASSUME_DISTID:              OL7
    IHRDBMS:                       /oracle/{{ db_sid | upper }}/{{ ora_version }}
    ORACLE_HOME:                   /oracle/{{ db_sid | upper }}/{{ ora_version }}
    RDBMS:                         /oracle/{{ db_sid | upper }}/{{ ora_version }}
  register:                        sbpscript_results
  failed_when:                     sbpscript_results.rc >= 2
  args:
    creates:                       "/etc/sap_deployment_automation/{{ sap_sid | upper }}/sbp_installed.txt"
    chdir:                         "{{ target_media_location }}/SBP"
    executable:                    /bin/csh

- name:                            "ORACLE: Post processing installer output"
  ansible.builtin.debug:
    var:                           sbpscript_results.stdout_lines
    verbosity:                     2
- name:                            "ORACLE: Post processing installer output"
  ansible.builtin.copy:
    dest:                          "/etc/sap_deployment_automation/{{ sap_sid | upper }}/sbp.log"
    content:                       "{{ sbpscript_results.stdout }}"
    mode:                          0777
  when:                            sbpscript_results.stdout is defined


#$IHRDBMS/MOPatch/mopatch.sh -v -s {{ target_media_location }}/SBP/{{ oraclegrid_sbp_patch }}
#STEP 4.2.2 SBP Patching for Oracle GRID.
- name:                            "ORACLE: Post Processing - GRID SBP Patching"
  become:                          true
  become_user:                     "oracle"
  ansible.builtin.command:         $OHGRID/MOPatch/mopatch.sh -v -s {{ target_media_location }}/SBP/{{ oraclegrid_sbp_patch }}
  environment:
    OHGRID:                         /oracle/stage/{{ ora_release }}/grid_home
    ORACLE_HOME:                    /oracle/stage/{{ ora_release }}/grid_home
  register:                         gridsbpscript_results
  failed_when:                      gridsbpscript_results.rc >= 2
  args:
    creates:                        "/etc/sap_deployment_automation/{{ sap_sid | upper }}/gridsbp_installed.txt"
    chdir:                          "{{ target_media_location }}/SBP"
    executable:                     /bin/csh

- name:                            "ORACLE: Post processing installer output"
  ansible.builtin.debug:
    var:                           gridsbpscript_results.stdout_lines
    verbosity:                     2

- name:                            "ORACLE: Post processing installer output"
  ansible.builtin.copy:
    dest:                          "/etc/sap_deployment_automation/{{ db_sid | upper }}/sbp.log"
    content:                       "{{ gridsbpscript_results.stdout }}"
    mode:                          0777
  when:                            gridsbpscript_results.stdout is defined


# - name:                                "SAP Oracle DB ASM: Oracle Post Processing - GRID SBP Patching Execution"
#   become:                              true
#   become_user:                         oracle
#   ansible.builtin.shell: |
#                                        set -o errexit
#                                        set -o pipefail
#                                        mv  /oracle/stage/{{ ora_release }}/grid_home/OPatch   /oracle/stage/{{ ora_release }}/grid_home/OPatch.bck
#                                        cp -R OPATCH/OPatch  /oracle/stage/{{ ora_release }}/grid_home/.
#                                        chmod 6751 /oracle/stage/{{ ora_release }}/grid_home/bin/oracle
#                                        $OHGRID/MOPatch/mopatch.sh -v -s /usr/sap/install/SBP/SGR19P_2108-70004550.ZIP |tee -a /etc/sap_deployment_automation/oracle/sbpgrid.log
#   register:                            sbpgscript_results
#   environment:
#     OHGRID:                            /oracle/stage/{{ ora_release }}/grid_home
#     ORACLE_HOME:                       /oracle/stage/{{ ora_release }}/grid_home
#   args:
#     executable:                        /bin/csh
#     chdir:                             /usr/sap/install/SBP/
#     creates:                           /etc/sap_deployment_automation/oracle/sbpginstalled.txt

# - name:                                "SAP Oracle DB ASM: Create flag after a successful script execution"
#   ansible.builtin.file:
#     path:                              /etc/sap_deployment_automation/oracle/sbpginstalled.txt
#     state:                             touch
#     mode:                               0755


#STEP 4.2.3 Post-Processing SBP Patching for Oracle GRID.
#SAP Note 2893317 - ORA-12547:  TNS:lost contact during SWPM system copy import -NetWeaver
# Run the post install script for GRID SBP patching to start the Oracle Cluster service manager, ASMCA and relevant toolset.

- name:                                "SAP Oracle DB ASM: Oracle Post Processing - GRID SBP GRID Patching Post-Processing"
  become:                              true
  become_user:                         root
  ansible.builtin.shell: |
                                       set -o errexit
                                       set -o pipefail
                                       /oracle/stage/{{ ora_release }}/grid_home/rdbms/install/rootadd_rdbms.sh
                                       /oracle/stage/{{ ora_release }}/grid_home/crs/install/roothas.sh -postpatch |tee /etc/sap_deployment_automation/oracle/post-processing.log
  register:                            sbppostpro_results
  args:
    chdir:                            /oracle/stage/{{ ora_release }}/grid_home/
    creates:                          /etc/sap_deployment_automation/oracle/sbpgpostprocess.txt

- name:                               "SAP Oracle DB ASM: Create flag after a successful change"
  ansible.builtin.file:
    path:                             /etc/sap_deployment_automation/oracle/sbpgpostprocess.txt
    state:                            touch
    mode:                             0755
  when:                               sbppostpro_results.rc <= 2

- name:                            "ORACLE: Permissions"
  ansible.builtin.file:
    path:                          /oracle/{{ db_sid | upper }}/{{ ora_version }}/bin/oracle
    state:                         file
    owner:                         oracle
    group:                         oinstall
    mode:                          06751
  tags:
    - skip_ansible_lint


- name:                            "/opt/ORACLE: Permissions"
  ansible.builtin.file:
    path:                          /opt/oracle
    state:                         file
    owner:                         oracle
    mode:                          755
  tags:
    - skip_ansible_lint


# Wait for the ASM DB to come up and running before chnaging the DISK Attributes.
- name:                               "SAP Oracle DB ASM: Sleep for 30 seconds and continue with play"
  ansible.builtin.wait_for:
    timeout:                          30

#STEP5 POST PROCESSING - Change RDBMS Compatiable Setting.
# #Update Compatiable for DATA, ARCH and RECO disk groups using ASMCA.
# Default value of rdbms compatiable is 10.1.0.0 however for SAP installation it needs a minimum value of 11.2.0.2.
# SAP Note 1739274 - Database Parameter COMPATIBLE
# SAP Note 1773593 - CREATE DATABASE  on ASM Fails with ORA-15204

- name:                               "SAP Oracle DB ASM: Update ASM Disk groups ARCH and RECO for DBLOAD"
  become:                             true
  become_user:                        oracle
  ansible.builtin.shell: |
                                      set -o errexit
                                      /oracle/stage/{{ ora_release }}/grid_home/bin/srvctl start LISTENER
                                      /oracle/stage/{{ ora_release }}/grid_home/bin/asmca -silent -editDiskGroupAttributes -diskGroupName DATA -attribute compatible.rdbms={{ ora_version }}
                                      /oracle/stage/{{ ora_release }}/grid_home/bin/asmca -silent -editDiskGroupAttributes -diskGroupName ARCH -attribute compatible.rdbms={{ ora_version }}
                                      /oracle/stage/{{ ora_release }}/grid_home/bin/asmca -silent -editDiskGroupAttributes -diskGroupName RECO -attribute compatible.rdbms={{ ora_version }}
  register:                           diskgroupcreation_results
  environment:
    DB_SID:                           "{{ db_sid }}"
    CV_ASSUME_DISTID:                 OL7
  args:
    executable:                       /bin/csh
    chdir:                            /oracle/stage/{{ ora_release }}/grid_home/bin
    creates:                          /etc/sap_deployment_automation/oracle/diskgroupupdated.txt

- name:                               "SAP Oracle DB ASM: Create flag after a sucessfull change"
  ansible.builtin.file:
    path:                             /etc/sap_deployment_automation/oracle/diskgroupupdated.txt
    state:                            touch
    mode:                             0755

...
# /*---------------------------------------------------------------------------8
# |                                   END                                      |
# +------------------------------------4--------------------------------------*/
