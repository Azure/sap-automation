# /*---------------------------------------------------------------------------8
# |                                                                            |
# |                Perform the Oracle Instance installation                    |
# |                  SAP: Register BOM                                         |
# |                  create .params directory                                  |
# |                  Export environment variables for Oracle Installation      |
# |                  Run the Oracle universal installer in silent mode.        |
# |                   SAP Note : 2660017 Oracle Software Installation on Unix  |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

# TODO: Considerations
#         15G+ swap space for Oracle DB installation.
#         MAke the installer more version independent
#

---

- name:                                "Create run flag directory"
  ansible.builtin.file:
    path:                              /oracle/sap_deployment_automation
    state:                             directory
    mode:                              0755



# /*---------------------------------------------------------------------------8
# | Start of Oracle software installation using SAP RUNINSTALLER wrapper.      |
# | Before running Installer set DB_SID and CV_ASSUME_DISTID according to      |
# | SAP Note 2660017 Oracle Software Installation on Unix                      |
# |                                                                            |
# | Step 1 run the pre-installation check                                      |
# +------------------------------------4--------------------------------------*/

- name:                                "Execute RUNINSTALLER"
  ansible.builtin.shell: |
                                       set -o errexit
                                       ./RUNINSTALLER -ohcheck -silent |tee -a /oracle/pre-req.log
  register:                            oraprecheck_results
  failed_when:                         oraprecheck_results.rc >= 3
  environment:
    DB_SID:                            "{{db_sid}}"
    CV_ASSUME_DISTID:                  OL7

  args:
    executable:                        /bin/csh        
    chdir:                             "/usr/sap/install/oraserver/LINUX_X86_64/db_home/SAP"

#Debug for testing
- name:                                "Debug: installer prechecks output"
  ansible.builtin.debug:
    var:                               oraprecheck_results
    verbosity:                         2

# /*---------------------------------------------------------------------------8
# | Start of Oracle software installation using SAP RUNINSTALLER wrapper.      |
# | Before running Installer set DB_SID and CV_ASSUME_DISTID according to      |
# | SAP Note 2660017 Oracle Software Installation on Unix                      |
# |                                                                            |
# | Step 2 run the installation check                                          |
# +------------------------------------4--------------------------------------*/

- name:                                "Execute RUNINSTALLER"
  ansible.builtin.shell: |
                                       set -o errexit
                                       ./RUNINSTALLER -silent |tee -a /oracle/install.log
  register:                            orainstaller_results
  failed_when:                         orainstaller_results.rc >= 2              #installer returns rc=1 (exited with warning) by default when run is silent mode as the oratab file is created only after running the root.sh
  environment:
    DB_SID:                            "{{db_sid}}"
    CV_ASSUME_DISTID:                  OL7
  args:
    executable:                        /bin/csh        
    chdir:                             "/usr/sap/install/oraserver/LINUX_X86_64/db_home/SAP"
    creates:                           /oracle/sap_deployment_automation/oracleinstall.txt


- name:                                Create oracleinstall.txt
  ansible.builtin.file:
    path:                              /oracle/sap_deployment_automation/oracleinstall.txt
    state:                             touch
    mode:                              0755

# /*---------------------------------------------------------------------------8
# | Start of Oracle software installation using SAP RUNINSTALLER wrapper.      |
# | Before running Installer set DB_SID and CV_ASSUME_DISTID according to      |
# | SAP Note 2660017 Oracle Software Installation on Unix                      |
# |                                                                            |
# | Step 3 Post processing                                                     |
# +------------------------------------4--------------------------------------*/

- name:                                "Oracle Post Processing - Run root.sh"                
  become:                              yes
  become_user:                         root
  ansible.builtin.shell: |   
                                       /oracle/oraInventory/orainstRoot.sh    
                                       /oracle/{{db_sid}}/19.0.0/root.sh
  register:                            rootscript_results
  args:
    executable:                        /bin/csh
    creates:                           /oracle/sap_deployment_automation/rootscripts_executed.txt

- name:                                Create rootscripts_executed.txt
  ansible.builtin.file:
    path:                              /oracle/{{db_sid|upper }}/19.0.0/bin/oracle
    state:                             file
    mode:                              6751

- name:                                Create rootscripts_executed.txt
  ansible.builtin.file:
    path:                              /oracle/sap_deployment_automation/rootscripts_executed.txt
    state:                             touch
    mode:                              0755

# /*---------------------------------------------------------------------------8
# |                                                                            |
# | Step 4 SBP Patching for Oracle                                             |
# +------------------------------------4--------------------------------------*/


- name:                                "Oracle Post Processing - SBP Patching"                
  become:                              yes
  become_user:                         "oracle"
  ansible.builtin.shell: |   
                                       set -o errexit
                                       mv  /oracle/{{db_sid}}/19.0.0/OPatch   /oracle/{{ db_sid }}/19.0.0/OPatch.bck 
                                       cp -R OPATCH/OPatch  /oracle/{{ db_sid }}/19.0.0/.
                                       cp -R SAPSBP/SBP_191200210720_202108/MOPatch  /oracle/{{ db_sid }}/19.0.0/.
                                       $IHRDBMS/MOPatch/mopatch.sh -v -s /usr/sap/install/SBP/SAP19P_2108-70004508.ZIP |tee -a /oracle/sbp.log
  environment:
    DB_SID:                            "{{db_sid}}"
    CV_ASSUME_DISTID:                  OL7
    IHRDBMS:                           /oracle/{{ db_sid }}/19.0.0
    ORACLE_HOME:                       /oracle/{{ db_sid }}/19.0.0
    RDBMS:                             /oracle/{{ db_sid }}/19
  register:                            sbpscript_results
  failed_when:                         sbpscript_results.rc >= 2 
  args:
    executable:                        /bin/csh
    chdir:                             "/usr/sap/install/SBP/"
    creates:                           /oracle/sap_deployment_automation/sbpinstalled.txt

- name:                                Create sbpinstalled.txt
  ansible.builtin.file:
    path:                              /oracle/sap_deployment_automation/sbpinstalled.txt
    state:                             touch
    mode:                              0755
    
- name:                                "Post processing installer output"
  ansible.builtin.debug:
    var:                               orainstaller_results
    verbosity:                         2

- name:                                "Post processing installer output"
  ansible.builtin.debug:
    var:                               rootscript_results
    verbosity:                     2

...
# /*---------------------------------------------------------------------------8
# |                                   END                                      |
# +------------------------------------4--------------------------------------*/
