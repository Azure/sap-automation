---

# sapcontrol EXITCODES

# /*---------------------------------------------------------------------------8
# |                                                                            |
# |     0  Last webmethod call successful                                      |
# |     1  Last webmethod call failed, invalid parameter                       |
# |     2  StartWait, StopWait, WaitforStarted, WaitforStopped,                |
# |        RestartServiceWait timed out                                        |
# |        CheckSystemCertificates detected warnings                           |
# |     3  GetProcessList succeeded, all processes running correctly           |
# |        CheckSystemCertificates detected errors                             |
# |     4  GetProcessList succeeded, all processes stopped                     |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- name:                                "HANA HSR: - Check HANA system replication variables are set and seem valid"
  ansible.builtin.assert:
    that:
      - "hana_group | trim | length != 0"
      - "db_sid | trim | regex_search('^[A-Za-z][A-Za-z\\d][A-Za-z\\d]$') | length == 3"  # must be 3 characters <alpha><alnum><alnum>, e.g. HN1, not 1_H
      - "db_instance_number | trim | regex_search('^\\d\\d$') | length == 2"  # must be 2 digits <num><num>, e.g. 00, not 0 or a0
      - "hana_dir | trim | length != 0"
      - "sap_dir | trim | length != 0"

- name:                                HSR - Check that HANA was installed successfully and is running normally
  ansible.builtin.import_tasks:        ../../../roles-misc/0.4-helpers/tasks/04.01-start_hana.yml

- name:                                "HANA HSR: - Check whether replication has already been set up"
  become_user:                         "{{ db_sid_admin_user }}"
  become:                              true
  ansible.builtin.command:             hdbnsutil -sr_state
  register:                            hana_replication_status
  changed_when:                        false
  failed_when:                         hana_replication_status.rc != 0
  vars:
    allow_world_readable_tmpfiles:     true
  environment:
    ANSIBLE_REMOTE_TEMP:               "{{ tmp_directory }}/{{ db_sid | upper }}"
    TEMPDIR:                           "{{ tmp_directory }}/{{ db_sid | upper }}"

- name:                                "HANA HSR: - Show replication status"
  ansible.builtin.debug:
    var:                               hana_replication_status
    verbosity:                         2

- name:                                "HANA HSR: - Ensure current replication status is known"
  ansible.builtin.set_fact:
    hana_system_replication_needed:   "{{ ('mode: none' in hana_replication_status.stdout_lines) | bool }}"

- name:                                "HANA HSR: - Show replication status"
  ansible.builtin.debug:
    msg:                               "HSR Replication configuration needed: {{ hana_system_replication_needed }}"

- name:                                "HANA HSR: - Determine runtime value of SAP global path"
  become_user:                         "{{ db_sid_admin_user }}"
  ansible.builtin.shell: >
                                       set -o pipefail && grep '^alias cdglo=' ~/.sapenv.sh | sed -e 's/^.* //' -e 's/$SAPSYSTEMNAME/{{ db_sid | upper }}/' -e "s/'//"
  register:                            global_path_status
  changed_when:                        false

- name:                                "HANA HSR: - Ensure SAP global directory fact is set"
  ansible.builtin.set_fact:
    hana_global_dir: "                 {{ global_path_status.stdout_lines[0] }}"


- name:                                "HANA HSR: - Check on the primary node whether installed HANA is single container or multi-container"
  block:
    - name:                            "HANA HSR: - Check whether HANA has been installed as a single container (no SYSTEMDB)"
      become_user:                     "{{ db_sid_admin_user }}"
      ansible.builtin.shell: >
                                       {{ hdbsql_systemdb_command }} "SELECT DATABASE_NAME FROM SYS.M_DATABASES"
      register:                        hana_container_status
      changed_when:                    false
      failed_when:                     false
      vars:
        ALLOW_WORLD_READABLE_TMPFILES: true

    - name:                            "HANA HSR: - Ensure systemdb fact is set"
      ansible.builtin.set_fact:
        hana_has_system_db:            "{{ ('SYSTEMDB' in hana_container_status.stdout) }}"

    - name:                            "HANA HSR: -  Show if HANA has the 'SYSTEMDB' database"
      ansible.builtin.debug:
        var:                           hana_has_system_db
        verbosity:                     2

    - name:                            "HANA HSR: - Ensure tenant db fact is set"
      ansible.builtin.set_fact:
        hana_has_tenant_db:            "{{ (db_sid_upper in hana_container_status.stdout) }}"
      vars:
        db_sid_upper:                  "{{ db_sid | upper }}"

    - name:                            "HANA HSR: - Show if HANA has the tenant database"
      ansible.builtin.debug:
        var:                           hana_has_tenant_db
        verbosity:                     2

    - name:                            "HANA HSR: - Ensure failure with meaningful message if no {{ db_sid | upper }} tenant db"
      ansible.builtin.fail:
        msg: |
                                       Automated HANA System Replication configuration is only supported for systems with a SYSTEMDB
                                       and multi-container systems where the tenant database is named as {{ db_sid | upper }}.
                                       If your requirements differ, please raise a GitHub issue: https://github.com/Azure/sap-automation/issues/new/choose
      # At the moment it's sufficient to check for a missing SYSTEMDB, since the
      # code will cope with a missing tenant DB.
      when: not hana_has_system_db
  when:
    - ansible_hostname == primary_instance_name
    - hana_system_replication_needed

- name:                                "HANA HSR: - Check that HANA DB SYSTEM user can access the SYSTEM database"
  # If HSR is already enabled, we cannot read from the secondary node
  become_user:                         "{{ db_sid_admin_user }}"
  ansible.builtin.shell: >
                                       {{ hdbsql_systemdb_command }} '{{ dummy_cmd }}'
  changed_when:                        false
  when:
    - ansible_hostname == primary_instance_name
    - hana_system_replication_needed

- name:                                "HANA HSR: - Check that HANA DB SYSTEM user can access the tenant database {{ hana_tenant_database_name }}"
  # If HSR is already enabled, we cannot read from the secondary node
  become_user:                         "{{ db_sid_admin_user }}"
  ansible.builtin.shell: >
                                       {{ hdbsql_tenant_command }} '{{ dummy_cmd }}'
  changed_when:                        false
  when:
    - hana_has_tenant_db is defined and hana_has_tenant_db
    - ansible_hostname == primary_instance_name
    - hana_system_replication_needed

- name:                                "HANA HSR: - Check HANA log mode is set to normal"
  # If HSR is already enabled, we cannot read from the secondary node
  become_user:                         "{{ db_sid_admin_user }}"
  ansible.builtin.shell: >
                                       {{ hdbsql_systemdb_command }} "{{ get_log_mode_cmd }}"
  register:                            log_mode_status
  failed_when:                         log_mode_status.rc != 0 or ("normal" not in log_mode_status.stdout)
  changed_when:                        false
  when:
    - ansible_hostname == primary_instance_name
    - hana_system_replication_needed
