---

# /*---------------------------------------------------------------------------8
# |                                                                            |
# |     Set trust relationship
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- name:                                HSR - Ensure ssh keys on both nodes
  block:
    - name:                            HSR - Check for existence of id_rsa file
      ansible.builtin.stat:
        path:                          "~/.ssh/id_rsa"
      register:                        id_rsa_file_status
      failed_when:                     false

    - name:                            HSR - Check for existence of id_rsa.pub file
      ansible.builtin.stat:
        path:                          "~/.ssh/id_rsa.pub"
      register:                        id_rsa_file_pub_status
      failed_when:                     false

    - name:                            HSR - Ensure key pair files exist
      ansible.builtin.shell: >
                                       ssh-keygen -b 4096 -t rsa -f ~/.ssh/id_rsa -q -N ""
      when: not (id_rsa_file_status.stat.exists or id_rsa_file_pub_status.stat.exists)

    - name:                            HSR - Ensure the Public SSH key is stored in a variable
      ansible.builtin.command:         cat ~/.ssh/id_rsa.pub
      register:                        "public_ssh_key"
      changed_when:                    false

    - name:                            HSR - Show key {{ ansible_hostname }}
      ansible.builtin.debug:
        var:                           public_ssh_key.stdout
        verbosity:                     4

    - name:                            HSR - Ensure the primary node public key is on the secondary node
      ansible.builtin.authorized_key:
        user:                          "root"
        key:                           "{{ hostvars[primary_instance_name].public_ssh_key.stdout }}"
      when: ansible_hostname == secondary_instance_name

    - name:                            HSR - Ensure the secondary node public key is on the primary node
      ansible.builtin.authorized_key:
        user:                          "root"
        key:                           "{{ hostvars[secondary_instance_name].public_ssh_key.stdout }}"
      when: ansible_hostname == primary_instance_name

    - name:                            HSR - Ensure trust relationship is working from primary to secondary
      ansible.builtin.shell: >
                                       ssh -o StrictHostKeyChecking=no {{ secondary_instance_ip_db }} "hostname -s"
      register:                        primary_to_secondary_ssh_result
      changed_when:                    false
      failed_when:                     primary_to_secondary_ssh_result.stdout_lines[0] != secondary_instance_name
      when: ansible_hostname == primary_instance_name

    - name:                            HSR - Ensure trust relationship is working from secondary to primary
      ansible.builtin.shell: >
                                       ssh -o StrictHostKeyChecking=no {{ primary_instance_ip_db }} "hostname -s"
      register:                        secondary_to_primary_ssh_result
      changed_when:                    false
      failed_when:                     secondary_to_primary_ssh_result.stdout_lines[0] != primary_instance_name
      when: ansible_hostname == secondary_instance_name
