
---

- name:                                Set the NFS Server name
  ansible.builtin.set_fact:
    nfs_server:                        "{{ query('inventory_hostnames', '{{ sap_sid|upper }}_SCS') | first }}"
  when:                                NFS_provider == "NONE"

# Mount Filesystems
- name:                                Mount Filesystems block
  block:
    - name:                            Mount Filesystems when not using external NFS (on observer)
      ansible.builtin.mount:
        src:                           "{{ item.src }}"
        path:                          "{{ item.path }}"
        fstype:                        "{{ item.type }}"
        opts:                          defaults
        state:                         mounted
      loop:
        - { type: 'nfs4',  src: '{{ nfs_server }}:/usr/sap/install',  path: '/usr/sap/install' }
      when:
        - node_tier == 'observer'
        - sap_mnt is undefined
  

- name:                                "Execute RUNINSTALLER"
  become:                              true
  become_user:                         "oracle"
  ansible.builtin.shell: |
                                       set -o errexit
                                       ./RUNINSTALLER -ohcheck -silent |tee -a /oracle/pre-req.log
  register:                            oraprecheck_results
  failed_when:                         oraprecheck_results.rc >= 3
  environment:
    DB_SID:                            "{{db_sid}}"
    CV_ASSUME_DISTID:                  OL7
  args:
    executable:                        /bin/csh        
    chdir:                             "/usr/sap/install/oraserver/LINUX_X86_64/db_home/SAP"

    #Create sqlnet.ora .

# Set Primary and Secondary node names.
- name:                        "Setting the priamry and Secondary DB names"
  ansible.builtin.set_fact:
            ora_primary:           "{{ ansible_play_hosts_all[0] }}"         # Oracle Primary Host
            ora_secondary:         "{{ ansible_play_hosts_all[1] }}"         # Oracle Secondary Host
            current_host:                  "{{ ansible_hostname }}"


- name:                               "Create the sqlnet.ora for Secondary"
  become:                             yes
  become_user:                        oracle
  ansible.builtin.template:
    backup:                           yes
    src:                              sqlnet.ora.j2
    dest:                             "/oracle/{{ db_sid }}/{{ ora_version }}/network/admin/sqlnet.ora"
    mode:                             0644
    force:                            true
  vars:
    hostname:  "{{ ora_secondary }}"
    sap_dbp_hostname: "{{ ora_primary }}"
    sap_dbs_hostname: "{{ ora_secondary }}"
  

  #Create tnsnames.ora .

- name:                               "Create the tnsnames file for Primary"
  become:                             yes
  become_user:                        oracle
  ansible.builtin.template:
    backup:                           yes
    src:                              tnsnames_primary.j2
    dest:                             "/oracle/{{ db_sid }}/{{ ora_version }}/network/admin/tnsnames.ora"
    mode:                             0644
    force:                            true
  vars:
    hostname:  "{{ ora_primary }}"
    sap_dbp_hostname: "{{ ora_primary }}"
    sap_dbs_hostname: "{{ ora_secondary }}"
  
- name:                                "Add environment variables to the Bash profile"
  become:                              true
  become_user:                         "oracle"
  ansible.builtin.blockinfile:
    path: /home/oracle/.bashrc
    insertafter: 'fi '
    block: |
        #User Specific environment
        export ORACLE_HOME=/oracle/{{ db_sid }}/{{ ora_version }}
        export ORACLE_SID={{ db_sid }} 
        export ORACLE_BASE=/oracle
        export LD_LIBRARY_PATH=$ORACLE_HOME/lib
        export TNS_ADMIN=$ORACLE_HOME/network/admin
        export DB_SID={{ db_sid}}
        PATH="$PATH:$ORACLE_HOME/bin"
        export PATH

#Check if tnsping is working to reach Primary and Secondary databases.

# - name:                           "Check TNS Ping"
#   become:                         true
#   become-user:                    "oracle"
#   ansible.builtin.shell: |
#                                   tnsping  {{ ora_primary }} |tee /oracle/sap_primary.log
#                                   tnsping  {{ ora_secondary }} |tee /oracle/sap_primary.log
#   register:                            oratnsping_results
#   failed_when:                         oraprecheck_results.rc >= 1
#   environment:
#   args:
#     executable:                        /bin/bash       
    

...
# /*---------------------------------------------------------------------------8
# |                                   END                                      |
# +------------------------------------4--------------------------------------*/