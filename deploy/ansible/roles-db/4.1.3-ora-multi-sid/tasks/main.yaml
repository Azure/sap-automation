---
#   SAP: Register BOM
#   Install Oracle for Multi-SID installation.
#   1778431 - SAP Installations using Shared Oracle Homes
#   Install Oracle Database
#   Run the Oracle universal installer in silent mode. Refer to SAP Note : 2660017 Oracle Software Installation on Unix
#

- name:                                "ORACLE: Create sap_deployment_automation folder"
  ansible.builtin.file:
    path:                              /etc/sap_deployment_automation
    mode:                              0755
    state:                             directory
    owner:                             oracle
    group:                             oinstall



- name:              "Make oracle:oinstall as owners"          
  become:             true
  become_user:    root
  ansible.builtin.shell: | 
                      chown -R oracle:oinstall /oracle                      
  args:
    creates:          /etc/sap_deployment_automation/oracleowner.txt



- name:                                Create shareddbinstalled.txt
  become:         true
  become_user:    root
  ansible.builtin.file:
    path:                              /etc/sap_deployment_automation/oracleowner.txt
    state:                             touch
    mode:                              0755

- name:              "Permissions for installation folders"          
  become:                              true
  become_user:    root
  ansible.builtin.shell: | 
                      chmod -R 777 /usr/sap/install/                    
  args:
    creates:          /etc/sap_deployment_automation/installfolderperm.txt

- name:                                Create installfolderperm.txt
  become:                              true
  become_user:    root
  ansible.builtin.file:
    path:                              /etc/sap_deployment_automation/installfolderperm.txt
    state:                             touch
    mode:                              0755


#  START OF ORACLE SOFTWARE INSTALLATION USING SAP RUNINSTALLER WRAPPER.
# /*---------------------------------------------------------------------------8
# | Start of Oracle software installation using SAP RUNINSTALLER wrapper.      |
# | Before running Installer set DB_SID and CV_ASSUME_DISTID according to      |
# | SAP Note 2660017 Oracle Software Installation on Unix                      |
# |                                                                            |
# | Step 1 run the Installation for Shared RDBMS                                      |
# +------------------------------------4--------------------------------------*/

- name:               "Install IHRDBMS - Database executables"
  become:                              true
  become_user:    oracle
  ansible.builtin.shell: |
                      set -o errexit
                      ./RUNINSTALLER -shared -create_link no -orabasetab no -silent |tee /etc/sap_deployment_automation/rdbms.log
  register:                           orainstall_results
  failed_when:                        orainstall_results.rc >= 2
  environment:
    DB_SID:                            "{{ db_sid }}"
    CV_ASSUME_DISTID:                  OL7
  args:
    executable:                        /bin/csh        
    chdir:                            "/usr/sap/install/oraserver/LINUX_X86_64/db_home/SAP"
    creates:                          /etc/sap_deployment_automation/shareddbinstalled.txt
  tags:
    - skip_ansible_lint

- name:                                Create shareddbinstalled.txt
  ansible.builtin.file:
    path:                              /etc/sap_deployment_automation/shareddbinstalled.txt
    state:                             touch
    mode:                              0755

#Debug for testing
- name:                           "installer prechecks ouput"
  debug:
    var:                           orainstall_results


#STEP2 RUN THE INSTALLATION - EXECUTE per SID.

- name:               "Execute RUNINSTALLER"
  become:                              true
  become_user:    oracle
  ansible.builtin.shell: |
                      set -o errexit
                      ./RUNINSTALLER -shared -ohsapcfg |tee -a /etc/sap_deployment_automation/"{{ item.sid }}"_install.log
  register:           orainstaller_results
  failed_when:        orainstaller_results.rc >= 2              #installer returns rc=1 (exited with warning) by default when run is silent mode as the oratab file is created only after running the root.sh
  environment:
    DB_SID:                            "{{ item.sid }}"
    CV_ASSUME_DISTID:                  OL7
  loop:    "{{ MULTI_SIDS }}"
  args:
    executable:       /bin/csh        
    chdir:            "/usr/sap/install/oraserver/LINUX_X86_64/db_home/SAP"
    creates:          /etc/sap_deployment_automation/oracleinstall.txt

- name:            "create after a sucessfull install"
  ansible.builtin.shell: |                    
                      touch /etc/sap_deployment_automation/oracleinstall.txt

# /*---------------------------------------------------------------------------8
# | Start of Oracle software installation using SAP RUNINSTALLER wrapper.      |
# | Before running Installer set DB_SID and CV_ASSUME_DISTID according to      |
# | SAP Note 2660017 Oracle Software Installation on Unix                      |
# |                                                                            |
# | Step 3 Post processing                                                     |
# +------------------------------------4--------------------------------------*/

- name:                                "Oracle Post Processing - Run orainstRoot.sh"
  become:                              true
  become_user:                         root
  ansible.builtin.shell:               /oracle/oraInventory/orainstRoot.sh |tee -a /etc/sap_deployment_automation/orainstRoot.log
  register:                            orainstRoot_results
  args:
    creates:                           /etc/sap_deployment_automation/orainstRoot_executed.txt
    executable:                        /bin/csh
  tags:
    - skip_ansible_lint

- name:                                Create orainstRoot_executed.txt
  ansible.builtin.file:
    path:                              /etc/sap_deployment_automation/orainstRoot_executed.txt
    state:                             touch
    mode:                              0755

- name:                                "Oracle Post Processing - Run root.sh"
  become:                              true
  become_user:                         root
  ansible.builtin.shell  :             /oracle/RDBMS/{{ ora_version }}/root.sh |tee -a /etc/sap_deployment_automation/rootscript.log
  register:                            rootscript_results
  args:
    creates:                           /etc/sap_deployment_automation/rootscripts_executed.txt
    executable:                        /bin/csh
  tags:
    - skip_ansible_lint

- name:                                Create rootscripts_executed.txt
  ansible.builtin.file:
    path:                              /etc/sap_deployment_automation/rootscripts_executed.txt
    state:                             touch
    mode:                              0755

- name:                                Permissions
  ansible.builtin.file:
    path:                              /oracle/RDBMS/{{ ora_version }}/bin/oracle
    state:                             file
    mode:                              6751
  tags:
    - skip_ansible_lint

# /*---------------------------------------------------------------------------8
# |                                                                            |
# | Step 4 SBP Patching for Oracle                                             |
# +------------------------------------4--------------------------------------*/

- name:                                Find MOPatch
  ansible.builtin.find:
    paths:                             /usr/sap/install/SBP/SAPSBP
    patterns:                          ["MOPatch"]
    file_type:                         directory
    recurse:                           true
  register:                            mopatch_directory

- name:                                "Debug: Find MOPatch"
  ansible.builtin.fail:
    msg:                               "Too many MOPatches found"
  when:                                mopatch_directory.matched != 1

- name:                                "MOPatch path"
  ansible.builtin.set_fact:
    mopatch_path:                      "{{ mopatch_directory.files[0].path }}"
  when:                                mopatch_directory.matched == 1

- name:                                Check if "OPatch.bck" exists
  ansible.builtin.stat:
    path:                              /oracle/RDBMS/{{ ora_version }}/OPatch.bck
  register:                            opatch_stat

- name:                                backup OPatch
  ansible.builtin.copy:
    src:                               /oracle/RDBMS/{{ ora_version }}/OPatch
    dest:                              /oracle/RDBMS/{{ ora_version }}/OPatch.bck
    remote_src:                        true
    mode:                              0777
  when:
    - not opatch_stat.stat.exists

- name:                                remove old OPatch
  ansible.builtin.file:
    path:                              /oracle/RDBMS/{{ ora_version }}/OPatch
    state:                             absent
  when:
    - not opatch_stat.stat.exists

- name:                                copy OPatch
  become:                              true
  become_user:                         "oracle"
  ansible.builtin.copy:
    src:                               /usr/sap/install/SBP/OPATCH/OPatch
    dest:                              /oracle/RDBMS/{{ ora_version }}
    remote_src:                        true
    mode:                              0777

- name:                                copy MOPatch
  become:                              true
  become_user:                         "oracle"
  ansible.builtin.copy:
    src:                               "{{ mopatch_path }}"
    dest:                              /oracle/RDBMS/{{ ora_version }}
    remote_src:                        true
    mode:                              0777


- name:                                "Oracle Post Processing - SBP Patching"
  become:                              true
  become_user:                         "oracle"
  ansible.builtin.shell:               $IHRDBMS/MOPatch/mopatch.sh -v -s /usr/sap/install/SBP/{{ oracle_sbp_patch }} |tee -a /etc/sap_deployment_automation/sbp.log
  environment:
    DB_SID:                            "{{ db_sid }}"
    CV_ASSUME_DISTID:                  OL7
    IHRDBMS:                           "/oracle/RDBMS/{{ ora_version }}"
    ORACLE_HOME:                       "/oracle/RDBMS/{{ ora_version }}"
    RDBMS:                             "/oracle/RDBMS/{{ ora_version }}"
  register:                            sbpscript_results
  failed_when:                         sbpscript_results.rc >= 2
  args:
    creates:                           /etc/sap_deployment_automation/sbpinstalled.txt
    chdir:                             /usr/sap/install/SBP/
    executable:                        /bin/csh

- name:                                "Post processing installer output"
  ansible.builtin.debug:
    var:                               sbpscript_results.stdout_lines

# - name:                                Remove SAPSBP
#   ansible.builtin.file:
#     path:                              "{{ mopatch_path }}"
#     state:                             absent

- name:                                Create sbpinstalled.txt
  ansible.builtin.file:
    path:                              /etc/sap_deployment_automation/sbpinstalled.txt
    state:                             touch
    mode:                              0755

- name:                                "Add environment variables to the Bash profile"
  become:                              true
  become_user:                         "oracle"
  ansible.builtin.blockinfile:
    path: /home/oracle/.bashrc
    insertafter: 'fi '
    block: |
        #User Specific environment
        export ORACLE_HOME=/oracle/{{ db_sid }}/{{ ora_release }}
        export ORACLE_SID={{ db_sid }} 
        export ORACLE_BASE=/oracle
        export LD_LIBRARY_PATH=$ORACLE_HOME/lib
        export TNS_ADMIN=$ORACLE_HOME/network/admin
        export DB_SID={{ db_sid}}
        PATH="$PATH:$ORACLE_HOME/bin"
        export PATH


- name:                                "create .cshrc"
  become:                              true
  become_user:                         "oracle"
  ansible.builtin.blockinfile:
    create: yes
    path: /home/oracle/.cshrc
    marker_begin: "-- BEGIN"
    marker_end:   "-- END"
    block: |
        #User Specific environment
        setenv  ORACLE_HOME /oracle/{{ db_sid }}/{{ ora_release }}
        setenv  ORACLE_SID  {{ db_sid }} 
        setenv  ORACLE_BASE /oracle
        setenv  LD_LIBRARY_PATH $ORACLE_HOME/lib
        setenv  TNS_ADMIN $ORACLE_HOME/network/admin
        setenv  DB_SID {{ db_sid}}
        set path = ($path $ORACLE_HOME/bin)
    mode: 0755

...
# /*---------------------------------------------------------------------------8
# |                                   END                                      |
# +------------------------------------4--------------------------------------*/