@model AutomationForm.Models.SystemModel

@{
    ViewBag.Title = "System details";
}

<fluent-breadcrumb>
    <fluent-breadcrumb-item href="@Url.Action("Index", "Home")">Home</fluent-breadcrumb-item>
    <fluent-breadcrumb-item href="@Url.Action("Index", "System")">Systems</fluent-breadcrumb-item>
    <fluent-breadcrumb-item href="#">Details</fluent-breadcrumb-item>
</fluent-breadcrumb>

<div class="text-center">
    <h2>System details</h2>
</div>

<div>
    <hr />
    <dl class="dl-horizontal">
        @foreach (var prop in ViewData.ModelMetadata.Properties)
        {
            string value = Html.DisplayText(prop.PropertyName);

            if (prop.ModelType == typeof(Image))
            {
                Image img = (Image)Model.GetType().GetProperty(prop.PropertyName).GetValue(Model);
                if (img != null && (img.os_type         != null || 
                                    img.source_image_id != null || 
                                    img.publisher       != null || 
                                    img.offer           != null || 
                                    img.sku             != null || 
                                    img.version         != null))
                {
                    <dt>
                        @Html.DisplayName(prop.GetDisplayName())
                    </dt>

                    <dd>
                        <p>
                            os_type:         @img.os_type <br>
                            source_image_id: @img.source_image_id <br>
                            publisher:       @img.publisher <br>
                            offer:           @img.offer <br>
                            sku:             @img.sku <br>
                            version:         @img.version
                        </p>
                    </dd>
                }
            }
            else if (value.Length != 0)
            {
                <dt>
                    @Html.DisplayName(prop.GetDisplayName())
                </dt>

                <dd>
                    @if (prop.IsEnumerableType)
                    {
                        var tmp = (string[])Model.GetType().GetProperty(prop.PropertyName).GetValue(Model);
                        foreach (var t in tmp)
                        {
                             @t <br>
                        }
                    }
                    else
                    {
                        @value
                    }
                </dd>
            }
        }
    </dl>
</div>
<p>
    <fluent-anchor appearance="accent" href="@Url.Action("Edit", "System", new { id = Model.Id })">
        <i class="ms-Icon ms-Icon--Edit" aria-hidden="true"></i> Edit
    </fluent-anchor>
    <fluent-anchor href="@Url.Action("Index", "System")">
        Back to list
    </fluent-anchor>
</p>